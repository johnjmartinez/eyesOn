org/opencv/android/BaseLoaderCallback = OpenCV.Android.BaseLoaderCallback
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  mAppContext = MAppContext
  onManagerConnected(I)V = OnManagerConnected(int)
  onPackageInstall(ILorg/opencv/android/InstallCallbackInterface;)V = OnPackageInstall(int, OpenCV.Android.IInstallCallbackInterface)
org/opencv/android/Camera2Renderer = OpenCV.Android.Camera2Renderer
  LOGTAG = Logtag
  closeCamera()V = CloseCamera()
  openCamera(I)V = OpenCamera(int)
  setCameraPreviewSize(II)V = SetCameraPreviewSize(int, int)
org/opencv/android/CameraBridgeViewBase = OpenCV.Android.CameraBridgeViewBase
  <init>(Landroid/content/Context;I)V = .ctor(Android.Content.Context, int)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  CAMERA_ID_ANY = CameraIdAny
  CAMERA_ID_BACK = CameraIdBack
  CAMERA_ID_FRONT = CameraIdFront
  GRAY = Gray
  mCameraIndex = MCameraIndex
  mEnabled = MEnabled
  mFpsMeter = MFpsMeter
  mFrameHeight = MFrameHeight
  mFrameWidth = MFrameWidth
  mMaxHeight = MMaxHeight
  mMaxWidth = MMaxWidth
  mPreviewFormat = MPreviewFormat
  mScale = MScale
  RGBA = Rgba
  AllocateCache()V = AllocateCache()
  connectCamera(II)Z = ConnectCamera(int, int)
  disableFpsMeter()V = DisableFpsMeter()
  disableView()V = DisableView()
  disconnectCamera()V = DisconnectCamera()
  enableFpsMeter()V = EnableFpsMeter()
  enableView()V = EnableView()
  setCameraIndex(I)V = SetCameraIndex(int)
  SetCaptureFormat(I)V = SetCaptureFormat(int)
  setCvCameraViewListener(Lorg/opencv/android/CameraBridgeViewBase$CvCameraViewListener;)V = SetCvCameraViewListener(OpenCV.Android.CameraBridgeViewBase.ICvCameraViewListener)
  setCvCameraViewListener(Lorg/opencv/android/CameraBridgeViewBase$CvCameraViewListener2;)V = SetCvCameraViewListener2(OpenCV.Android.CameraBridgeViewBase.ICvCameraViewListener2)
  setMaxFrameSize(II)V = SetMaxFrameSize(int, int)
  surfaceChanged(Landroid/view/SurfaceHolder;III)V = SurfaceChanged(Android.Views.ISurfaceHolder, Android.Graphics.Format, int, int)
  surfaceCreated(Landroid/view/SurfaceHolder;)V = SurfaceCreated(Android.Views.ISurfaceHolder)
  surfaceDestroyed(Landroid/view/SurfaceHolder;)V = SurfaceDestroyed(Android.Views.ISurfaceHolder)
org/opencv/android/CameraGLRendererBase = OpenCV.Android.CameraGLRendererBase
  <init>(Lorg/opencv/android/CameraGLSurfaceView;)V = .ctor(OpenCV.Android.CameraGLSurfaceView)
  LOGTAG = Logtag
  mCameraHeight = MCameraHeight
  mCameraIndex = MCameraIndex
  mCameraWidth = MCameraWidth
  mEnabled = MEnabled
  mFBOHeight = MFBOHeight
  mFBOWidth = MFBOWidth
  mHaveFBO = MHaveFBO
  mHaveSurface = MHaveSurface
  mIsStarted = MIsStarted
  mMaxCameraHeight = MMaxCameraHeight
  mMaxCameraWidth = MMaxCameraWidth
  mSTexture = MSTexture
  mUpdateST = MUpdateST
  mView = MView
  closeCamera()V = CloseCamera()
  disableView()V = DisableView()
  doStart()V = DoStart()
  doStop()V = DoStop()
  enableView()V = EnableView()
  onDrawFrame(Ljavax/microedition/khronos/opengles/GL10;)V = OnDrawFrame(Javax.Microedition.Khronos.Opengles.IGL10)
  onFrameAvailable(Landroid/graphics/SurfaceTexture;)V = OnFrameAvailable(Android.Graphics.SurfaceTexture)
  onPause()V = OnPause()
  onResume()V = OnResume()
  onSurfaceChanged(Ljavax/microedition/khronos/opengles/GL10;II)V = OnSurfaceChanged(Javax.Microedition.Khronos.Opengles.IGL10, int, int)
  onSurfaceCreated(Ljavax/microedition/khronos/opengles/GL10;Ljavax/microedition/khronos/egl/EGLConfig;)V = OnSurfaceCreated(Javax.Microedition.Khronos.Opengles.IGL10, Javax.Microedition.Khronos.Egl.EGLConfig)
  openCamera(I)V = OpenCamera(int)
  setCameraIndex(I)V = SetCameraIndex(int)
  setCameraPreviewSize(II)V = SetCameraPreviewSize(int, int)
  setMaxCameraPreviewSize(II)V = SetMaxCameraPreviewSize(int, int)
  setPreviewSize(II)V = SetPreviewSize(int, int)
  updateState()V = UpdateState()
org/opencv/android/CameraGLSurfaceView = OpenCV.Android.CameraGLSurfaceView
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  getCameraTextureListener()Lorg/opencv/android/CameraGLSurfaceView$CameraTextureListener; = CameraTextureListener
  disableView()V = DisableView()
  enableView()V = EnableView()
  setCameraIndex(I)V = SetCameraIndex(int)
  setMaxCameraPreviewSize(II)V = SetMaxCameraPreviewSize(int, int)
org/opencv/android/CameraRenderer = OpenCV.Android.CameraRenderer
  LOGTAG = Logtag
  closeCamera()V = CloseCamera()
  openCamera(I)V = OpenCamera(int)
  setCameraPreviewSize(II)V = SetCameraPreviewSize(int, int)
org/opencv/android/FpsMeter = OpenCV.Android.FpsMeter
  <init>()V = .ctor()
  draw(Landroid/graphics/Canvas;FF)V = Draw(Android.Graphics.Canvas, float, float)
  init()V = Init()
  measure()V = Measure()
  setResolution(II)V = SetResolution(int, int)
org/opencv/android/InstallCallbackInterface = OpenCV.Android.IInstallCallbackInterface
  INSTALLATION_PROGRESS = InstallationProgress
  NEW_INSTALLATION = NewInstallation
  getPackageName()Ljava/lang/String; = PackageName
  cancel()V = Cancel()
  install()V = Install()
  wait_install()V = Wait_install()
org/opencv/android/JavaCameraView = OpenCV.Android.JavaCameraView
  <init>(Landroid/content/Context;I)V = .ctor(Android.Content.Context, int)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  mCamera = MCamera
  mCameraFrame = MCameraFrame
  connectCamera(II)Z = ConnectCamera(int, int)
  disconnectCamera()V = DisconnectCamera()
  initializeCamera(II)Z = InitializeCamera(int, int)
  onPreviewFrame([BLandroid/hardware/Camera;)V = OnPreviewFrame(byte[], Android.Hardware.Camera)
  releaseCamera()V = ReleaseCamera()
org/opencv/android/LoaderCallbackInterface = OpenCV.Android.ILoaderCallbackInterface
  INCOMPATIBLE_MANAGER_VERSION = IncompatibleManagerVersion
  INIT_FAILED = InitFailed
  INSTALL_CANCELED = InstallCanceled
  MARKET_ERROR = MarketError
  SUCCESS = Success
  onManagerConnected(I)V = OnManagerConnected(int)
  onPackageInstall(ILorg/opencv/android/InstallCallbackInterface;)V = OnPackageInstall(int, OpenCV.Android.IInstallCallbackInterface)
org/opencv/android/OpenCVLoader = OpenCV.Android.OpenCVLoader
  <init>()V = .ctor()
  OPENCV_VERSION_2_4_10 = OpencvVersion2410
  OPENCV_VERSION_2_4_11 = OpencvVersion2411
  OPENCV_VERSION_2_4_2 = OpencvVersion242
  OPENCV_VERSION_2_4_3 = OpencvVersion243
  OPENCV_VERSION_2_4_4 = OpencvVersion244
  OPENCV_VERSION_2_4_5 = OpencvVersion245
  OPENCV_VERSION_2_4_6 = OpencvVersion246
  OPENCV_VERSION_2_4_7 = OpencvVersion247
  OPENCV_VERSION_2_4_8 = OpencvVersion248
  OPENCV_VERSION_2_4_9 = OpencvVersion249
  OPENCV_VERSION_3_0_0 = OpencvVersion300
  OPENCV_VERSION_3_1_0 = OpencvVersion310
  initAsync(Ljava/lang/String;Landroid/content/Context;Lorg/opencv/android/LoaderCallbackInterface;)Z = InitAsync(string, Android.Content.Context, OpenCV.Android.ILoaderCallbackInterface)
  initDebug()Z = InitDebug()
  initDebug(Z)Z = InitDebug(bool)
org/opencv/android/Utils = OpenCV.Android.Utils
  <init>()V = .ctor()
  bitmapToMat(Landroid/graphics/Bitmap;Lorg/opencv/core/Mat;)V = BitmapToMat(Android.Graphics.Bitmap, OpenCV.Core.Mat)
  bitmapToMat(Landroid/graphics/Bitmap;Lorg/opencv/core/Mat;Z)V = BitmapToMat(Android.Graphics.Bitmap, OpenCV.Core.Mat, bool)
  exportResource(Landroid/content/Context;I)Ljava/lang/String; = ExportResource(Android.Content.Context, int)
  exportResource(Landroid/content/Context;ILjava/lang/String;)Ljava/lang/String; = ExportResource(Android.Content.Context, int, string)
  loadResource(Landroid/content/Context;I)Lorg/opencv/core/Mat; = LoadResource(Android.Content.Context, int)
  loadResource(Landroid/content/Context;II)Lorg/opencv/core/Mat; = LoadResource(Android.Content.Context, int, int)
  matToBitmap(Lorg/opencv/core/Mat;Landroid/graphics/Bitmap;)V = MatToBitmap(OpenCV.Core.Mat, Android.Graphics.Bitmap)
  matToBitmap(Lorg/opencv/core/Mat;Landroid/graphics/Bitmap;Z)V = MatToBitmap(OpenCV.Core.Mat, Android.Graphics.Bitmap, bool)
org/opencv/calib3d/Calib3d = OpenCV.Calib3d.Calib3d
  <init>()V = .ctor()
  CALIB_CB_ADAPTIVE_THRESH = CalibCbAdaptiveThresh
  CALIB_CB_ASYMMETRIC_GRID = CalibCbAsymmetricGrid
  CALIB_CB_CLUSTERING = CalibCbClustering
  CALIB_CB_FAST_CHECK = CalibCbFastCheck
  CALIB_CB_FILTER_QUADS = CalibCbFilterQuads
  CALIB_CB_NORMALIZE_IMAGE = CalibCbNormalizeImage
  CALIB_CB_SYMMETRIC_GRID = CalibCbSymmetricGrid
  CALIB_CHECK_COND = CalibCheckCond
  CALIB_FIX_ASPECT_RATIO = CalibFixAspectRatio
  CALIB_FIX_FOCAL_LENGTH = CalibFixFocalLength
  CALIB_FIX_INTRINSIC = CalibFixIntrinsic
  CALIB_FIX_K1 = CalibFixK1
  CALIB_FIX_K2 = CalibFixK2
  CALIB_FIX_K3 = CalibFixK3
  CALIB_FIX_K4 = CalibFixK4
  CALIB_FIX_K5 = CalibFixK5
  CALIB_FIX_K6 = CalibFixK6
  CALIB_FIX_PRINCIPAL_POINT = CalibFixPrincipalPoint
  CALIB_FIX_S1_S2_S3_S4 = CalibFixS1S2S3S4
  CALIB_FIX_SKEW = CalibFixSkew
  CALIB_FIX_TAUX_TAUY = CalibFixTauxTauy
  CALIB_RATIONAL_MODEL = CalibRationalModel
  CALIB_RECOMPUTE_EXTRINSIC = CalibRecomputeExtrinsic
  CALIB_SAME_FOCAL_LENGTH = CalibSameFocalLength
  CALIB_THIN_PRISM_MODEL = CalibThinPrismModel
  CALIB_TILTED_MODEL = CalibTiltedModel
  CALIB_USE_INTRINSIC_GUESS = CalibUseIntrinsicGuess
  CALIB_USE_LU = CalibUseLu
  CALIB_ZERO_DISPARITY = CalibZeroDisparity
  CALIB_ZERO_TANGENT_DIST = CalibZeroTangentDist
  CV_DLS = CvDls
  CV_EPNP = CvEpnp
  CV_ITERATIVE = CvIterative
  CV_P3P = CvP3p
  FM_7POINT = Fm7point
  FM_8POINT = Fm8point
  FM_LMEDS = FmLmeds
  FM_RANSAC = FmRansac
  LMEDS = Lmeds
  RANSAC = Ransac
  RHO = Rho
  SOLVEPNP_DLS = SolvepnpDls
  SOLVEPNP_EPNP = SolvepnpEpnp
  SOLVEPNP_ITERATIVE = SolvepnpIterative
  SOLVEPNP_P3P = SolvepnpP3p
  SOLVEPNP_UPNP = SolvepnpUpnp
  calibrate(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;Ljava/util/List;)D = Calibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  calibrate(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;Ljava/util/List;I)D = Calibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, int)
  calibrate(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;Ljava/util/List;ILorg/opencv/core/TermCriteria;)D = Calibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, int, OpenCV.Core.TermCriteria)
  calibrateCamera(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;Ljava/util/List;)D = CalibrateCamera(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  calibrateCamera(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;Ljava/util/List;I)D = CalibrateCamera(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, int)
  calibrateCamera(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;Ljava/util/List;ILorg/opencv/core/TermCriteria;)D = CalibrateCamera(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, int, OpenCV.Core.TermCriteria)
  calibrationMatrixValues(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;DD[D[D[DLorg/opencv/core/Point;[D)V = CalibrationMatrixValues(OpenCV.Core.Mat, OpenCV.Core.Size, double, double, double[], double[], double[], OpenCV.Core.Point, double[])
  composeRT(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ComposeRT(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  composeRT(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ComposeRT(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  computeCorrespondEpilines(Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ComputeCorrespondEpilines(OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Mat)
  convertPointsFromHomogeneous(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ConvertPointsFromHomogeneous(OpenCV.Core.Mat, OpenCV.Core.Mat)
  convertPointsToHomogeneous(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ConvertPointsToHomogeneous(OpenCV.Core.Mat, OpenCV.Core.Mat)
  correctMatches(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = CorrectMatches(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  decomposeEssentialMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = DecomposeEssentialMat(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  decomposeHomographyMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;Ljava/util/List;Ljava/util/List;)I = DecomposeHomographyMat(OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  decomposeProjectionMatrix(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = DecomposeProjectionMatrix(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  decomposeProjectionMatrix(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = DecomposeProjectionMatrix(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  distortPoints(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = DistortPoints(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  distortPoints(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;D)V = DistortPoints(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double)
  drawChessboardCorners(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/MatOfPoint2f;Z)V = DrawChessboardCorners(OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.MatOfPoint2f, bool)
  estimateAffine3D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = EstimateAffine3D(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  estimateAffine3D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DD)I = EstimateAffine3D(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, double)
  estimateNewCameraMatrixForUndistortRectify(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = EstimateNewCameraMatrixForUndistortRectify(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat)
  estimateNewCameraMatrixForUndistortRectify(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Size;D)V = EstimateNewCameraMatrixForUndistortRectify(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Size, double)
  filterSpeckles(Lorg/opencv/core/Mat;DID)V = FilterSpeckles(OpenCV.Core.Mat, double, int, double)
  filterSpeckles(Lorg/opencv/core/Mat;DIDLorg/opencv/core/Mat;)V = FilterSpeckles(OpenCV.Core.Mat, double, int, double, OpenCV.Core.Mat)
  findChessboardCorners(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/MatOfPoint2f;)Z = FindChessboardCorners(OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.MatOfPoint2f)
  findChessboardCorners(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/MatOfPoint2f;I)Z = FindChessboardCorners(OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.MatOfPoint2f, int)
  findCirclesGrid(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;)Z = FindCirclesGrid(OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat)
  findCirclesGrid(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;I)Z = FindCirclesGrid(OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, int)
  findEssentialMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = FindEssentialMat(OpenCV.Core.Mat, OpenCV.Core.Mat)
  findEssentialMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Point;IDD)Lorg/opencv/core/Mat; = FindEssentialMat(OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Point, int, double, double)
  findEssentialMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Point;IDDLorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = FindEssentialMat(OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Point, int, double, double, OpenCV.Core.Mat)
  findEssentialMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = FindEssentialMat(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  findEssentialMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IDD)Lorg/opencv/core/Mat; = FindEssentialMat(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, double, double)
  findEssentialMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IDDLorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = FindEssentialMat(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, double, double, OpenCV.Core.Mat)
  findFundamentalMat(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;)Lorg/opencv/core/Mat; = FindFundamentalMat(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f)
  findFundamentalMat(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;IDD)Lorg/opencv/core/Mat; = FindFundamentalMat(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, int, double, double)
  findFundamentalMat(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;IDDLorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = FindFundamentalMat(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, int, double, double, OpenCV.Core.Mat)
  findHomography(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;)Lorg/opencv/core/Mat; = FindHomography(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f)
  findHomography(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;ID)Lorg/opencv/core/Mat; = FindHomography(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, int, double)
  findHomography(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;IDLorg/opencv/core/Mat;ID)Lorg/opencv/core/Mat; = FindHomography(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, int, double, OpenCV.Core.Mat, int, double)
  getOptimalNewCameraMatrix(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;D)Lorg/opencv/core/Mat; = GetOptimalNewCameraMatrix(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, double)
  getOptimalNewCameraMatrix(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;DLorg/opencv/core/Size;Lorg/opencv/core/Rect;Z)Lorg/opencv/core/Mat; = GetOptimalNewCameraMatrix(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, double, OpenCV.Core.Size, OpenCV.Core.Rect, bool)
  getValidDisparityROI(Lorg/opencv/core/Rect;Lorg/opencv/core/Rect;III)Lorg/opencv/core/Rect; = GetValidDisparityROI(OpenCV.Core.Rect, OpenCV.Core.Rect, int, int, int)
  initCameraMatrix2D(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;)Lorg/opencv/core/Mat; = InitCameraMatrix2D(System.Collections.Generic.IList<OpenCV.Core.MatOfPoint3f>, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint2f>, OpenCV.Core.Size)
  initCameraMatrix2D(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Size;D)Lorg/opencv/core/Mat; = InitCameraMatrix2D(System.Collections.Generic.IList<OpenCV.Core.MatOfPoint3f>, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint2f>, OpenCV.Core.Size, double)
  initUndistortRectifyMap(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = InitUndistortRectifyMap(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int, OpenCV.Core.Mat, OpenCV.Core.Mat)
  matMulDeriv(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = MatMulDeriv(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  projectPoints(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/MatOfPoint2f;)V = ProjectPoints(OpenCV.Core.MatOfPoint3f, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.MatOfPoint2f)
  projectPoints(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;D)V = ProjectPoints(OpenCV.Core.MatOfPoint3f, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, double)
  projectPoints(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ProjectPoints(OpenCV.Core.MatOfPoint3f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  projectPoints(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;)V = ProjectPoints(OpenCV.Core.MatOfPoint3f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Mat)
  recoverPose(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = RecoverPose(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  recoverPose(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Point;)I = RecoverPose(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Point)
  recoverPose(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Point;Lorg/opencv/core/Mat;)I = RecoverPose(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Point, OpenCV.Core.Mat)
  recoverPose(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = RecoverPose(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  recoverPose(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = RecoverPose(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  reprojectImageTo3D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ReprojectImageTo3D(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  reprojectImageTo3D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Z)V = ReprojectImageTo3D(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, bool)
  reprojectImageTo3D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ZI)V = ReprojectImageTo3D(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, bool, int)
  Rodrigues(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Rodrigues(OpenCV.Core.Mat, OpenCV.Core.Mat)
  Rodrigues(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Rodrigues(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  RQDecomp3x3(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)[D = RQDecomp3x3(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  RQDecomp3x3(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)[D = RQDecomp3x3(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  sampsonDistance(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = SampsonDistance(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  solvePnP(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = SolvePnP(OpenCV.Core.MatOfPoint3f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.Mat, OpenCV.Core.Mat)
  solvePnP(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ZI)Z = SolvePnP(OpenCV.Core.MatOfPoint3f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.Mat, OpenCV.Core.Mat, bool, int)
  solvePnPRansac(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = SolvePnPRansac(OpenCV.Core.MatOfPoint3f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.Mat, OpenCV.Core.Mat)
  solvePnPRansac(Lorg/opencv/core/MatOfPoint3f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ZIFDLorg/opencv/core/Mat;I)Z = SolvePnPRansac(OpenCV.Core.MatOfPoint3f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.Mat, OpenCV.Core.Mat, bool, int, float, double, OpenCV.Core.Mat, int)
  stereoCalibrate(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = StereoCalibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat)
  stereoCalibrate(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)D = StereoCalibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  stereoCalibrate(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/TermCriteria;)D = StereoCalibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.TermCriteria)
  stereoCalibrate(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = StereoCalibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  stereoCalibrate(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)D = StereoCalibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  stereoCalibrate(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/TermCriteria;)D = StereoCalibrate(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.TermCriteria)
  stereoRectify(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = StereoRectify(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  stereoRectify(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = StereoRectify(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  stereoRectifyUncalibrated(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = StereoRectifyUncalibrated(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat)
  stereoRectifyUncalibrated(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;D)Z = StereoRectifyUncalibrated(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, double)
  triangulatePoints(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = TriangulatePoints(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  undistortImage(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = UndistortImage(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  undistortImage(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;)V = UndistortImage(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size)
  undistortPoints(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = UndistortPoints(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  undistortPoints(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = UndistortPoints(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  validateDisparity(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = ValidateDisparity(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  validateDisparity(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = ValidateDisparity(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
org/opencv/calib3d/StereoBM = OpenCV.Calib3d.StereoBM
  <init>(J)V = .ctor(long)
  PREFILTER_NORMALIZED_RESPONSE = PrefilterNormalizedResponse
  PREFILTER_XSOBEL = PrefilterXsobel
  getPreFilterCap()I = PreFilterCap
  setPreFilterCap(I)V = PreFilterCap
  getPreFilterSize()I = PreFilterSize
  setPreFilterSize(I)V = PreFilterSize
  getPreFilterType()I = PreFilterType
  setPreFilterType(I)V = PreFilterType
  getROI1()Lorg/opencv/core/Rect; = ROI1
  setROI1(Lorg/opencv/core/Rect;)V = ROI1
  getROI2()Lorg/opencv/core/Rect; = ROI2
  setROI2(Lorg/opencv/core/Rect;)V = ROI2
  getSmallerBlockSize()I = SmallerBlockSize
  setSmallerBlockSize(I)V = SmallerBlockSize
  getTextureThreshold()I = TextureThreshold
  setTextureThreshold(I)V = TextureThreshold
  getUniquenessRatio()I = UniquenessRatio
  setUniquenessRatio(I)V = UniquenessRatio
  create()Lorg/opencv/calib3d/StereoBM; = Create()
  create(II)Lorg/opencv/calib3d/StereoBM; = Create(int, int)
org/opencv/calib3d/StereoMatcher = OpenCV.Calib3d.StereoMatcher
  <init>(J)V = .ctor(long)
  DISP_SCALE = DispScale
  DISP_SHIFT = DispShift
  getBlockSize()I = BlockSize
  setBlockSize(I)V = BlockSize
  getDisp12MaxDiff()I = Disp12MaxDiff
  setDisp12MaxDiff(I)V = Disp12MaxDiff
  getMinDisparity()I = MinDisparity
  setMinDisparity(I)V = MinDisparity
  getNumDisparities()I = NumDisparities
  setNumDisparities(I)V = NumDisparities
  getSpeckleRange()I = SpeckleRange
  setSpeckleRange(I)V = SpeckleRange
  getSpeckleWindowSize()I = SpeckleWindowSize
  setSpeckleWindowSize(I)V = SpeckleWindowSize
  compute(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Compute(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/calib3d/StereoSGBM = OpenCV.Calib3d.StereoSGBM
  <init>(J)V = .ctor(long)
  MODE_HH = ModeHh
  MODE_SGBM = ModeSgbm
  MODE_SGBM_3WAY = ModeSgbm3way
  getMode()I = Mode
  setMode(I)V = Mode
  getP1()I = P1
  setP1(I)V = P1
  getP2()I = P2
  setP2(I)V = P2
  getPreFilterCap()I = PreFilterCap
  setPreFilterCap(I)V = PreFilterCap
  getUniquenessRatio()I = UniquenessRatio
  setUniquenessRatio(I)V = UniquenessRatio
  create(III)Lorg/opencv/calib3d/StereoSGBM; = Create(int, int, int)
  create(IIIIIIIIIII)Lorg/opencv/calib3d/StereoSGBM; = Create(int, int, int, int, int, int, int, int, int, int, int)
org/opencv/core/Algorithm = OpenCV.Core.Algorithm
  <init>(J)V = .ctor(long)
  nativeObj = NativeObj
  getDefaultName()Ljava/lang/String; = DefaultName
  clear()V = Clear()
  save(Ljava/lang/String;)V = Save(string)
org/opencv/core/Core = OpenCV.Core.Core
  <init>()V = .ctor()
  BadAlign = BadAlign
  BadAlphaChannel = BadAlphaChannel
  BadCallBack = BadCallBack
  BadCOI = BadCOI
  BadDataPtr = BadDataPtr
  BadDepth = BadDepth
  BadImageSize = BadImageSize
  BadModelOrChSeq = BadModelOrChSeq
  BadNumChannel1U = BadNumChannel1U
  BadNumChannels = BadNumChannels
  BadOffset = BadOffset
  BadOrder = BadOrder
  BadOrigin = BadOrigin
  BadROISize = BadROISize
  BadStep = BadStep
  BadTileSize = BadTileSize
  BORDER_CONSTANT = BorderConstant
  BORDER_DEFAULT = BorderDefault
  BORDER_ISOLATED = BorderIsolated
  BORDER_REFLECT = BorderReflect
  BORDER_REFLECT101 = BorderReflect101
  BORDER_REFLECT_101 = BorderReflect101
  BORDER_REPLICATE = BorderReplicate
  BORDER_TRANSPARENT = BorderTransparent
  BORDER_WRAP = BorderWrap
  CMP_EQ = CmpEq
  CMP_GE = CmpGe
  CMP_GT = CmpGt
  CMP_LE = CmpLe
  CMP_LT = CmpLt
  CMP_NE = CmpNe
  COVAR_COLS = CovarCols
  COVAR_NORMAL = CovarNormal
  COVAR_ROWS = CovarRows
  COVAR_SCALE = CovarScale
  COVAR_SCRAMBLED = CovarScrambled
  COVAR_USE_AVG = CovarUseAvg
  DCT_INVERSE = DctInverse
  DCT_ROWS = DctRows
  DECOMP_CHOLESKY = DecompCholesky
  DECOMP_EIG = DecompEig
  DECOMP_LU = DecompLu
  DECOMP_NORMAL = DecompNormal
  DECOMP_QR = DecompQr
  DECOMP_SVD = DecompSvd
  DFT_COMPLEX_OUTPUT = DftComplexOutput
  DFT_INVERSE = DftInverse
  DFT_REAL_OUTPUT = DftRealOutput
  DFT_ROWS = DftRows
  DFT_SCALE = DftScale
  FILLED = Filled
  FONT_HERSHEY_COMPLEX = FontHersheyComplex
  FONT_HERSHEY_COMPLEX_SMALL = FontHersheyComplexSmall
  FONT_HERSHEY_DUPLEX = FontHersheyDuplex
  FONT_HERSHEY_PLAIN = FontHersheyPlain
  FONT_HERSHEY_SCRIPT_COMPLEX = FontHersheyScriptComplex
  FONT_HERSHEY_SCRIPT_SIMPLEX = FontHersheyScriptSimplex
  FONT_HERSHEY_SIMPLEX = FontHersheySimplex
  FONT_HERSHEY_TRIPLEX = FontHersheyTriplex
  FONT_ITALIC = FontItalic
  GEMM_1_T = Gemm1T
  GEMM_2_T = Gemm2T
  GEMM_3_T = Gemm3T
  GpuApiCallError = GpuApiCallError
  GpuNotSupported = GpuNotSupported
  HeaderIsNull = HeaderIsNull
  KMEANS_PP_CENTERS = KmeansPpCenters
  KMEANS_RANDOM_CENTERS = KmeansRandomCenters
  KMEANS_USE_INITIAL_LABELS = KmeansUseInitialLabels
  LINE_4 = Line4
  LINE_8 = Line8
  LINE_AA = LineAa
  MaskIsTiled = MaskIsTiled
  NATIVE_LIBRARY_NAME = NativeLibraryName
  NORM_HAMMING = NormHamming
  NORM_HAMMING2 = NormHamming2
  NORM_INF = NormInf
  NORM_L1 = NormL1
  NORM_L2 = NormL2
  NORM_L2SQR = NormL2sqr
  NORM_MINMAX = NormMinmax
  NORM_RELATIVE = NormRelative
  NORM_TYPE_MASK = NormTypeMask
  OpenCLApiCallError = OpenCLApiCallError
  OpenCLDoubleNotSupported = OpenCLDoubleNotSupported
  OpenCLInitError = OpenCLInitError
  OpenCLNoAMDBlasFft = OpenCLNoAMDBlasFft
  OpenGlApiCallError = OpenGlApiCallError
  OpenGlNotSupported = OpenGlNotSupported
  REDUCE_AVG = ReduceAvg
  REDUCE_MAX = ReduceMax
  REDUCE_MIN = ReduceMin
  REDUCE_SUM = ReduceSum
  SORT_ASCENDING = SortAscending
  SORT_DESCENDING = SortDescending
  SORT_EVERY_COLUMN = SortEveryColumn
  SORT_EVERY_ROW = SortEveryRow
  StsAssert = StsAssert
  StsAutoTrace = StsAutoTrace
  StsBackTrace = StsBackTrace
  StsBadArg = StsBadArg
  StsBadFlag = StsBadFlag
  StsBadFunc = StsBadFunc
  StsBadMask = StsBadMask
  StsBadMemBlock = StsBadMemBlock
  StsBadPoint = StsBadPoint
  StsBadSize = StsBadSize
  StsDivByZero = StsDivByZero
  StsError = StsError
  StsFilterOffsetErr = StsFilterOffsetErr
  StsFilterStructContentErr = StsFilterStructContentErr
  StsInplaceNotSupported = StsInplaceNotSupported
  StsInternal = StsInternal
  StsKernelStructContentErr = StsKernelStructContentErr
  StsNoConv = StsNoConv
  StsNoMem = StsNoMem
  StsNotImplemented = StsNotImplemented
  StsNullPtr = StsNullPtr
  StsObjectNotFound = StsObjectNotFound
  StsOk = StsOk
  StsOutOfRange = StsOutOfRange
  StsParseError = StsParseError
  StsUnmatchedFormats = StsUnmatchedFormats
  StsUnmatchedSizes = StsUnmatchedSizes
  StsUnsupportedFormat = StsUnsupportedFormat
  StsVecLengthErr = StsVecLengthErr
  SVD_FULL_UV = SvdFullUv
  SVD_MODIFY_A = SvdModifyA
  SVD_NO_UV = SvdNoUv
  VERSION = Version
  VERSION_MAJOR = VersionMajor
  VERSION_MINOR = VersionMinor
  VERSION_REVISION = VersionRevision
  VERSION_STATUS = VersionStatus
  getBuildInformation()Ljava/lang/String; = BuildInformation
  getCPUTickCount()J = CPUTickCount
  getNumberOfCPUs()I = NumberOfCPUs
  getNumThreads()I = NumThreads
  setNumThreads(I)V = NumThreads
  getThreadNum()I = ThreadNum
  getTickCount()J = TickCount
  getTickFrequency()D = TickFrequency
  absdiff(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Absdiff(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  absdiff(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = Absdiff(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  add(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Add(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  add(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Add(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  add(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Add(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  add(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = Add(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  add(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Add(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, OpenCV.Core.Mat)
  add(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Add(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  addWeighted(Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;DDLorg/opencv/core/Mat;)V = AddWeighted(OpenCV.Core.Mat, double, OpenCV.Core.Mat, double, double, OpenCV.Core.Mat)
  addWeighted(Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;DDLorg/opencv/core/Mat;I)V = AddWeighted(OpenCV.Core.Mat, double, OpenCV.Core.Mat, double, double, OpenCV.Core.Mat, int)
  batchDistance(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)V = BatchDistance(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat)
  batchDistance(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;II)V = BatchDistance(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, int, int)
  batchDistance(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;IILorg/opencv/core/Mat;IZ)V = BatchDistance(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, int, int, OpenCV.Core.Mat, int, bool)
  bitwise_and(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_and(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  bitwise_and(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_and(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  bitwise_not(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_not(OpenCV.Core.Mat, OpenCV.Core.Mat)
  bitwise_not(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_not(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  bitwise_or(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_or(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  bitwise_or(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_or(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  bitwise_xor(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_xor(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  bitwise_xor(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Bitwise_xor(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  borderInterpolate(III)I = BorderInterpolate(int, int, int)
  calcCovarMatrix(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = CalcCovarMatrix(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  calcCovarMatrix(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = CalcCovarMatrix(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  cartToPolar(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = CartToPolar(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  cartToPolar(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Z)V = CartToPolar(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, bool)
  checkRange(Lorg/opencv/core/Mat;)Z = CheckRange(OpenCV.Core.Mat)
  checkRange(Lorg/opencv/core/Mat;ZDD)Z = CheckRange(OpenCV.Core.Mat, bool, double, double)
  compare(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Compare(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  compare(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;I)V = Compare(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, int)
  completeSymm(Lorg/opencv/core/Mat;)V = CompleteSymm(OpenCV.Core.Mat)
  completeSymm(Lorg/opencv/core/Mat;Z)V = CompleteSymm(OpenCV.Core.Mat, bool)
  convertScaleAbs(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ConvertScaleAbs(OpenCV.Core.Mat, OpenCV.Core.Mat)
  convertScaleAbs(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DD)V = ConvertScaleAbs(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double)
  copyMakeBorder(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIIII)V = CopyMakeBorder(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int, int, int)
  copyMakeBorder(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIIIILorg/opencv/core/Scalar;)V = CopyMakeBorder(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int, int, int, OpenCV.Core.Scalar)
  countNonZero(Lorg/opencv/core/Mat;)I = CountNonZero(OpenCV.Core.Mat)
  cubeRoot(F)F = CubeRoot(float)
  dct(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Dct(OpenCV.Core.Mat, OpenCV.Core.Mat)
  dct(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Dct(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  determinant(Lorg/opencv/core/Mat;)D = Determinant(OpenCV.Core.Mat)
  dft(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Dft(OpenCV.Core.Mat, OpenCV.Core.Mat)
  dft(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = Dft(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  divide(DLorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Divide(double, OpenCV.Core.Mat, OpenCV.Core.Mat)
  divide(DLorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Divide(double, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  divide(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Divide(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  divide(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;D)V = Divide(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double)
  divide(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DI)V = Divide(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, int)
  divide(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = Divide(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  divide(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;D)V = Divide(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, double)
  divide(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;DI)V = Divide(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, double, int)
  eigen(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = Eigen(OpenCV.Core.Mat, OpenCV.Core.Mat)
  eigen(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = Eigen(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  exp(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Exp(OpenCV.Core.Mat, OpenCV.Core.Mat)
  extractChannel(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = ExtractChannel(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  fastAtan2(FF)F = FastAtan2(float, float)
  findNonZero(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = FindNonZero(OpenCV.Core.Mat, OpenCV.Core.Mat)
  flip(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Flip(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  gemm(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;DLorg/opencv/core/Mat;)V = Gemm(OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Mat, double, OpenCV.Core.Mat)
  gemm(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;DLorg/opencv/core/Mat;I)V = Gemm(OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Mat, double, OpenCV.Core.Mat, int)
  getOptimalDFTSize(I)I = GetOptimalDFTSize(int)
  hconcat(Ljava/util/List;Lorg/opencv/core/Mat;)V = Hconcat(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat)
  idct(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Idct(OpenCV.Core.Mat, OpenCV.Core.Mat)
  idct(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Idct(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  idft(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Idft(OpenCV.Core.Mat, OpenCV.Core.Mat)
  idft(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = Idft(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  inRange(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = InRange(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  insertChannel(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = InsertChannel(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  invert(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = Invert(OpenCV.Core.Mat, OpenCV.Core.Mat)
  invert(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)D = Invert(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  kmeans(Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/TermCriteria;II)D = Kmeans(OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.TermCriteria, int, int)
  kmeans(Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/TermCriteria;IILorg/opencv/core/Mat;)D = Kmeans(OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.TermCriteria, int, int, OpenCV.Core.Mat)
  log(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Log(OpenCV.Core.Mat, OpenCV.Core.Mat)
  LUT(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = LUT(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  magnitude(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Magnitude(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  Mahalanobis(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = Mahalanobis(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  max(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Max(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  max(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = Max(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  mean(Lorg/opencv/core/Mat;)Lorg/opencv/core/Scalar; = Mean(OpenCV.Core.Mat)
  mean(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Scalar; = Mean(OpenCV.Core.Mat, OpenCV.Core.Mat)
  meanStdDev(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/MatOfDouble;)V = MeanStdDev(OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.MatOfDouble)
  meanStdDev(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/MatOfDouble;Lorg/opencv/core/Mat;)V = MeanStdDev(OpenCV.Core.Mat, OpenCV.Core.MatOfDouble, OpenCV.Core.MatOfDouble, OpenCV.Core.Mat)
  merge(Ljava/util/List;Lorg/opencv/core/Mat;)V = Merge(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat)
  min(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Min(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  min(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = Min(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  minMaxLoc(Lorg/opencv/core/Mat;)Lorg/opencv/core/Core$MinMaxLocResult; = MinMaxLoc(OpenCV.Core.Mat)
  minMaxLoc(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Core$MinMaxLocResult; = MinMaxLoc(OpenCV.Core.Mat, OpenCV.Core.Mat)
  mixChannels(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/MatOfInt;)V = MixChannels(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.MatOfInt)
  mulSpectrums(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = MulSpectrums(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  mulSpectrums(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IZ)V = MulSpectrums(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, bool)
  multiply(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Multiply(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  multiply(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;D)V = Multiply(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double)
  multiply(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DI)V = Multiply(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, int)
  multiply(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = Multiply(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  multiply(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;D)V = Multiply(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, double)
  multiply(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;DI)V = Multiply(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, double, int)
  mulTransposed(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Z)V = MulTransposed(OpenCV.Core.Mat, OpenCV.Core.Mat, bool)
  mulTransposed(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ZLorg/opencv/core/Mat;D)V = MulTransposed(OpenCV.Core.Mat, OpenCV.Core.Mat, bool, OpenCV.Core.Mat, double)
  mulTransposed(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ZLorg/opencv/core/Mat;DI)V = MulTransposed(OpenCV.Core.Mat, OpenCV.Core.Mat, bool, OpenCV.Core.Mat, double, int)
  norm(Lorg/opencv/core/Mat;)D = Norm(OpenCV.Core.Mat)
  norm(Lorg/opencv/core/Mat;I)D = Norm(OpenCV.Core.Mat, int)
  norm(Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)D = Norm(OpenCV.Core.Mat, int, OpenCV.Core.Mat)
  norm(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = Norm(OpenCV.Core.Mat, OpenCV.Core.Mat)
  norm(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)D = Norm(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  norm(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)D = Norm(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat)
  normalize(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Normalize(OpenCV.Core.Mat, OpenCV.Core.Mat)
  normalize(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDI)V = Normalize(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int)
  normalize(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDII)V = Normalize(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int, int)
  normalize(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDIILorg/opencv/core/Mat;)V = Normalize(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int, int, OpenCV.Core.Mat)
  patchNaNs(Lorg/opencv/core/Mat;)V = PatchNaNs(OpenCV.Core.Mat)
  patchNaNs(Lorg/opencv/core/Mat;D)V = PatchNaNs(OpenCV.Core.Mat, double)
  PCABackProject(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PCABackProject(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  PCACompute(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PCACompute(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  PCACompute(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;D)V = PCACompute(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double)
  PCACompute(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = PCACompute(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  PCAProject(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PCAProject(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  perspectiveTransform(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PerspectiveTransform(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  phase(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Phase(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  phase(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Z)V = Phase(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, bool)
  polarToCart(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PolarToCart(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  polarToCart(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Z)V = PolarToCart(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, bool)
  pow(Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;)V = Pow(OpenCV.Core.Mat, double, OpenCV.Core.Mat)
  PSNR(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = PSNR(OpenCV.Core.Mat, OpenCV.Core.Mat)
  randn(Lorg/opencv/core/Mat;DD)V = Randn(OpenCV.Core.Mat, double, double)
  randShuffle(Lorg/opencv/core/Mat;)V = RandShuffle(OpenCV.Core.Mat)
  randShuffle(Lorg/opencv/core/Mat;D)V = RandShuffle(OpenCV.Core.Mat, double)
  randu(Lorg/opencv/core/Mat;DD)V = Randu(OpenCV.Core.Mat, double, double)
  reduce(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = Reduce(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  reduce(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = Reduce(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  repeat(Lorg/opencv/core/Mat;IILorg/opencv/core/Mat;)V = Repeat(OpenCV.Core.Mat, int, int, OpenCV.Core.Mat)
  scaleAdd(Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ScaleAdd(OpenCV.Core.Mat, double, OpenCV.Core.Mat, OpenCV.Core.Mat)
  setErrorVerbosity(Z)V = SetErrorVerbosity(bool)
  setIdentity(Lorg/opencv/core/Mat;)V = SetIdentity(OpenCV.Core.Mat)
  setIdentity(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;)V = SetIdentity(OpenCV.Core.Mat, OpenCV.Core.Scalar)
  solve(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = Solve(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  solve(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)Z = Solve(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  solveCubic(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = SolveCubic(OpenCV.Core.Mat, OpenCV.Core.Mat)
  solvePoly(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = SolvePoly(OpenCV.Core.Mat, OpenCV.Core.Mat)
  solvePoly(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)D = SolvePoly(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  sort(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Sort(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  sortIdx(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = SortIdx(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  split(Lorg/opencv/core/Mat;Ljava/util/List;)V = Split(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  sqrt(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Sqrt(OpenCV.Core.Mat, OpenCV.Core.Mat)
  subtract(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Subtract(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  subtract(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Subtract(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  subtract(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Subtract(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  subtract(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)V = Subtract(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat)
  subtract(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Subtract(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, OpenCV.Core.Mat)
  subtract(Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Subtract(OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  sumElems(Lorg/opencv/core/Mat;)Lorg/opencv/core/Scalar; = SumElems(OpenCV.Core.Mat)
  SVBackSubst(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = SVBackSubst(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  SVDecomp(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = SVDecomp(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  SVDecomp(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = SVDecomp(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  trace(Lorg/opencv/core/Mat;)Lorg/opencv/core/Scalar; = Trace(OpenCV.Core.Mat)
  transform(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Transform(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  transpose(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Transpose(OpenCV.Core.Mat, OpenCV.Core.Mat)
  vconcat(Ljava/util/List;Lorg/opencv/core/Mat;)V = Vconcat(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat)
org/opencv/core/CvException = OpenCV.Core.CvException
  <init>(Ljava/lang/String;)V = .ctor(string)
org/opencv/core/CvType = OpenCV.Core.CvType
  <init>()V = .ctor()
  CV_16S = Cv16s
  CV_16SC1 = Cv16sc1
  CV_16SC2 = Cv16sc2
  CV_16SC3 = Cv16sc3
  CV_16SC4 = Cv16sc4
  CV_16U = Cv16u
  CV_16UC1 = Cv16uc1
  CV_16UC2 = Cv16uc2
  CV_16UC3 = Cv16uc3
  CV_16UC4 = Cv16uc4
  CV_32F = Cv32f
  CV_32FC1 = Cv32fc1
  CV_32FC2 = Cv32fc2
  CV_32FC3 = Cv32fc3
  CV_32FC4 = Cv32fc4
  CV_32S = Cv32s
  CV_32SC1 = Cv32sc1
  CV_32SC2 = Cv32sc2
  CV_32SC3 = Cv32sc3
  CV_32SC4 = Cv32sc4
  CV_64F = Cv64f
  CV_64FC1 = Cv64fc1
  CV_64FC2 = Cv64fc2
  CV_64FC3 = Cv64fc3
  CV_64FC4 = Cv64fc4
  CV_8S = Cv8s
  CV_8SC1 = Cv8sc1
  CV_8SC2 = Cv8sc2
  CV_8SC3 = Cv8sc3
  CV_8SC4 = Cv8sc4
  CV_8U = Cv8u
  CV_8UC1 = Cv8uc1
  CV_8UC2 = Cv8uc2
  CV_8UC3 = Cv8uc3
  CV_8UC4 = Cv8uc4
  CV_USRTYPE1 = CvUsrtype1
  channels(I)I = Channels(int)
  CV_16SC(I)I = CV_16SC(int)
  CV_16UC(I)I = CV_16UC(int)
  CV_32FC(I)I = CV_32FC(int)
  CV_32SC(I)I = CV_32SC(int)
  CV_64FC(I)I = CV_64FC(int)
  CV_8SC(I)I = CV_8SC(int)
  CV_8UC(I)I = CV_8UC(int)
  depth(I)I = Depth(int)
  ELEM_SIZE(I)I = ELEM_SIZE(int)
  isInteger(I)Z = IsInteger(int)
  makeType(II)I = MakeType(int, int)
  typeToString(I)Ljava/lang/String; = TypeToString(int)
org/opencv/core/DMatch = OpenCV.Core.DMatch
  <init>()V = .ctor()
  <init>(IIF)V = .ctor(int, int, float)
  <init>(IIIF)V = .ctor(int, int, int, float)
  distance = Distance
  imgIdx = ImgIdx
  queryIdx = QueryIdx
  trainIdx = TrainIdx
  lessThan(Lorg/opencv/core/DMatch;)Z = LessThan(OpenCV.Core.DMatch)
org/opencv/core/KeyPoint = OpenCV.Core.KeyPoint
  <init>()V = .ctor()
  <init>(FFF)V = .ctor(float, float, float)
  <init>(FFFF)V = .ctor(float, float, float, float)
  <init>(FFFFF)V = .ctor(float, float, float, float, float)
  <init>(FFFFFI)V = .ctor(float, float, float, float, float, int)
  <init>(FFFFFII)V = .ctor(float, float, float, float, float, int, int)
  angle = Angle
  class_id = ClassId
  octave = Octave
  pt = Pt
  response = Response
  size = Size
org/opencv/core/Mat = OpenCV.Core.Mat
  <init>()V = .ctor()
  <init>(III)V = .ctor(int, int, int)
  <init>(IIILorg/opencv/core/Scalar;)V = .ctor(int, int, int, OpenCV.Core.Scalar)
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;Lorg/opencv/core/Range;)V = .ctor(OpenCV.Core.Mat, OpenCV.Core.Range)
  <init>(Lorg/opencv/core/Mat;Lorg/opencv/core/Range;Lorg/opencv/core/Range;)V = .ctor(OpenCV.Core.Mat, OpenCV.Core.Range, OpenCV.Core.Range)
  <init>(Lorg/opencv/core/Mat;Lorg/opencv/core/Rect;)V = .ctor(OpenCV.Core.Mat, OpenCV.Core.Rect)
  <init>(Lorg/opencv/core/Size;I)V = .ctor(OpenCV.Core.Size, int)
  <init>(Lorg/opencv/core/Size;ILorg/opencv/core/Scalar;)V = .ctor(OpenCV.Core.Size, int, OpenCV.Core.Scalar)
  nativeObj = NativeObj
  isContinuous()Z = IsContinuous
  isSubmatrix()Z = IsSubmatrix
  getNativeObjAddr()J = NativeObjAddr
  adjustROI(IIII)Lorg/opencv/core/Mat; = AdjustROI(int, int, int, int)
  assignTo(Lorg/opencv/core/Mat;)V = AssignTo(OpenCV.Core.Mat)
  assignTo(Lorg/opencv/core/Mat;I)V = AssignTo(OpenCV.Core.Mat, int)
  channels()I = Channels()
  checkVector(I)I = CheckVector(int)
  checkVector(II)I = CheckVector(int, int)
  checkVector(IIZ)I = CheckVector(int, int, bool)
  clone()Lorg/opencv/core/Mat; = Clone()
  col(I)Lorg/opencv/core/Mat; = Col(int)
  colRange(II)Lorg/opencv/core/Mat; = ColRange(int, int)
  colRange(Lorg/opencv/core/Range;)Lorg/opencv/core/Mat; = ColRange(OpenCV.Core.Range)
  cols()I = Cols()
  convertTo(Lorg/opencv/core/Mat;I)V = ConvertTo(OpenCV.Core.Mat, int)
  convertTo(Lorg/opencv/core/Mat;ID)V = ConvertTo(OpenCV.Core.Mat, int, double)
  convertTo(Lorg/opencv/core/Mat;IDD)V = ConvertTo(OpenCV.Core.Mat, int, double, double)
  copyTo(Lorg/opencv/core/Mat;)V = CopyTo(OpenCV.Core.Mat)
  copyTo(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = CopyTo(OpenCV.Core.Mat, OpenCV.Core.Mat)
  create(III)V = Create(int, int, int)
  create(Lorg/opencv/core/Size;I)V = Create(OpenCV.Core.Size, int)
  cross(Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = Cross(OpenCV.Core.Mat)
  dataAddr()J = DataAddr()
  depth()I = Depth()
  diag()Lorg/opencv/core/Mat; = Diag()
  diag(I)Lorg/opencv/core/Mat; = Diag(int)
  diag(Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = Diag(OpenCV.Core.Mat)
  dims()I = Dims()
  dot(Lorg/opencv/core/Mat;)D = Dot(OpenCV.Core.Mat)
  dump()Ljava/lang/String; = Dump()
  elemSize()J = ElemSize()
  elemSize1()J = ElemSize1()
  empty()Z = Empty()
  eye(III)Lorg/opencv/core/Mat; = Eye(int, int, int)
  eye(Lorg/opencv/core/Size;I)Lorg/opencv/core/Mat; = Eye(OpenCV.Core.Size, int)
  get(II)[D = Get(int, int)
  get(II[B)I = Get(int, int, byte[])
  get(II[D)I = Get(int, int, double[])
  get(II[F)I = Get(int, int, float[])
  get(II[I)I = Get(int, int, int[])
  get(II[S)I = Get(int, int, short[])
  height()I = Height()
  inv()Lorg/opencv/core/Mat; = Inv()
  inv(I)Lorg/opencv/core/Mat; = Inv(int)
  locateROI(Lorg/opencv/core/Size;Lorg/opencv/core/Point;)V = LocateROI(OpenCV.Core.Size, OpenCV.Core.Point)
  mul(Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = Mul(OpenCV.Core.Mat)
  mul(Lorg/opencv/core/Mat;D)Lorg/opencv/core/Mat; = Mul(OpenCV.Core.Mat, double)
  ones(III)Lorg/opencv/core/Mat; = Ones(int, int, int)
  ones(Lorg/opencv/core/Size;I)Lorg/opencv/core/Mat; = Ones(OpenCV.Core.Size, int)
  push_back(Lorg/opencv/core/Mat;)V = Push_back(OpenCV.Core.Mat)
  put(II[B)I = Put(int, int, byte[])
  put(II[D)I = Put(int, int, params double[])
  put(II[F)I = Put(int, int, float[])
  put(II[I)I = Put(int, int, int[])
  put(II[S)I = Put(int, int, short[])
  release()V = Release()
  reshape(I)Lorg/opencv/core/Mat; = Reshape(int)
  reshape(II)Lorg/opencv/core/Mat; = Reshape(int, int)
  row(I)Lorg/opencv/core/Mat; = Row(int)
  rowRange(II)Lorg/opencv/core/Mat; = RowRange(int, int)
  rowRange(Lorg/opencv/core/Range;)Lorg/opencv/core/Mat; = RowRange(OpenCV.Core.Range)
  rows()I = Rows()
  setTo(Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = SetTo(OpenCV.Core.Mat)
  setTo(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = SetTo(OpenCV.Core.Mat, OpenCV.Core.Mat)
  setTo(Lorg/opencv/core/Scalar;)Lorg/opencv/core/Mat; = SetTo(OpenCV.Core.Scalar)
  setTo(Lorg/opencv/core/Scalar;Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = SetTo(OpenCV.Core.Scalar, OpenCV.Core.Mat)
  size()Lorg/opencv/core/Size; = Size()
  step1()J = Step1()
  step1(I)J = Step1(int)
  submat(IIII)Lorg/opencv/core/Mat; = Submat(int, int, int, int)
  submat(Lorg/opencv/core/Range;Lorg/opencv/core/Range;)Lorg/opencv/core/Mat; = Submat(OpenCV.Core.Range, OpenCV.Core.Range)
  submat(Lorg/opencv/core/Rect;)Lorg/opencv/core/Mat; = Submat(OpenCV.Core.Rect)
  t()Lorg/opencv/core/Mat; = T()
  total()J = Total()
  type()I = Type()
  width()I = Width()
  zeros(III)Lorg/opencv/core/Mat; = Zeros(int, int, int)
  zeros(Lorg/opencv/core/Size;I)Lorg/opencv/core/Mat; = Zeros(OpenCV.Core.Size, int)
org/opencv/core/MatOfByte = OpenCV.Core.MatOfByte
  <init>()V = .ctor()
  <init>([B)V = .ctor(params byte[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([B)V = FromArray(params byte[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<Java.Lang.Byte>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfByte; = FromNativeAddr(long)
  toArray()[B = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfDMatch = OpenCV.Core.MatOfDMatch
  <init>()V = .ctor()
  <init>([Lorg/opencv/core/DMatch;)V = .ctor(params OpenCV.Core.DMatch[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([Lorg/opencv/core/DMatch;)V = FromArray(params OpenCV.Core.DMatch[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<OpenCV.Core.DMatch>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfDMatch; = FromNativeAddr(long)
  toArray()[Lorg/opencv/core/DMatch; = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfDouble = OpenCV.Core.MatOfDouble
  <init>()V = .ctor()
  <init>([D)V = .ctor(params double[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([D)V = FromArray(params double[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<Java.Lang.Double>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfDouble; = FromNativeAddr(long)
  toArray()[D = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfFloat = OpenCV.Core.MatOfFloat
  <init>()V = .ctor()
  <init>([F)V = .ctor(params float[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([F)V = FromArray(params float[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<Java.Lang.Float>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfFloat; = FromNativeAddr(long)
  toArray()[F = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfFloat4 = OpenCV.Core.MatOfFloat4
  <init>()V = .ctor()
  <init>([F)V = .ctor(params float[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([F)V = FromArray(params float[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<Java.Lang.Float>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfFloat4; = FromNativeAddr(long)
  toArray()[F = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfFloat6 = OpenCV.Core.MatOfFloat6
  <init>()V = .ctor()
  <init>([F)V = .ctor(params float[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([F)V = FromArray(params float[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<Java.Lang.Float>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfFloat6; = FromNativeAddr(long)
  toArray()[F = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfInt = OpenCV.Core.MatOfInt
  <init>()V = .ctor()
  <init>([I)V = .ctor(params int[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([I)V = FromArray(params int[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<Java.Lang.Integer>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfInt; = FromNativeAddr(long)
  toArray()[I = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfInt4 = OpenCV.Core.MatOfInt4
  <init>()V = .ctor()
  <init>([I)V = .ctor(params int[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([I)V = FromArray(params int[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<Java.Lang.Integer>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfInt4; = FromNativeAddr(long)
  toArray()[I = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfKeyPoint = OpenCV.Core.MatOfKeyPoint
  <init>()V = .ctor()
  <init>([Lorg/opencv/core/KeyPoint;)V = .ctor(params OpenCV.Core.KeyPoint[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([Lorg/opencv/core/KeyPoint;)V = FromArray(params OpenCV.Core.KeyPoint[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<OpenCV.Core.KeyPoint>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfKeyPoint; = FromNativeAddr(long)
  toArray()[Lorg/opencv/core/KeyPoint; = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfPoint = OpenCV.Core.MatOfPoint
  <init>()V = .ctor()
  <init>([Lorg/opencv/core/Point;)V = .ctor(params OpenCV.Core.Point[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([Lorg/opencv/core/Point;)V = FromArray(params OpenCV.Core.Point[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<OpenCV.Core.Point>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfPoint; = FromNativeAddr(long)
  toArray()[Lorg/opencv/core/Point; = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfPoint2f = OpenCV.Core.MatOfPoint2f
  <init>()V = .ctor()
  <init>([Lorg/opencv/core/Point;)V = .ctor(params OpenCV.Core.Point[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([Lorg/opencv/core/Point;)V = FromArray(params OpenCV.Core.Point[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<OpenCV.Core.Point>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfPoint2f; = FromNativeAddr(long)
  toArray()[Lorg/opencv/core/Point; = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfPoint3 = OpenCV.Core.MatOfPoint3
  <init>()V = .ctor()
  <init>([Lorg/opencv/core/Point3;)V = .ctor(params OpenCV.Core.Point3[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([Lorg/opencv/core/Point3;)V = FromArray(params OpenCV.Core.Point3[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<OpenCV.Core.Point3>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfPoint3; = FromNativeAddr(long)
  toArray()[Lorg/opencv/core/Point3; = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfPoint3f = OpenCV.Core.MatOfPoint3f
  <init>()V = .ctor()
  <init>([Lorg/opencv/core/Point3;)V = .ctor(params OpenCV.Core.Point3[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([Lorg/opencv/core/Point3;)V = FromArray(params OpenCV.Core.Point3[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<OpenCV.Core.Point3>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfPoint3f; = FromNativeAddr(long)
  toArray()[Lorg/opencv/core/Point3; = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/MatOfRect = OpenCV.Core.MatOfRect
  <init>()V = .ctor()
  <init>([Lorg/opencv/core/Rect;)V = .ctor(params OpenCV.Core.Rect[])
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Mat;)V = .ctor(OpenCV.Core.Mat)
  alloc(I)V = Alloc(int)
  fromArray([Lorg/opencv/core/Rect;)V = FromArray(params OpenCV.Core.Rect[])
  fromList(Ljava/util/List;)V = FromList(System.Collections.Generic.IList<OpenCV.Core.Rect>)
  fromNativeAddr(J)Lorg/opencv/core/MatOfRect; = FromNativeAddr(long)
  toArray()[Lorg/opencv/core/Rect; = ToArray()
  toList()Ljava/util/List; = ToList()
org/opencv/core/Point = OpenCV.Core.Point
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(DD)V = .ctor(double, double)
  x = X
  y = Y
  clone()Lorg/opencv/core/Point; = Clone()
  dot(Lorg/opencv/core/Point;)D = Dot(OpenCV.Core.Point)
  inside(Lorg/opencv/core/Rect;)Z = Inside(OpenCV.Core.Rect)
  set([D)V = Set(double[])
org/opencv/core/Point3 = OpenCV.Core.Point3
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(DDD)V = .ctor(double, double, double)
  <init>(Lorg/opencv/core/Point;)V = .ctor(OpenCV.Core.Point)
  x = X
  y = Y
  z = Z
  clone()Lorg/opencv/core/Point3; = Clone()
  cross(Lorg/opencv/core/Point3;)Lorg/opencv/core/Point3; = Cross(OpenCV.Core.Point3)
  dot(Lorg/opencv/core/Point3;)D = Dot(OpenCV.Core.Point3)
  set([D)V = Set(double[])
org/opencv/core/Range = OpenCV.Core.Range
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(II)V = .ctor(int, int)
  end = End
  start = Start
  all()Lorg/opencv/core/Range; = All()
  clone()Lorg/opencv/core/Range; = Clone()
  empty()Z = Empty()
  intersection(Lorg/opencv/core/Range;)Lorg/opencv/core/Range; = Intersection(OpenCV.Core.Range)
  set([D)V = Set(double[])
  shift(I)Lorg/opencv/core/Range; = Shift(int)
  size()I = Size()
org/opencv/core/Rect = OpenCV.Core.Rect
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(IIII)V = .ctor(int, int, int, int)
  <init>(Lorg/opencv/core/Point;Lorg/opencv/core/Point;)V = .ctor(OpenCV.Core.Point, OpenCV.Core.Point)
  <init>(Lorg/opencv/core/Point;Lorg/opencv/core/Size;)V = .ctor(OpenCV.Core.Point, OpenCV.Core.Size)
  height = Height
  width = Width
  x = X
  y = Y
  area()D = Area()
  br()Lorg/opencv/core/Point; = Br()
  clone()Lorg/opencv/core/Rect; = Clone()
  contains(Lorg/opencv/core/Point;)Z = Contains(OpenCV.Core.Point)
  set([D)V = Set(double[])
  size()Lorg/opencv/core/Size; = Size()
  tl()Lorg/opencv/core/Point; = Tl()
org/opencv/core/RotatedRect = OpenCV.Core.RotatedRect
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(Lorg/opencv/core/Point;Lorg/opencv/core/Size;D)V = .ctor(OpenCV.Core.Point, OpenCV.Core.Size, double)
  angle = Angle
  center = Center
  size = Size
  boundingRect()Lorg/opencv/core/Rect; = BoundingRect()
  clone()Lorg/opencv/core/RotatedRect; = Clone()
  points([Lorg/opencv/core/Point;)V = Points(OpenCV.Core.Point[])
  set([D)V = Set(double[])
org/opencv/core/Scalar = OpenCV.Core.Scalar
  <init>([D)V = .ctor(double[])
  <init>(D)V = .ctor(double)
  <init>(DD)V = .ctor(double, double)
  <init>(DDD)V = .ctor(double, double, double)
  <init>(DDDD)V = .ctor(double, double, double, double)
  val = Val
  isReal()Z = IsReal
  all(D)Lorg/opencv/core/Scalar; = All(double)
  clone()Lorg/opencv/core/Scalar; = Clone()
  conj()Lorg/opencv/core/Scalar; = Conj()
  mul(Lorg/opencv/core/Scalar;)Lorg/opencv/core/Scalar; = Mul(OpenCV.Core.Scalar)
  mul(Lorg/opencv/core/Scalar;D)Lorg/opencv/core/Scalar; = Mul(OpenCV.Core.Scalar, double)
  set([D)V = Set(double[])
org/opencv/core/Size = OpenCV.Core.Size
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(DD)V = .ctor(double, double)
  <init>(Lorg/opencv/core/Point;)V = .ctor(OpenCV.Core.Point)
  height = Height
  width = Width
  area()D = Area()
  clone()Lorg/opencv/core/Size; = Clone()
  set([D)V = Set(double[])
org/opencv/core/TermCriteria = OpenCV.Core.TermCriteria
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(IID)V = .ctor(int, int, double)
  COUNT = Count
  EPS = Eps
  epsilon = Epsilon
  maxCount = MaxCount
  MAX_ITER = MaxIter
  type = Type
  clone()Lorg/opencv/core/TermCriteria; = Clone()
  set([D)V = Set(double[])
org/opencv/engine/OpenCVEngineInterface = OpenCV.Engine.IOpenCVEngineInterface
  getEngineVersion()I = EngineVersion
  getLibPathByVersion(Ljava/lang/String;)Ljava/lang/String; = GetLibPathByVersion(string)
  getLibraryList(Ljava/lang/String;)Ljava/lang/String; = GetLibraryList(string)
  installVersion(Ljava/lang/String;)Z = InstallVersion(string)
org/opencv/features2d/DescriptorExtractor = OpenCV.Features2d.DescriptorExtractor
  <init>(J)V = .ctor(long)
  AKAZE = Akaze
  BRIEF = Brief
  BRISK = Brisk
  FREAK = Freak
  nativeObj = NativeObj
  OPPONENT_AKAZE = OpponentAkaze
  OPPONENT_BRIEF = OpponentBrief
  OPPONENT_BRISK = OpponentBrisk
  OPPONENT_FREAK = OpponentFreak
  OPPONENT_ORB = OpponentOrb
  OPPONENT_SIFT = OpponentSift
  OPPONENT_SURF = OpponentSurf
  ORB = Orb
  SIFT = Sift
  SURF = Surf
  compute(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V = Compute(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.MatOfKeyPoint>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  compute(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;)V = Compute(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat)
  create(I)Lorg/opencv/features2d/DescriptorExtractor; = Create(int)
  descriptorSize()I = DescriptorSize()
  descriptorType()I = DescriptorType()
  empty()Z = Empty()
  read(Ljava/lang/String;)V = Read(string)
  write(Ljava/lang/String;)V = Write(string)
org/opencv/features2d/DescriptorMatcher = OpenCV.Features2d.DescriptorMatcher
  <init>(J)V = .ctor(long)
  BRUTEFORCE = Bruteforce
  BRUTEFORCE_HAMMING = BruteforceHamming
  BRUTEFORCE_HAMMINGLUT = BruteforceHamminglut
  BRUTEFORCE_L1 = BruteforceL1
  BRUTEFORCE_SL2 = BruteforceSl2
  FLANNBASED = Flannbased
  nativeObj = NativeObj
  isMaskSupported()Z = IsMaskSupported
  getTrainDescriptors()Ljava/util/List; = TrainDescriptors
  add(Ljava/util/List;)V = Add(System.Collections.Generic.IList<OpenCV.Core.Mat>)
  clear()V = Clear()
  clone()Lorg/opencv/features2d/DescriptorMatcher; = Clone()
  clone(Z)Lorg/opencv/features2d/DescriptorMatcher; = Clone(bool)
  create(I)Lorg/opencv/features2d/DescriptorMatcher; = Create(int)
  empty()Z = Empty()
  knnMatch(Lorg/opencv/core/Mat;Ljava/util/List;I)V = KnnMatch(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, int)
  knnMatch(Lorg/opencv/core/Mat;Ljava/util/List;ILjava/util/List;Z)V = KnnMatch(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, int, System.Collections.Generic.IList<OpenCV.Core.Mat>, bool)
  knnMatch(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;I)V = KnnMatch(OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, int)
  knnMatch(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;ILorg/opencv/core/Mat;Z)V = KnnMatch(OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, int, OpenCV.Core.Mat, bool)
  match(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDMatch;)V = Match(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfDMatch)
  match(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDMatch;Lorg/opencv/core/Mat;)V = Match(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfDMatch, OpenCV.Core.Mat)
  match(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDMatch;)V = Match(OpenCV.Core.Mat, OpenCV.Core.MatOfDMatch)
  match(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfDMatch;Ljava/util/List;)V = Match(OpenCV.Core.Mat, OpenCV.Core.MatOfDMatch, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  radiusMatch(Lorg/opencv/core/Mat;Ljava/util/List;F)V = RadiusMatch(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, float)
  radiusMatch(Lorg/opencv/core/Mat;Ljava/util/List;FLjava/util/List;Z)V = RadiusMatch(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, float, System.Collections.Generic.IList<OpenCV.Core.Mat>, bool)
  radiusMatch(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;F)V = RadiusMatch(OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, float)
  radiusMatch(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Ljava/util/List;FLorg/opencv/core/Mat;Z)V = RadiusMatch(OpenCV.Core.Mat, OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, float, OpenCV.Core.Mat, bool)
  read(Ljava/lang/String;)V = Read(string)
  train()V = Train()
  write(Ljava/lang/String;)V = Write(string)
org/opencv/features2d/FeatureDetector = OpenCV.Features2d.FeatureDetector
  <init>(J)V = .ctor(long)
  AKAZE = Akaze
  BRISK = Brisk
  DENSE = Dense
  DYNAMIC_AKAZE = DynamicAkaze
  DYNAMIC_BRISK = DynamicBrisk
  DYNAMIC_DENSE = DynamicDense
  DYNAMIC_FAST = DynamicFast
  DYNAMIC_GFTT = DynamicGftt
  DYNAMIC_HARRIS = DynamicHarris
  DYNAMIC_MSER = DynamicMser
  DYNAMIC_ORB = DynamicOrb
  DYNAMIC_SIFT = DynamicSift
  DYNAMIC_SIMPLEBLOB = DynamicSimpleblob
  DYNAMIC_STAR = DynamicStar
  DYNAMIC_SURF = DynamicSurf
  FAST = Fast
  GFTT = Gftt
  GRID_AKAZE = GridAkaze
  GRID_BRISK = GridBrisk
  GRID_DENSE = GridDense
  GRID_FAST = GridFast
  GRID_GFTT = GridGftt
  GRID_HARRIS = GridHarris
  GRID_MSER = GridMser
  GRID_ORB = GridOrb
  GRID_SIFT = GridSift
  GRID_SIMPLEBLOB = GridSimpleblob
  GRID_STAR = GridStar
  GRID_SURF = GridSurf
  HARRIS = Harris
  MSER = Mser
  nativeObj = NativeObj
  ORB = Orb
  PYRAMID_AKAZE = PyramidAkaze
  PYRAMID_BRISK = PyramidBrisk
  PYRAMID_DENSE = PyramidDense
  PYRAMID_FAST = PyramidFast
  PYRAMID_GFTT = PyramidGftt
  PYRAMID_HARRIS = PyramidHarris
  PYRAMID_MSER = PyramidMser
  PYRAMID_ORB = PyramidOrb
  PYRAMID_SIFT = PyramidSift
  PYRAMID_SIMPLEBLOB = PyramidSimpleblob
  PYRAMID_STAR = PyramidStar
  PYRAMID_SURF = PyramidSurf
  SIFT = Sift
  SIMPLEBLOB = Simpleblob
  STAR = Star
  SURF = Surf
  create(I)Lorg/opencv/features2d/FeatureDetector; = Create(int)
  detect(Ljava/util/List;Ljava/util/List;)V = Detect(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.MatOfKeyPoint>)
  detect(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V = Detect(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.MatOfKeyPoint>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  detect(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;)V = Detect(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint)
  detect(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;)V = Detect(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat)
  empty()Z = Empty()
  read(Ljava/lang/String;)V = Read(string)
  write(Ljava/lang/String;)V = Write(string)
org/opencv/features2d/Features2d = OpenCV.Features2d.Features2d
  <init>()V = .ctor()
  DRAW_OVER_OUTIMG = DrawOverOutimg
  DRAW_RICH_KEYPOINTS = DrawRichKeypoints
  NOT_DRAW_SINGLE_POINTS = NotDrawSinglePoints
  drawKeypoints(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;)V = DrawKeypoints(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat)
  drawKeypoints(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;I)V = DrawKeypoints(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat, OpenCV.Core.Scalar, int)
  drawMatches(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/MatOfDMatch;Lorg/opencv/core/Mat;)V = DrawMatches(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.MatOfDMatch, OpenCV.Core.Mat)
  drawMatches(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/MatOfDMatch;Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Scalar;Lorg/opencv/core/MatOfByte;I)V = DrawMatches(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.MatOfDMatch, OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Scalar, OpenCV.Core.MatOfByte, int)
  drawMatches2(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Ljava/util/List;Lorg/opencv/core/Mat;)V = DrawMatches2(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, OpenCV.Core.Mat)
  drawMatches2(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfKeyPoint;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Scalar;Lorg/opencv/core/Scalar;Ljava/util/List;I)V = DrawMatches2(OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, OpenCV.Core.Mat, OpenCV.Core.MatOfKeyPoint, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, OpenCV.Core.Mat, OpenCV.Core.Scalar, OpenCV.Core.Scalar, System.Collections.Generic.IList<OpenCV.Core.MatOfByte>, int)
org/opencv/imgcodecs/Imgcodecs = OpenCV.ImgCodecs.Imgcodecs
  <init>()V = .ctor()
  CV_CVTIMG_FLIP = CvCvtimgFlip
  CV_CVTIMG_SWAP_RB = CvCvtimgSwapRb
  CV_IMWRITE_JPEG_CHROMA_QUALITY = CvImwriteJpegChromaQuality
  CV_IMWRITE_JPEG_LUMA_QUALITY = CvImwriteJpegLumaQuality
  CV_IMWRITE_JPEG_OPTIMIZE = CvImwriteJpegOptimize
  CV_IMWRITE_JPEG_PROGRESSIVE = CvImwriteJpegProgressive
  CV_IMWRITE_JPEG_QUALITY = CvImwriteJpegQuality
  CV_IMWRITE_JPEG_RST_INTERVAL = CvImwriteJpegRstInterval
  CV_IMWRITE_PNG_BILEVEL = CvImwritePngBilevel
  CV_IMWRITE_PNG_COMPRESSION = CvImwritePngCompression
  CV_IMWRITE_PNG_STRATEGY = CvImwritePngStrategy
  CV_IMWRITE_PNG_STRATEGY_DEFAULT = CvImwritePngStrategyDefault
  CV_IMWRITE_PNG_STRATEGY_FILTERED = CvImwritePngStrategyFiltered
  CV_IMWRITE_PNG_STRATEGY_FIXED = CvImwritePngStrategyFixed
  CV_IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY = CvImwritePngStrategyHuffmanOnly
  CV_IMWRITE_PNG_STRATEGY_RLE = CvImwritePngStrategyRle
  CV_IMWRITE_PXM_BINARY = CvImwritePxmBinary
  CV_IMWRITE_WEBP_QUALITY = CvImwriteWebpQuality
  CV_LOAD_IMAGE_ANYCOLOR = CvLoadImageAnycolor
  CV_LOAD_IMAGE_ANYDEPTH = CvLoadImageAnydepth
  CV_LOAD_IMAGE_COLOR = CvLoadImageColor
  CV_LOAD_IMAGE_GRAYSCALE = CvLoadImageGrayscale
  CV_LOAD_IMAGE_UNCHANGED = CvLoadImageUnchanged
  IMREAD_ANYCOLOR = ImreadAnycolor
  IMREAD_ANYDEPTH = ImreadAnydepth
  IMREAD_COLOR = ImreadColor
  IMREAD_GRAYSCALE = ImreadGrayscale
  IMREAD_LOAD_GDAL = ImreadLoadGdal
  IMREAD_REDUCED_COLOR_2 = ImreadReducedColor2
  IMREAD_REDUCED_COLOR_4 = ImreadReducedColor4
  IMREAD_REDUCED_COLOR_8 = ImreadReducedColor8
  IMREAD_REDUCED_GRAYSCALE_2 = ImreadReducedGrayscale2
  IMREAD_REDUCED_GRAYSCALE_4 = ImreadReducedGrayscale4
  IMREAD_REDUCED_GRAYSCALE_8 = ImreadReducedGrayscale8
  IMREAD_UNCHANGED = ImreadUnchanged
  IMWRITE_JPEG_CHROMA_QUALITY = ImwriteJpegChromaQuality
  IMWRITE_JPEG_LUMA_QUALITY = ImwriteJpegLumaQuality
  IMWRITE_JPEG_OPTIMIZE = ImwriteJpegOptimize
  IMWRITE_JPEG_PROGRESSIVE = ImwriteJpegProgressive
  IMWRITE_JPEG_QUALITY = ImwriteJpegQuality
  IMWRITE_JPEG_RST_INTERVAL = ImwriteJpegRstInterval
  IMWRITE_PNG_BILEVEL = ImwritePngBilevel
  IMWRITE_PNG_COMPRESSION = ImwritePngCompression
  IMWRITE_PNG_STRATEGY = ImwritePngStrategy
  IMWRITE_PNG_STRATEGY_DEFAULT = ImwritePngStrategyDefault
  IMWRITE_PNG_STRATEGY_FILTERED = ImwritePngStrategyFiltered
  IMWRITE_PNG_STRATEGY_FIXED = ImwritePngStrategyFixed
  IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY = ImwritePngStrategyHuffmanOnly
  IMWRITE_PNG_STRATEGY_RLE = ImwritePngStrategyRle
  IMWRITE_PXM_BINARY = ImwritePxmBinary
  IMWRITE_WEBP_QUALITY = ImwriteWebpQuality
  imdecode(Lorg/opencv/core/Mat;I)Lorg/opencv/core/Mat; = Imdecode(OpenCV.Core.Mat, int)
  imencode(Ljava/lang/String;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfByte;)Z = Imencode(string, OpenCV.Core.Mat, OpenCV.Core.MatOfByte)
  imencode(Ljava/lang/String;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfByte;Lorg/opencv/core/MatOfInt;)Z = Imencode(string, OpenCV.Core.Mat, OpenCV.Core.MatOfByte, OpenCV.Core.MatOfInt)
  imread(Ljava/lang/String;)Lorg/opencv/core/Mat; = Imread(string)
  imread(Ljava/lang/String;I)Lorg/opencv/core/Mat; = Imread(string, int)
  imreadmulti(Ljava/lang/String;Ljava/util/List;)Z = Imreadmulti(string, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  imreadmulti(Ljava/lang/String;Ljava/util/List;I)Z = Imreadmulti(string, System.Collections.Generic.IList<OpenCV.Core.Mat>, int)
  imwrite(Ljava/lang/String;Lorg/opencv/core/Mat;)Z = Imwrite(string, OpenCV.Core.Mat)
  imwrite(Ljava/lang/String;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfInt;)Z = Imwrite(string, OpenCV.Core.Mat, OpenCV.Core.MatOfInt)
org/opencv/imgproc/CLAHE = OpenCV.ImgProc.CLAHE
  <init>(J)V = .ctor(long)
  getClipLimit()D = ClipLimit
  setClipLimit(D)V = ClipLimit
  getTilesGridSize()Lorg/opencv/core/Size; = TilesGridSize
  setTilesGridSize(Lorg/opencv/core/Size;)V = TilesGridSize
  apply(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Apply(OpenCV.Core.Mat, OpenCV.Core.Mat)
  collectGarbage()V = CollectGarbage()
org/opencv/imgproc/Imgproc = OpenCV.ImgProc.Imgproc
  <init>()V = .ctor()
  ADAPTIVE_THRESH_GAUSSIAN_C = AdaptiveThreshGaussianC
  ADAPTIVE_THRESH_MEAN_C = AdaptiveThreshMeanC
  CC_STAT_AREA = CcStatArea
  CC_STAT_HEIGHT = CcStatHeight
  CC_STAT_LEFT = CcStatLeft
  CC_STAT_MAX = CcStatMax
  CC_STAT_TOP = CcStatTop
  CC_STAT_WIDTH = CcStatWidth
  CHAIN_APPROX_NONE = ChainApproxNone
  CHAIN_APPROX_SIMPLE = ChainApproxSimple
  CHAIN_APPROX_TC89_KCOS = ChainApproxTc89Kcos
  CHAIN_APPROX_TC89_L1 = ChainApproxTc89L1
  COLOR_BayerBG2BGR = COLORBayerBG2BGR
  COLOR_BayerBG2BGR_EA = COLORBayerBG2BGREA
  COLOR_BayerBG2BGR_VNG = COLORBayerBG2BGRVNG
  COLOR_BayerBG2GRAY = COLORBayerBG2GRAY
  COLOR_BayerBG2RGB = COLORBayerBG2RGB
  COLOR_BayerBG2RGB_EA = COLORBayerBG2RGBEA
  COLOR_BayerBG2RGB_VNG = COLORBayerBG2RGBVNG
  COLOR_BayerGB2BGR = COLORBayerGB2BGR
  COLOR_BayerGB2BGR_EA = COLORBayerGB2BGREA
  COLOR_BayerGB2BGR_VNG = COLORBayerGB2BGRVNG
  COLOR_BayerGB2GRAY = COLORBayerGB2GRAY
  COLOR_BayerGB2RGB = COLORBayerGB2RGB
  COLOR_BayerGB2RGB_EA = COLORBayerGB2RGBEA
  COLOR_BayerGB2RGB_VNG = COLORBayerGB2RGBVNG
  COLOR_BayerGR2BGR = COLORBayerGR2BGR
  COLOR_BayerGR2BGR_EA = COLORBayerGR2BGREA
  COLOR_BayerGR2BGR_VNG = COLORBayerGR2BGRVNG
  COLOR_BayerGR2GRAY = COLORBayerGR2GRAY
  COLOR_BayerGR2RGB = COLORBayerGR2RGB
  COLOR_BayerGR2RGB_EA = COLORBayerGR2RGBEA
  COLOR_BayerGR2RGB_VNG = COLORBayerGR2RGBVNG
  COLOR_BayerRG2BGR = COLORBayerRG2BGR
  COLOR_BayerRG2BGR_EA = COLORBayerRG2BGREA
  COLOR_BayerRG2BGR_VNG = COLORBayerRG2BGRVNG
  COLOR_BayerRG2GRAY = COLORBayerRG2GRAY
  COLOR_BayerRG2RGB = COLORBayerRG2RGB
  COLOR_BayerRG2RGB_EA = COLORBayerRG2RGBEA
  COLOR_BayerRG2RGB_VNG = COLORBayerRG2RGBVNG
  COLOR_BGR2BGR555 = ColorBgr2bgr555
  COLOR_BGR2BGR565 = ColorBgr2bgr565
  COLOR_BGR2BGRA = ColorBgr2bgra
  COLOR_BGR2GRAY = ColorBgr2gray
  COLOR_BGR2HLS = ColorBgr2hls
  COLOR_BGR2HLS_FULL = ColorBgr2hlsFull
  COLOR_BGR2HSV = ColorBgr2hsv
  COLOR_BGR2HSV_FULL = ColorBgr2hsvFull
  COLOR_BGR2Lab = COLORBGR2Lab
  COLOR_BGR2Luv = COLORBGR2Luv
  COLOR_BGR2RGB = ColorBgr2rgb
  COLOR_BGR2RGBA = ColorBgr2rgba
  COLOR_BGR2XYZ = ColorBgr2xyz
  COLOR_BGR2YCrCb = COLORBGR2YCrCb
  COLOR_BGR2YUV = ColorBgr2yuv
  COLOR_BGR2YUV_I420 = ColorBgr2yuvI420
  COLOR_BGR2YUV_IYUV = ColorBgr2yuvIyuv
  COLOR_BGR2YUV_YV12 = ColorBgr2yuvYv12
  COLOR_BGR5552BGR = ColorBgr5552bgr
  COLOR_BGR5552BGRA = ColorBgr5552bgra
  COLOR_BGR5552GRAY = ColorBgr5552gray
  COLOR_BGR5552RGB = ColorBgr5552rgb
  COLOR_BGR5552RGBA = ColorBgr5552rgba
  COLOR_BGR5652BGR = ColorBgr5652bgr
  COLOR_BGR5652BGRA = ColorBgr5652bgra
  COLOR_BGR5652GRAY = ColorBgr5652gray
  COLOR_BGR5652RGB = ColorBgr5652rgb
  COLOR_BGR5652RGBA = ColorBgr5652rgba
  COLOR_BGRA2BGR = ColorBgra2bgr
  COLOR_BGRA2BGR555 = ColorBgra2bgr555
  COLOR_BGRA2BGR565 = ColorBgra2bgr565
  COLOR_BGRA2GRAY = ColorBgra2gray
  COLOR_BGRA2RGB = ColorBgra2rgb
  COLOR_BGRA2RGBA = ColorBgra2rgba
  COLOR_BGRA2YUV_I420 = ColorBgra2yuvI420
  COLOR_BGRA2YUV_IYUV = ColorBgra2yuvIyuv
  COLOR_BGRA2YUV_YV12 = ColorBgra2yuvYv12
  COLOR_COLORCVT_MAX = ColorColorcvtMax
  COLOR_GRAY2BGR = ColorGray2bgr
  COLOR_GRAY2BGR555 = ColorGray2bgr555
  COLOR_GRAY2BGR565 = ColorGray2bgr565
  COLOR_GRAY2BGRA = ColorGray2bgra
  COLOR_GRAY2RGB = ColorGray2rgb
  COLOR_GRAY2RGBA = ColorGray2rgba
  COLOR_HLS2BGR = ColorHls2bgr
  COLOR_HLS2BGR_FULL = ColorHls2bgrFull
  COLOR_HLS2RGB = ColorHls2rgb
  COLOR_HLS2RGB_FULL = ColorHls2rgbFull
  COLOR_HSV2BGR = ColorHsv2bgr
  COLOR_HSV2BGR_FULL = ColorHsv2bgrFull
  COLOR_HSV2RGB = ColorHsv2rgb
  COLOR_HSV2RGB_FULL = ColorHsv2rgbFull
  COLOR_Lab2BGR = COLORLab2BGR
  COLOR_Lab2LBGR = COLORLab2LBGR
  COLOR_Lab2LRGB = COLORLab2LRGB
  COLOR_Lab2RGB = COLORLab2RGB
  COLOR_LBGR2Lab = COLORLBGR2Lab
  COLOR_LBGR2Luv = COLORLBGR2Luv
  COLOR_LRGB2Lab = COLORLRGB2Lab
  COLOR_LRGB2Luv = COLORLRGB2Luv
  COLOR_Luv2BGR = COLORLuv2BGR
  COLOR_Luv2LBGR = COLORLuv2LBGR
  COLOR_Luv2LRGB = COLORLuv2LRGB
  COLOR_Luv2RGB = COLORLuv2RGB
  COLORMAP_AUTUMN = ColormapAutumn
  COLORMAP_BONE = ColormapBone
  COLORMAP_COOL = ColormapCool
  COLORMAP_HOT = ColormapHot
  COLORMAP_HSV = ColormapHsv
  COLORMAP_JET = ColormapJet
  COLORMAP_OCEAN = ColormapOcean
  COLORMAP_PARULA = ColormapParula
  COLORMAP_PINK = ColormapPink
  COLORMAP_RAINBOW = ColormapRainbow
  COLORMAP_SPRING = ColormapSpring
  COLORMAP_SUMMER = ColormapSummer
  COLORMAP_WINTER = ColormapWinter
  COLOR_mRGBA2RGBA = COLORMRGBA2RGBA
  COLOR_RGB2BGR = ColorRgb2bgr
  COLOR_RGB2BGR555 = ColorRgb2bgr555
  COLOR_RGB2BGR565 = ColorRgb2bgr565
  COLOR_RGB2BGRA = ColorRgb2bgra
  COLOR_RGB2GRAY = ColorRgb2gray
  COLOR_RGB2HLS = ColorRgb2hls
  COLOR_RGB2HLS_FULL = ColorRgb2hlsFull
  COLOR_RGB2HSV = ColorRgb2hsv
  COLOR_RGB2HSV_FULL = ColorRgb2hsvFull
  COLOR_RGB2Lab = COLORRGB2Lab
  COLOR_RGB2Luv = COLORRGB2Luv
  COLOR_RGB2RGBA = ColorRgb2rgba
  COLOR_RGB2XYZ = ColorRgb2xyz
  COLOR_RGB2YCrCb = COLORRGB2YCrCb
  COLOR_RGB2YUV = ColorRgb2yuv
  COLOR_RGB2YUV_I420 = ColorRgb2yuvI420
  COLOR_RGB2YUV_IYUV = ColorRgb2yuvIyuv
  COLOR_RGB2YUV_YV12 = ColorRgb2yuvYv12
  COLOR_RGBA2BGR = ColorRgba2bgr
  COLOR_RGBA2BGR555 = ColorRgba2bgr555
  COLOR_RGBA2BGR565 = ColorRgba2bgr565
  COLOR_RGBA2BGRA = ColorRgba2bgra
  COLOR_RGBA2GRAY = ColorRgba2gray
  COLOR_RGBA2mRGBA = COLORRGBA2mRGBA
  COLOR_RGBA2RGB = ColorRgba2rgb
  COLOR_RGBA2YUV_I420 = ColorRgba2yuvI420
  COLOR_RGBA2YUV_IYUV = ColorRgba2yuvIyuv
  COLOR_RGBA2YUV_YV12 = ColorRgba2yuvYv12
  COLOR_XYZ2BGR = ColorXyz2bgr
  COLOR_XYZ2RGB = ColorXyz2rgb
  COLOR_YCrCb2BGR = COLORYCrCb2BGR
  COLOR_YCrCb2RGB = COLORYCrCb2RGB
  COLOR_YUV2BGR = ColorYuv2bgr
  COLOR_YUV2BGRA_I420 = ColorYuv2bgraI420
  COLOR_YUV2BGRA_IYUV = ColorYuv2bgraIyuv
  COLOR_YUV2BGRA_NV12 = ColorYuv2bgraNv12
  COLOR_YUV2BGRA_NV21 = ColorYuv2bgraNv21
  COLOR_YUV2BGRA_UYNV = ColorYuv2bgraUynv
  COLOR_YUV2BGRA_UYVY = ColorYuv2bgraUyvy
  COLOR_YUV2BGRA_Y422 = ColorYuv2bgraY422
  COLOR_YUV2BGRA_YUNV = ColorYuv2bgraYunv
  COLOR_YUV2BGRA_YUY2 = ColorYuv2bgraYuy2
  COLOR_YUV2BGRA_YUYV = ColorYuv2bgraYuyv
  COLOR_YUV2BGRA_YV12 = ColorYuv2bgraYv12
  COLOR_YUV2BGRA_YVYU = ColorYuv2bgraYvyu
  COLOR_YUV2BGR_I420 = ColorYuv2bgrI420
  COLOR_YUV2BGR_IYUV = ColorYuv2bgrIyuv
  COLOR_YUV2BGR_NV12 = ColorYuv2bgrNv12
  COLOR_YUV2BGR_NV21 = ColorYuv2bgrNv21
  COLOR_YUV2BGR_UYNV = ColorYuv2bgrUynv
  COLOR_YUV2BGR_UYVY = ColorYuv2bgrUyvy
  COLOR_YUV2BGR_Y422 = ColorYuv2bgrY422
  COLOR_YUV2BGR_YUNV = ColorYuv2bgrYunv
  COLOR_YUV2BGR_YUY2 = ColorYuv2bgrYuy2
  COLOR_YUV2BGR_YUYV = ColorYuv2bgrYuyv
  COLOR_YUV2BGR_YV12 = ColorYuv2bgrYv12
  COLOR_YUV2BGR_YVYU = ColorYuv2bgrYvyu
  COLOR_YUV2GRAY_420 = ColorYuv2gray420
  COLOR_YUV2GRAY_I420 = ColorYuv2grayI420
  COLOR_YUV2GRAY_IYUV = ColorYuv2grayIyuv
  COLOR_YUV2GRAY_NV12 = ColorYuv2grayNv12
  COLOR_YUV2GRAY_NV21 = ColorYuv2grayNv21
  COLOR_YUV2GRAY_UYNV = ColorYuv2grayUynv
  COLOR_YUV2GRAY_UYVY = ColorYuv2grayUyvy
  COLOR_YUV2GRAY_Y422 = ColorYuv2grayY422
  COLOR_YUV2GRAY_YUNV = ColorYuv2grayYunv
  COLOR_YUV2GRAY_YUY2 = ColorYuv2grayYuy2
  COLOR_YUV2GRAY_YUYV = ColorYuv2grayYuyv
  COLOR_YUV2GRAY_YV12 = ColorYuv2grayYv12
  COLOR_YUV2GRAY_YVYU = ColorYuv2grayYvyu
  COLOR_YUV2RGB = ColorYuv2rgb
  COLOR_YUV2RGBA_I420 = ColorYuv2rgbaI420
  COLOR_YUV2RGBA_IYUV = ColorYuv2rgbaIyuv
  COLOR_YUV2RGBA_NV12 = ColorYuv2rgbaNv12
  COLOR_YUV2RGBA_NV21 = ColorYuv2rgbaNv21
  COLOR_YUV2RGBA_UYNV = ColorYuv2rgbaUynv
  COLOR_YUV2RGBA_UYVY = ColorYuv2rgbaUyvy
  COLOR_YUV2RGBA_Y422 = ColorYuv2rgbaY422
  COLOR_YUV2RGBA_YUNV = ColorYuv2rgbaYunv
  COLOR_YUV2RGBA_YUY2 = ColorYuv2rgbaYuy2
  COLOR_YUV2RGBA_YUYV = ColorYuv2rgbaYuyv
  COLOR_YUV2RGBA_YV12 = ColorYuv2rgbaYv12
  COLOR_YUV2RGBA_YVYU = ColorYuv2rgbaYvyu
  COLOR_YUV2RGB_I420 = ColorYuv2rgbI420
  COLOR_YUV2RGB_IYUV = ColorYuv2rgbIyuv
  COLOR_YUV2RGB_NV12 = ColorYuv2rgbNv12
  COLOR_YUV2RGB_NV21 = ColorYuv2rgbNv21
  COLOR_YUV2RGB_UYNV = ColorYuv2rgbUynv
  COLOR_YUV2RGB_UYVY = ColorYuv2rgbUyvy
  COLOR_YUV2RGB_Y422 = ColorYuv2rgbY422
  COLOR_YUV2RGB_YUNV = ColorYuv2rgbYunv
  COLOR_YUV2RGB_YUY2 = ColorYuv2rgbYuy2
  COLOR_YUV2RGB_YUYV = ColorYuv2rgbYuyv
  COLOR_YUV2RGB_YV12 = ColorYuv2rgbYv12
  COLOR_YUV2RGB_YVYU = ColorYuv2rgbYvyu
  COLOR_YUV420p2BGR = COLORYUV420p2BGR
  COLOR_YUV420p2BGRA = COLORYUV420p2BGRA
  COLOR_YUV420p2GRAY = COLORYUV420p2GRAY
  COLOR_YUV420p2RGB = COLORYUV420p2RGB
  COLOR_YUV420p2RGBA = COLORYUV420p2RGBA
  COLOR_YUV420sp2BGR = COLORYUV420sp2BGR
  COLOR_YUV420sp2BGRA = COLORYUV420sp2BGRA
  COLOR_YUV420sp2GRAY = COLORYUV420sp2GRAY
  COLOR_YUV420sp2RGB = COLORYUV420sp2RGB
  COLOR_YUV420sp2RGBA = COLORYUV420sp2RGBA
  CV_BILATERAL = CvBilateral
  CV_BLUR = CvBlur
  CV_BLUR_NO_SCALE = CvBlurNoScale
  CV_CANNY_L2_GRADIENT = CvCannyL2Gradient
  CV_CHAIN_CODE = CvChainCode
  CV_CLOCKWISE = CvClockwise
  CV_COMP_BHATTACHARYYA = CvCompBhattacharyya
  CV_COMP_CHISQR = CvCompChisqr
  CV_COMP_CHISQR_ALT = CvCompChisqrAlt
  CV_COMP_CORREL = CvCompCorrel
  CV_COMP_HELLINGER = CvCompHellinger
  CV_COMP_INTERSECT = CvCompIntersect
  CV_COMP_KL_DIV = CvCompKlDiv
  CV_CONTOURS_MATCH_I1 = CvContoursMatchI1
  CV_CONTOURS_MATCH_I2 = CvContoursMatchI2
  CV_CONTOURS_MATCH_I3 = CvContoursMatchI3
  CV_COUNTER_CLOCKWISE = CvCounterClockwise
  CV_DIST_C = CvDistC
  CV_DIST_FAIR = CvDistFair
  CV_DIST_HUBER = CvDistHuber
  CV_DIST_L1 = CvDistL1
  CV_DIST_L12 = CvDistL12
  CV_DIST_L2 = CvDistL2
  CV_DIST_LABEL_CCOMP = CvDistLabelCcomp
  CV_DIST_LABEL_PIXEL = CvDistLabelPixel
  CV_DIST_MASK_3 = CvDistMask3
  CV_DIST_MASK_5 = CvDistMask5
  CV_DIST_MASK_PRECISE = CvDistMaskPrecise
  CV_DIST_USER = CvDistUser
  CV_DIST_WELSCH = CvDistWelsch
  CV_GAUSSIAN = CvGaussian
  CV_GAUSSIAN_5x5 = CVGAUSSIAN5x5
  CV_HOUGH_GRADIENT = CvHoughGradient
  CV_HOUGH_MULTI_SCALE = CvHoughMultiScale
  CV_HOUGH_PROBABILISTIC = CvHoughProbabilistic
  CV_HOUGH_STANDARD = CvHoughStandard
  CV_LINK_RUNS = CvLinkRuns
  CV_MAX_SOBEL_KSIZE = CvMaxSobelKsize
  CV_MEDIAN = CvMedian
  CV_mRGBA2RGBA = CVMRGBA2RGBA
  CV_POLY_APPROX_DP = CvPolyApproxDp
  CV_RGBA2mRGBA = CVRGBA2mRGBA
  CV_SCHARR = CvScharr
  CV_SHAPE_CROSS = CvShapeCross
  CV_SHAPE_CUSTOM = CvShapeCustom
  CV_SHAPE_ELLIPSE = CvShapeEllipse
  CV_SHAPE_RECT = CvShapeRect
  CV_WARP_FILL_OUTLIERS = CvWarpFillOutliers
  CV_WARP_INVERSE_MAP = CvWarpInverseMap
  DIST_C = DistC
  DIST_FAIR = DistFair
  DIST_HUBER = DistHuber
  DIST_L1 = DistL1
  DIST_L12 = DistL12
  DIST_L2 = DistL2
  DIST_LABEL_CCOMP = DistLabelCcomp
  DIST_LABEL_PIXEL = DistLabelPixel
  DIST_MASK_3 = DistMask3
  DIST_MASK_5 = DistMask5
  DIST_MASK_PRECISE = DistMaskPrecise
  DIST_USER = DistUser
  DIST_WELSCH = DistWelsch
  FLOODFILL_FIXED_RANGE = FloodfillFixedRange
  FLOODFILL_MASK_ONLY = FloodfillMaskOnly
  GC_BGD = GcBgd
  GC_EVAL = GcEval
  GC_FGD = GcFgd
  GC_INIT_WITH_MASK = GcInitWithMask
  GC_INIT_WITH_RECT = GcInitWithRect
  GC_PR_BGD = GcPrBgd
  GC_PR_FGD = GcPrFgd
  HISTCMP_BHATTACHARYYA = HistcmpBhattacharyya
  HISTCMP_CHISQR = HistcmpChisqr
  HISTCMP_CHISQR_ALT = HistcmpChisqrAlt
  HISTCMP_CORREL = HistcmpCorrel
  HISTCMP_HELLINGER = HistcmpHellinger
  HISTCMP_INTERSECT = HistcmpIntersect
  HISTCMP_KL_DIV = HistcmpKlDiv
  HOUGH_GRADIENT = HoughGradient
  HOUGH_MULTI_SCALE = HoughMultiScale
  HOUGH_PROBABILISTIC = HoughProbabilistic
  HOUGH_STANDARD = HoughStandard
  INTER_AREA = InterArea
  INTER_BITS = InterBits
  INTER_BITS2 = InterBits2
  INTER_CUBIC = InterCubic
  INTER_LANCZOS4 = InterLanczos4
  INTER_LINEAR = InterLinear
  INTER_MAX = InterMax
  INTER_NEAREST = InterNearest
  INTERSECT_FULL = IntersectFull
  INTERSECT_NONE = IntersectNone
  INTERSECT_PARTIAL = IntersectPartial
  INTER_TAB_SIZE = InterTabSize
  INTER_TAB_SIZE2 = InterTabSize2
  LINE_4 = Line4
  LINE_8 = Line8
  LINE_AA = LineAa
  LSD_REFINE_ADV = LsdRefineAdv
  LSD_REFINE_NONE = LsdRefineNone
  LSD_REFINE_STD = LsdRefineStd
  MARKER_CROSS = MarkerCross
  MARKER_DIAMOND = MarkerDiamond
  MARKER_SQUARE = MarkerSquare
  MARKER_STAR = MarkerStar
  MARKER_TILTED_CROSS = MarkerTiltedCross
  MARKER_TRIANGLE_DOWN = MarkerTriangleDown
  MARKER_TRIANGLE_UP = MarkerTriangleUp
  MORPH_BLACKHAT = MorphBlackhat
  MORPH_CLOSE = MorphClose
  MORPH_CROSS = MorphCross
  MORPH_DILATE = MorphDilate
  MORPH_ELLIPSE = MorphEllipse
  MORPH_ERODE = MorphErode
  MORPH_GRADIENT = MorphGradient
  MORPH_HITMISS = MorphHitmiss
  MORPH_OPEN = MorphOpen
  MORPH_RECT = MorphRect
  MORPH_TOPHAT = MorphTophat
  PROJ_SPHERICAL_EQRECT = ProjSphericalEqrect
  PROJ_SPHERICAL_ORTHO = ProjSphericalOrtho
  RETR_CCOMP = RetrCcomp
  RETR_EXTERNAL = RetrExternal
  RETR_FLOODFILL = RetrFloodfill
  RETR_LIST = RetrList
  RETR_TREE = RetrTree
  THRESH_BINARY = ThreshBinary
  THRESH_BINARY_INV = ThreshBinaryInv
  THRESH_MASK = ThreshMask
  THRESH_OTSU = ThreshOtsu
  THRESH_TOZERO = ThreshTozero
  THRESH_TOZERO_INV = ThreshTozeroInv
  THRESH_TRIANGLE = ThreshTriangle
  THRESH_TRUNC = ThreshTrunc
  TM_CCOEFF = TmCcoeff
  TM_CCOEFF_NORMED = TmCcoeffNormed
  TM_CCORR = TmCcorr
  TM_CCORR_NORMED = TmCcorrNormed
  TM_SQDIFF = TmSqdiff
  TM_SQDIFF_NORMED = TmSqdiffNormed
  WARP_FILL_OUTLIERS = WarpFillOutliers
  WARP_INVERSE_MAP = WarpInverseMap
  accumulate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Accumulate(OpenCV.Core.Mat, OpenCV.Core.Mat)
  accumulate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Accumulate(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  accumulateProduct(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = AccumulateProduct(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  accumulateProduct(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = AccumulateProduct(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  accumulateSquare(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = AccumulateSquare(OpenCV.Core.Mat, OpenCV.Core.Mat)
  accumulateSquare(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = AccumulateSquare(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  accumulateWeighted(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;D)V = AccumulateWeighted(OpenCV.Core.Mat, OpenCV.Core.Mat, double)
  accumulateWeighted(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DLorg/opencv/core/Mat;)V = AccumulateWeighted(OpenCV.Core.Mat, OpenCV.Core.Mat, double, OpenCV.Core.Mat)
  adaptiveThreshold(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DIIID)V = AdaptiveThreshold(OpenCV.Core.Mat, OpenCV.Core.Mat, double, int, int, int, double)
  applyColorMap(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = ApplyColorMap(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  approxPolyDP(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;DZ)V = ApproxPolyDP(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, double, bool)
  arcLength(Lorg/opencv/core/MatOfPoint2f;Z)D = ArcLength(OpenCV.Core.MatOfPoint2f, bool)
  arrowedLine(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;)V = ArrowedLine(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar)
  arrowedLine(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;IIID)V = ArrowedLine(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar, int, int, int, double)
  bilateralFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IDD)V = BilateralFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, double, double)
  bilateralFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IDDI)V = BilateralFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, double, double, int)
  blur(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;)V = Blur(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size)
  blur(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Point;)V = Blur(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Point)
  blur(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Point;I)V = Blur(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Point, int)
  boundingRect(Lorg/opencv/core/MatOfPoint;)Lorg/opencv/core/Rect; = BoundingRect(OpenCV.Core.MatOfPoint)
  boxFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Size;)V = BoxFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Size)
  boxFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Size;Lorg/opencv/core/Point;Z)V = BoxFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Size, OpenCV.Core.Point, bool)
  boxFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Size;Lorg/opencv/core/Point;ZI)V = BoxFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Size, OpenCV.Core.Point, bool, int)
  boxPoints(Lorg/opencv/core/RotatedRect;Lorg/opencv/core/Mat;)V = BoxPoints(OpenCV.Core.RotatedRect, OpenCV.Core.Mat)
  calcBackProject(Ljava/util/List;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfFloat;D)V = CalcBackProject(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.MatOfInt, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfFloat, double)
  calcHist(Ljava/util/List;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/MatOfFloat;)V = CalcHist(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.MatOfInt, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfInt, OpenCV.Core.MatOfFloat)
  calcHist(Ljava/util/List;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/MatOfFloat;Z)V = CalcHist(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.MatOfInt, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfInt, OpenCV.Core.MatOfFloat, bool)
  Canny(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DD)V = Canny(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double)
  Canny(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDIZ)V = Canny(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int, bool)
  circle(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;ILorg/opencv/core/Scalar;)V = Circle(OpenCV.Core.Mat, OpenCV.Core.Point, int, OpenCV.Core.Scalar)
  circle(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;ILorg/opencv/core/Scalar;I)V = Circle(OpenCV.Core.Mat, OpenCV.Core.Point, int, OpenCV.Core.Scalar, int)
  circle(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;ILorg/opencv/core/Scalar;III)V = Circle(OpenCV.Core.Mat, OpenCV.Core.Point, int, OpenCV.Core.Scalar, int, int, int)
  clipLine(Lorg/opencv/core/Rect;Lorg/opencv/core/Point;Lorg/opencv/core/Point;)Z = ClipLine(OpenCV.Core.Rect, OpenCV.Core.Point, OpenCV.Core.Point)
  compareHist(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)D = CompareHist(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  connectedComponents(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = ConnectedComponents(OpenCV.Core.Mat, OpenCV.Core.Mat)
  connectedComponents(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)I = ConnectedComponents(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  connectedComponentsWithStats(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = ConnectedComponentsWithStats(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  connectedComponentsWithStats(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)I = ConnectedComponentsWithStats(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  contourArea(Lorg/opencv/core/Mat;)D = ContourArea(OpenCV.Core.Mat)
  contourArea(Lorg/opencv/core/Mat;Z)D = ContourArea(OpenCV.Core.Mat, bool)
  convertMaps(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = ConvertMaps(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  convertMaps(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IZ)V = ConvertMaps(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, bool)
  convexHull(Lorg/opencv/core/MatOfPoint;Lorg/opencv/core/MatOfInt;)V = ConvexHull(OpenCV.Core.MatOfPoint, OpenCV.Core.MatOfInt)
  convexHull(Lorg/opencv/core/MatOfPoint;Lorg/opencv/core/MatOfInt;Z)V = ConvexHull(OpenCV.Core.MatOfPoint, OpenCV.Core.MatOfInt, bool)
  convexityDefects(Lorg/opencv/core/MatOfPoint;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/MatOfInt4;)V = ConvexityDefects(OpenCV.Core.MatOfPoint, OpenCV.Core.MatOfInt, OpenCV.Core.MatOfInt4)
  cornerEigenValsAndVecs(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = CornerEigenValsAndVecs(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  cornerEigenValsAndVecs(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = CornerEigenValsAndVecs(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  cornerHarris(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IID)V = CornerHarris(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, double)
  cornerHarris(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIDI)V = CornerHarris(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, double, int)
  cornerMinEigenVal(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = CornerMinEigenVal(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  cornerMinEigenVal(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = CornerMinEigenVal(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  cornerMinEigenVal(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = CornerMinEigenVal(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  cornerSubPix(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Size;Lorg/opencv/core/Size;Lorg/opencv/core/TermCriteria;)V = CornerSubPix(OpenCV.Core.Mat, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Size, OpenCV.Core.Size, OpenCV.Core.TermCriteria)
  createCLAHE()Lorg/opencv/imgproc/CLAHE; = CreateCLAHE()
  createCLAHE(DLorg/opencv/core/Size;)Lorg/opencv/imgproc/CLAHE; = CreateCLAHE(double, OpenCV.Core.Size)
  createHanningWindow(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;I)V = CreateHanningWindow(OpenCV.Core.Mat, OpenCV.Core.Size, int)
  createLineSegmentDetector()Lorg/opencv/imgproc/LineSegmentDetector; = CreateLineSegmentDetector()
  createLineSegmentDetector(IDDDDDDI)Lorg/opencv/imgproc/LineSegmentDetector; = CreateLineSegmentDetector(int, double, double, double, double, double, double, int)
  cvtColor(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = CvtColor(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  cvtColor(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = CvtColor(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  demosaicing(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Demosaicing(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  demosaicing(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = Demosaicing(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  dilate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Dilate(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  dilate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;I)V = Dilate(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, int)
  dilate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;IILorg/opencv/core/Scalar;)V = Dilate(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, int, int, OpenCV.Core.Scalar)
  distanceTransform(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = DistanceTransform(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  distanceTransform(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = DistanceTransform(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  distanceTransformWithLabels(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = DistanceTransformWithLabels(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  distanceTransformWithLabels(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = DistanceTransformWithLabels(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  drawContours(Lorg/opencv/core/Mat;Ljava/util/List;ILorg/opencv/core/Scalar;)V = DrawContours(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, int, OpenCV.Core.Scalar)
  drawContours(Lorg/opencv/core/Mat;Ljava/util/List;ILorg/opencv/core/Scalar;I)V = DrawContours(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, int, OpenCV.Core.Scalar, int)
  drawContours(Lorg/opencv/core/Mat;Ljava/util/List;ILorg/opencv/core/Scalar;IILorg/opencv/core/Mat;ILorg/opencv/core/Point;)V = DrawContours(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, int, OpenCV.Core.Scalar, int, int, OpenCV.Core.Mat, int, OpenCV.Core.Point)
  drawMarker(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;)V = DrawMarker(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Scalar)
  drawMarker(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;IIII)V = DrawMarker(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Scalar, int, int, int, int)
  ellipse(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Size;DDDLorg/opencv/core/Scalar;)V = Ellipse(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Size, double, double, double, OpenCV.Core.Scalar)
  ellipse(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Size;DDDLorg/opencv/core/Scalar;I)V = Ellipse(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Size, double, double, double, OpenCV.Core.Scalar, int)
  ellipse(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Size;DDDLorg/opencv/core/Scalar;III)V = Ellipse(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Size, double, double, double, OpenCV.Core.Scalar, int, int, int)
  ellipse(Lorg/opencv/core/Mat;Lorg/opencv/core/RotatedRect;Lorg/opencv/core/Scalar;)V = Ellipse(OpenCV.Core.Mat, OpenCV.Core.RotatedRect, OpenCV.Core.Scalar)
  ellipse(Lorg/opencv/core/Mat;Lorg/opencv/core/RotatedRect;Lorg/opencv/core/Scalar;I)V = Ellipse(OpenCV.Core.Mat, OpenCV.Core.RotatedRect, OpenCV.Core.Scalar, int)
  ellipse(Lorg/opencv/core/Mat;Lorg/opencv/core/RotatedRect;Lorg/opencv/core/Scalar;II)V = Ellipse(OpenCV.Core.Mat, OpenCV.Core.RotatedRect, OpenCV.Core.Scalar, int, int)
  ellipse2Poly(Lorg/opencv/core/Point;Lorg/opencv/core/Size;IIIILorg/opencv/core/MatOfPoint;)V = Ellipse2Poly(OpenCV.Core.Point, OpenCV.Core.Size, int, int, int, int, OpenCV.Core.MatOfPoint)
  equalizeHist(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = EqualizeHist(OpenCV.Core.Mat, OpenCV.Core.Mat)
  erode(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Erode(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  erode(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;I)V = Erode(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, int)
  erode(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;IILorg/opencv/core/Scalar;)V = Erode(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, int, int, OpenCV.Core.Scalar)
  fillConvexPoly(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint;Lorg/opencv/core/Scalar;)V = FillConvexPoly(OpenCV.Core.Mat, OpenCV.Core.MatOfPoint, OpenCV.Core.Scalar)
  fillConvexPoly(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint;Lorg/opencv/core/Scalar;II)V = FillConvexPoly(OpenCV.Core.Mat, OpenCV.Core.MatOfPoint, OpenCV.Core.Scalar, int, int)
  fillPoly(Lorg/opencv/core/Mat;Ljava/util/List;Lorg/opencv/core/Scalar;)V = FillPoly(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, OpenCV.Core.Scalar)
  fillPoly(Lorg/opencv/core/Mat;Ljava/util/List;Lorg/opencv/core/Scalar;IILorg/opencv/core/Point;)V = FillPoly(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, OpenCV.Core.Scalar, int, int, OpenCV.Core.Point)
  filter2D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)V = Filter2D(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat)
  filter2D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Point;D)V = Filter2D(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Point, double)
  filter2D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Point;DI)V = Filter2D(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Point, double, int)
  findContours(Lorg/opencv/core/Mat;Ljava/util/List;Lorg/opencv/core/Mat;II)V = FindContours(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, OpenCV.Core.Mat, int, int)
  findContours(Lorg/opencv/core/Mat;Ljava/util/List;Lorg/opencv/core/Mat;IILorg/opencv/core/Point;)V = FindContours(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, OpenCV.Core.Mat, int, int, OpenCV.Core.Point)
  fitEllipse(Lorg/opencv/core/MatOfPoint2f;)Lorg/opencv/core/RotatedRect; = FitEllipse(OpenCV.Core.MatOfPoint2f)
  fitLine(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IDDD)V = FitLine(OpenCV.Core.Mat, OpenCV.Core.Mat, int, double, double, double)
  floodFill(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;)I = FloodFill(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Scalar)
  floodFill(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;Lorg/opencv/core/Rect;Lorg/opencv/core/Scalar;Lorg/opencv/core/Scalar;I)I = FloodFill(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Scalar, OpenCV.Core.Rect, OpenCV.Core.Scalar, OpenCV.Core.Scalar, int)
  GaussianBlur(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;D)V = GaussianBlur(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, double)
  GaussianBlur(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;DD)V = GaussianBlur(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, double, double)
  GaussianBlur(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;DDI)V = GaussianBlur(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, double, double, int)
  getAffineTransform(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;)Lorg/opencv/core/Mat; = GetAffineTransform(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f)
  getDefaultNewCameraMatrix(Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = GetDefaultNewCameraMatrix(OpenCV.Core.Mat)
  getDefaultNewCameraMatrix(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Z)Lorg/opencv/core/Mat; = GetDefaultNewCameraMatrix(OpenCV.Core.Mat, OpenCV.Core.Size, bool)
  getDerivKernels(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = GetDerivKernels(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  getDerivKernels(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIIZI)V = GetDerivKernels(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int, bool, int)
  getGaborKernel(Lorg/opencv/core/Size;DDDD)Lorg/opencv/core/Mat; = GetGaborKernel(OpenCV.Core.Size, double, double, double, double)
  getGaborKernel(Lorg/opencv/core/Size;DDDDDI)Lorg/opencv/core/Mat; = GetGaborKernel(OpenCV.Core.Size, double, double, double, double, double, int)
  getGaussianKernel(ID)Lorg/opencv/core/Mat; = GetGaussianKernel(int, double)
  getGaussianKernel(IDI)Lorg/opencv/core/Mat; = GetGaussianKernel(int, double, int)
  getPerspectiveTransform(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = GetPerspectiveTransform(OpenCV.Core.Mat, OpenCV.Core.Mat)
  getRectSubPix(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Point;Lorg/opencv/core/Mat;)V = GetRectSubPix(OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Point, OpenCV.Core.Mat)
  getRectSubPix(Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Point;Lorg/opencv/core/Mat;I)V = GetRectSubPix(OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Point, OpenCV.Core.Mat, int)
  getRotationMatrix2D(Lorg/opencv/core/Point;DD)Lorg/opencv/core/Mat; = GetRotationMatrix2D(OpenCV.Core.Point, double, double)
  getStructuringElement(ILorg/opencv/core/Size;)Lorg/opencv/core/Mat; = GetStructuringElement(int, OpenCV.Core.Size)
  getStructuringElement(ILorg/opencv/core/Size;Lorg/opencv/core/Point;)Lorg/opencv/core/Mat; = GetStructuringElement(int, OpenCV.Core.Size, OpenCV.Core.Point)
  getTextSize(Ljava/lang/String;IDI[I)Lorg/opencv/core/Size; = GetTextSize(string, int, double, int, int[])
  goodFeaturesToTrack(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint;IDD)V = GoodFeaturesToTrack(OpenCV.Core.Mat, OpenCV.Core.MatOfPoint, int, double, double)
  goodFeaturesToTrack(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint;IDDLorg/opencv/core/Mat;IZD)V = GoodFeaturesToTrack(OpenCV.Core.Mat, OpenCV.Core.MatOfPoint, int, double, double, OpenCV.Core.Mat, int, bool, double)
  grabCut(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Rect;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = GrabCut(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Rect, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  grabCut(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Rect;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = GrabCut(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Rect, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  HoughCircles(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IDD)V = HoughCircles(OpenCV.Core.Mat, OpenCV.Core.Mat, int, double, double)
  HoughCircles(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IDDDDII)V = HoughCircles(OpenCV.Core.Mat, OpenCV.Core.Mat, int, double, double, double, double, int, int)
  HoughLines(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDI)V = HoughLines(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int)
  HoughLines(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDIDDDD)V = HoughLines(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int, double, double, double, double)
  HoughLinesP(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDI)V = HoughLinesP(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int)
  HoughLinesP(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDIDD)V = HoughLinesP(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int, double, double)
  HuMoments(Lorg/opencv/imgproc/Moments;Lorg/opencv/core/Mat;)V = HuMoments(OpenCV.ImgProc.Moments, OpenCV.Core.Mat)
  initUndistortRectifyMap(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = InitUndistortRectifyMap(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int, OpenCV.Core.Mat, OpenCV.Core.Mat)
  initWideAngleProjMap(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;IILorg/opencv/core/Mat;Lorg/opencv/core/Mat;)F = InitWideAngleProjMap(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int, int, OpenCV.Core.Mat, OpenCV.Core.Mat)
  initWideAngleProjMap(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;IILorg/opencv/core/Mat;Lorg/opencv/core/Mat;ID)F = InitWideAngleProjMap(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int, int, OpenCV.Core.Mat, OpenCV.Core.Mat, int, double)
  integral(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Integral(OpenCV.Core.Mat, OpenCV.Core.Mat)
  integral(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Integral(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  integral2(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Integral2(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  integral2(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = Integral2(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  integral3(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Integral3(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  integral3(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = Integral3(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  intersectConvexConvex(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)F = IntersectConvexConvex(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  intersectConvexConvex(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Z)F = IntersectConvexConvex(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, bool)
  invertAffineTransform(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = InvertAffineTransform(OpenCV.Core.Mat, OpenCV.Core.Mat)
  isContourConvex(Lorg/opencv/core/MatOfPoint;)Z = IsContourConvex(OpenCV.Core.MatOfPoint)
  Laplacian(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Laplacian(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  Laplacian(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIDD)V = Laplacian(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, double, double)
  Laplacian(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIDDI)V = Laplacian(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, double, double, int)
  line(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;)V = Line(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar)
  line(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;I)V = Line(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar, int)
  line(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;III)V = Line(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar, int, int, int)
  linearPolar(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;DI)V = LinearPolar(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, double, int)
  logPolar(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;DI)V = LogPolar(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, double, int)
  matchShapes(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ID)D = MatchShapes(OpenCV.Core.Mat, OpenCV.Core.Mat, int, double)
  matchTemplate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = MatchTemplate(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  matchTemplate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)V = MatchTemplate(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat)
  medianBlur(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = MedianBlur(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  minAreaRect(Lorg/opencv/core/MatOfPoint2f;)Lorg/opencv/core/RotatedRect; = MinAreaRect(OpenCV.Core.MatOfPoint2f)
  minEnclosingCircle(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Point;[F)V = MinEnclosingCircle(OpenCV.Core.MatOfPoint2f, OpenCV.Core.Point, float[])
  minEnclosingTriangle(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = MinEnclosingTriangle(OpenCV.Core.Mat, OpenCV.Core.Mat)
  moments(Lorg/opencv/core/Mat;)Lorg/opencv/imgproc/Moments; = Moments(OpenCV.Core.Mat)
  moments(Lorg/opencv/core/Mat;Z)Lorg/opencv/imgproc/Moments; = Moments(OpenCV.Core.Mat, bool)
  morphologyEx(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)V = MorphologyEx(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat)
  morphologyEx(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Point;I)V = MorphologyEx(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Point, int)
  morphologyEx(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Point;IILorg/opencv/core/Scalar;)V = MorphologyEx(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Point, int, int, OpenCV.Core.Scalar)
  phaseCorrelate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Point; = PhaseCorrelate(OpenCV.Core.Mat, OpenCV.Core.Mat)
  phaseCorrelate(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;[D)Lorg/opencv/core/Point; = PhaseCorrelate(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double[])
  pointPolygonTest(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Point;Z)D = PointPolygonTest(OpenCV.Core.MatOfPoint2f, OpenCV.Core.Point, bool)
  polylines(Lorg/opencv/core/Mat;Ljava/util/List;ZLorg/opencv/core/Scalar;)V = Polylines(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, bool, OpenCV.Core.Scalar)
  polylines(Lorg/opencv/core/Mat;Ljava/util/List;ZLorg/opencv/core/Scalar;I)V = Polylines(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, bool, OpenCV.Core.Scalar, int)
  polylines(Lorg/opencv/core/Mat;Ljava/util/List;ZLorg/opencv/core/Scalar;III)V = Polylines(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, bool, OpenCV.Core.Scalar, int, int, int)
  preCornerDetect(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = PreCornerDetect(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  preCornerDetect(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = PreCornerDetect(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  putText(Lorg/opencv/core/Mat;Ljava/lang/String;Lorg/opencv/core/Point;IDLorg/opencv/core/Scalar;)V = PutText(OpenCV.Core.Mat, string, OpenCV.Core.Point, int, double, OpenCV.Core.Scalar)
  putText(Lorg/opencv/core/Mat;Ljava/lang/String;Lorg/opencv/core/Point;IDLorg/opencv/core/Scalar;I)V = PutText(OpenCV.Core.Mat, string, OpenCV.Core.Point, int, double, OpenCV.Core.Scalar, int)
  putText(Lorg/opencv/core/Mat;Ljava/lang/String;Lorg/opencv/core/Point;IDLorg/opencv/core/Scalar;IIZ)V = PutText(OpenCV.Core.Mat, string, OpenCV.Core.Point, int, double, OpenCV.Core.Scalar, int, int, bool)
  pyrDown(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PyrDown(OpenCV.Core.Mat, OpenCV.Core.Mat)
  pyrDown(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;)V = PyrDown(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size)
  pyrDown(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;I)V = PyrDown(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int)
  pyrMeanShiftFiltering(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DD)V = PyrMeanShiftFiltering(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double)
  pyrMeanShiftFiltering(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDILorg/opencv/core/TermCriteria;)V = PyrMeanShiftFiltering(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int, OpenCV.Core.TermCriteria)
  pyrUp(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PyrUp(OpenCV.Core.Mat, OpenCV.Core.Mat)
  pyrUp(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;)V = PyrUp(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size)
  pyrUp(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;I)V = PyrUp(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int)
  rectangle(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;)V = Rectangle(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar)
  rectangle(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;I)V = Rectangle(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar, int)
  rectangle(Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Point;Lorg/opencv/core/Scalar;III)V = Rectangle(OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Point, OpenCV.Core.Scalar, int, int, int)
  remap(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = Remap(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  remap(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IILorg/opencv/core/Scalar;)V = Remap(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, OpenCV.Core.Scalar)
  resize(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;)V = Resize(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size)
  resize(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;DDI)V = Resize(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, double, double, int)
  rotatedRectangleIntersection(Lorg/opencv/core/RotatedRect;Lorg/opencv/core/RotatedRect;Lorg/opencv/core/Mat;)I = RotatedRectangleIntersection(OpenCV.Core.RotatedRect, OpenCV.Core.RotatedRect, OpenCV.Core.Mat)
  Scharr(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = Scharr(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  Scharr(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIIDD)V = Scharr(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int, double, double)
  Scharr(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIIDDI)V = Scharr(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int, double, double, int)
  sepFilter2D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = SepFilter2D(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Mat)
  sepFilter2D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;D)V = SepFilter2D(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, double)
  sepFilter2D(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;DI)V = SepFilter2D(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, double, int)
  Sobel(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;III)V = Sobel(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int)
  Sobel(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIIIDD)V = Sobel(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int, int, double, double)
  Sobel(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IIIIDDI)V = Sobel(OpenCV.Core.Mat, OpenCV.Core.Mat, int, int, int, int, double, double, int)
  spatialGradient(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = SpatialGradient(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  spatialGradient(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)V = SpatialGradient(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  spatialGradient(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;II)V = SpatialGradient(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, int)
  sqrBoxFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Size;)V = SqrBoxFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Size)
  sqrBoxFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Size;Lorg/opencv/core/Point;Z)V = SqrBoxFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Size, OpenCV.Core.Point, bool)
  sqrBoxFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/Size;Lorg/opencv/core/Point;ZI)V = SqrBoxFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.Size, OpenCV.Core.Point, bool, int)
  threshold(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DDI)D = Threshold(OpenCV.Core.Mat, OpenCV.Core.Mat, double, double, int)
  undistort(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Undistort(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  undistort(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Undistort(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  undistortPoints(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = UndistortPoints(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.Mat)
  undistortPoints(Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = UndistortPoints(OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  warpAffine(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;)V = WarpAffine(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size)
  warpAffine(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;I)V = WarpAffine(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int)
  warpAffine(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;IILorg/opencv/core/Scalar;)V = WarpAffine(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int, int, OpenCV.Core.Scalar)
  warpPerspective(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;)V = WarpPerspective(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size)
  warpPerspective(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;I)V = WarpPerspective(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int)
  warpPerspective(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;IILorg/opencv/core/Scalar;)V = WarpPerspective(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, int, int, OpenCV.Core.Scalar)
  watershed(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Watershed(OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/imgproc/LineSegmentDetector = OpenCV.ImgProc.LineSegmentDetector
  <init>(J)V = .ctor(long)
  compareSegments(Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = CompareSegments(OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat)
  compareSegments(Lorg/opencv/core/Size;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)I = CompareSegments(OpenCV.Core.Size, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  detect(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Detect(OpenCV.Core.Mat, OpenCV.Core.Mat)
  detect(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Detect(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  drawSegments(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = DrawSegments(OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/imgproc/Moments = OpenCV.ImgProc.Moments
  <init>()V = .ctor()
  <init>([D)V = .ctor(double[])
  <init>(DDDDDDDDDD)V = .ctor(double, double, double, double, double, double, double, double, double, double)
  m00 = M00
  m01 = M01
  m02 = M02
  m03 = M03
  m10 = M10
  m11 = M11
  m12 = M12
  m20 = M20
  m21 = M21
  m30 = M30
  mu02 = Mu02
  mu03 = Mu03
  mu11 = Mu11
  mu12 = Mu12
  mu20 = Mu20
  mu21 = Mu21
  mu30 = Mu30
  nu02 = Nu02
  nu03 = Nu03
  nu11 = Nu11
  nu12 = Nu12
  nu20 = Nu20
  nu21 = Nu21
  nu30 = Nu30
  completeState()V = CompleteState()
  get_m00()D = Get_m00()
  get_m01()D = Get_m01()
  get_m02()D = Get_m02()
  get_m03()D = Get_m03()
  get_m10()D = Get_m10()
  get_m11()D = Get_m11()
  get_m12()D = Get_m12()
  get_m20()D = Get_m20()
  get_m21()D = Get_m21()
  get_m30()D = Get_m30()
  get_mu02()D = Get_mu02()
  get_mu03()D = Get_mu03()
  get_mu11()D = Get_mu11()
  get_mu12()D = Get_mu12()
  get_mu20()D = Get_mu20()
  get_mu21()D = Get_mu21()
  get_mu30()D = Get_mu30()
  get_nu02()D = Get_nu02()
  get_nu03()D = Get_nu03()
  get_nu11()D = Get_nu11()
  get_nu12()D = Get_nu12()
  get_nu20()D = Get_nu20()
  get_nu21()D = Get_nu21()
  get_nu30()D = Get_nu30()
  set([D)V = Set(double[])
  set_m00(D)V = Set_m00(double)
  set_m01(D)V = Set_m01(double)
  set_m02(D)V = Set_m02(double)
  set_m03(D)V = Set_m03(double)
  set_m10(D)V = Set_m10(double)
  set_m11(D)V = Set_m11(double)
  set_m12(D)V = Set_m12(double)
  set_m20(D)V = Set_m20(double)
  set_m21(D)V = Set_m21(double)
  set_m30(D)V = Set_m30(double)
  set_mu02(D)V = Set_mu02(double)
  set_mu03(D)V = Set_mu03(double)
  set_mu11(D)V = Set_mu11(double)
  set_mu12(D)V = Set_mu12(double)
  set_mu20(D)V = Set_mu20(double)
  set_mu21(D)V = Set_mu21(double)
  set_mu30(D)V = Set_mu30(double)
  set_nu02(D)V = Set_nu02(double)
  set_nu03(D)V = Set_nu03(double)
  set_nu11(D)V = Set_nu11(double)
  set_nu12(D)V = Set_nu12(double)
  set_nu20(D)V = Set_nu20(double)
  set_nu21(D)V = Set_nu21(double)
  set_nu30(D)V = Set_nu30(double)
org/opencv/imgproc/Subdiv2D = OpenCV.ImgProc.Subdiv2D
  <init>()V = .ctor()
  <init>(J)V = .ctor(long)
  <init>(Lorg/opencv/core/Rect;)V = .ctor(OpenCV.Core.Rect)
  nativeObj = NativeObj
  NEXT_AROUND_DST = NextAroundDst
  NEXT_AROUND_LEFT = NextAroundLeft
  NEXT_AROUND_ORG = NextAroundOrg
  NEXT_AROUND_RIGHT = NextAroundRight
  PREV_AROUND_DST = PrevAroundDst
  PREV_AROUND_LEFT = PrevAroundLeft
  PREV_AROUND_ORG = PrevAroundOrg
  PREV_AROUND_RIGHT = PrevAroundRight
  PTLOC_ERROR = PtlocError
  PTLOC_INSIDE = PtlocInside
  PTLOC_ON_EDGE = PtlocOnEdge
  PTLOC_OUTSIDE_RECT = PtlocOutsideRect
  PTLOC_VERTEX = PtlocVertex
  edgeDst(I)I = EdgeDst(int)
  edgeDst(ILorg/opencv/core/Point;)I = EdgeDst(int, OpenCV.Core.Point)
  edgeOrg(I)I = EdgeOrg(int)
  edgeOrg(ILorg/opencv/core/Point;)I = EdgeOrg(int, OpenCV.Core.Point)
  findNearest(Lorg/opencv/core/Point;)I = FindNearest(OpenCV.Core.Point)
  findNearest(Lorg/opencv/core/Point;Lorg/opencv/core/Point;)I = FindNearest(OpenCV.Core.Point, OpenCV.Core.Point)
  getEdge(II)I = GetEdge(int, int)
  getEdgeList(Lorg/opencv/core/MatOfFloat4;)V = GetEdgeList(OpenCV.Core.MatOfFloat4)
  getTriangleList(Lorg/opencv/core/MatOfFloat6;)V = GetTriangleList(OpenCV.Core.MatOfFloat6)
  getVertex(I)Lorg/opencv/core/Point; = GetVertex(int)
  getVertex(I[I)Lorg/opencv/core/Point; = GetVertex(int, int[])
  getVoronoiFacetList(Lorg/opencv/core/MatOfInt;Ljava/util/List;Lorg/opencv/core/MatOfPoint2f;)V = GetVoronoiFacetList(OpenCV.Core.MatOfInt, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint2f>, OpenCV.Core.MatOfPoint2f)
  initDelaunay(Lorg/opencv/core/Rect;)V = InitDelaunay(OpenCV.Core.Rect)
  insert(Lorg/opencv/core/MatOfPoint2f;)V = Insert(OpenCV.Core.MatOfPoint2f)
  insert(Lorg/opencv/core/Point;)I = Insert(OpenCV.Core.Point)
  locate(Lorg/opencv/core/Point;[I[I)I = Locate(OpenCV.Core.Point, int[], int[])
  nextEdge(I)I = NextEdge(int)
  rotateEdge(II)I = RotateEdge(int, int)
  symEdge(I)I = SymEdge(int)
org/opencv/ml/ANN_MLP = OpenCV.ML.ANN_MLP
  <init>(J)V = .ctor(long)
  BACKPROP = Backprop
  GAUSSIAN = Gaussian
  IDENTITY = Identity
  NO_INPUT_SCALE = NoInputScale
  NO_OUTPUT_SCALE = NoOutputScale
  RPROP = Rprop
  SIGMOID_SYM = SigmoidSym
  UPDATE_WEIGHTS = UpdateWeights
  getBackpropMomentumScale()D = BackpropMomentumScale
  setBackpropMomentumScale(D)V = BackpropMomentumScale
  getBackpropWeightScale()D = BackpropWeightScale
  setBackpropWeightScale(D)V = BackpropWeightScale
  getLayerSizes()Lorg/opencv/core/Mat; = LayerSizes
  setLayerSizes(Lorg/opencv/core/Mat;)V = LayerSizes
  getRpropDW0()D = RpropDW0
  setRpropDW0(D)V = RpropDW0
  getRpropDWMax()D = RpropDWMax
  setRpropDWMax(D)V = RpropDWMax
  getRpropDWMin()D = RpropDWMin
  setRpropDWMin(D)V = RpropDWMin
  getRpropDWMinus()D = RpropDWMinus
  setRpropDWMinus(D)V = RpropDWMinus
  getRpropDWPlus()D = RpropDWPlus
  setRpropDWPlus(D)V = RpropDWPlus
  getTermCriteria()Lorg/opencv/core/TermCriteria; = TermCriteria
  setTermCriteria(Lorg/opencv/core/TermCriteria;)V = TermCriteria
  getTrainMethod()I = TrainMethod
  setTrainMethod(I)V = TrainMethod
  create()Lorg/opencv/ml/ANN_MLP; = Create()
  getWeights(I)Lorg/opencv/core/Mat; = GetWeights(int)
  setActivationFunction(I)V = SetActivationFunction(int)
  setActivationFunction(IDD)V = SetActivationFunction(int, double, double)
  setTrainMethod(IDD)V = SetTrainMethod(int, double, double)
org/opencv/ml/Boost = OpenCV.ML.Boost
  <init>(J)V = .ctor(long)
  DISCRETE = Discrete
  GENTLE = Gentle
  LOGIT = Logit
  REAL = Real
  getBoostType()I = BoostType
  setBoostType(I)V = BoostType
  getWeakCount()I = WeakCount
  setWeakCount(I)V = WeakCount
  getWeightTrimRate()D = WeightTrimRate
  setWeightTrimRate(D)V = WeightTrimRate
  create()Lorg/opencv/ml/Boost; = Create()
org/opencv/ml/DTrees = OpenCV.ML.DTrees
  <init>(J)V = .ctor(long)
  PREDICT_AUTO = PredictAuto
  PREDICT_MASK = PredictMask
  PREDICT_MAX_VOTE = PredictMaxVote
  PREDICT_SUM = PredictSum
  getCVFolds()I = CVFolds
  setCVFolds(I)V = CVFolds
  getMaxCategories()I = MaxCategories
  setMaxCategories(I)V = MaxCategories
  getMaxDepth()I = MaxDepth
  setMaxDepth(I)V = MaxDepth
  getMinSampleCount()I = MinSampleCount
  setMinSampleCount(I)V = MinSampleCount
  getPriors()Lorg/opencv/core/Mat; = Priors
  setPriors(Lorg/opencv/core/Mat;)V = Priors
  getRegressionAccuracy()F = RegressionAccuracy
  setRegressionAccuracy(F)V = RegressionAccuracy
  getTruncatePrunedTree()Z = TruncatePrunedTree
  setTruncatePrunedTree(Z)V = TruncatePrunedTree
  getUse1SERule()Z = Use1SERule
  setUse1SERule(Z)V = Use1SERule
  getUseSurrogates()Z = UseSurrogates
  setUseSurrogates(Z)V = UseSurrogates
  create()Lorg/opencv/ml/DTrees; = Create()
org/opencv/ml/EM = OpenCV.ML.EM
  <init>(J)V = .ctor(long)
  COV_MAT_DEFAULT = CovMatDefault
  COV_MAT_DIAGONAL = CovMatDiagonal
  COV_MAT_GENERIC = CovMatGeneric
  COV_MAT_SPHERICAL = CovMatSpherical
  DEFAULT_MAX_ITERS = DefaultMaxIters
  DEFAULT_NCLUSTERS = DefaultNclusters
  START_AUTO_STEP = StartAutoStep
  START_E_STEP = StartEStep
  START_M_STEP = StartMStep
  getClustersNumber()I = ClustersNumber
  setClustersNumber(I)V = ClustersNumber
  getCovarianceMatrixType()I = CovarianceMatrixType
  setCovarianceMatrixType(I)V = CovarianceMatrixType
  getMeans()Lorg/opencv/core/Mat; = Means
  getTermCriteria()Lorg/opencv/core/TermCriteria; = TermCriteria
  setTermCriteria(Lorg/opencv/core/TermCriteria;)V = TermCriteria
  getWeights()Lorg/opencv/core/Mat; = Weights
  create()Lorg/opencv/ml/EM; = Create()
  getCovs(Ljava/util/List;)V = GetCovs(System.Collections.Generic.IList<OpenCV.Core.Mat>)
  predict2(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)[D = Predict2(OpenCV.Core.Mat, OpenCV.Core.Mat)
  trainE(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = TrainE(OpenCV.Core.Mat, OpenCV.Core.Mat)
  trainE(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = TrainE(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  trainEM(Lorg/opencv/core/Mat;)Z = TrainEM(OpenCV.Core.Mat)
  trainEM(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = TrainEM(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  trainM(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = TrainM(OpenCV.Core.Mat, OpenCV.Core.Mat)
  trainM(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Z = TrainM(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/ml/KNearest = OpenCV.ML.KNearest
  <init>(J)V = .ctor(long)
  BRUTE_FORCE = BruteForce
  KDTREE = Kdtree
  getAlgorithmType()I = AlgorithmType
  setAlgorithmType(I)V = AlgorithmType
  getDefaultK()I = DefaultK
  setDefaultK(I)V = DefaultK
  getEmax()I = Emax
  setEmax(I)V = Emax
  getIsClassifier()Z = IsClassifier
  create()Lorg/opencv/ml/KNearest; = Create()
  findNearest(Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)F = FindNearest(OpenCV.Core.Mat, int, OpenCV.Core.Mat)
  findNearest(Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)F = FindNearest(OpenCV.Core.Mat, int, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  setIsClassifier(Z)V = SetIsClassifier(bool)
org/opencv/ml/LogisticRegression = OpenCV.ML.LogisticRegression
  <init>(J)V = .ctor(long)
  BATCH = Batch
  MINI_BATCH = MiniBatch
  REG_DISABLE = RegDisable
  REG_L1 = RegL1
  REG_L2 = RegL2
  getIterations()I = Iterations
  setIterations(I)V = Iterations
  getLearningRate()D = LearningRate
  setLearningRate(D)V = LearningRate
  getMiniBatchSize()I = MiniBatchSize
  setMiniBatchSize(I)V = MiniBatchSize
  getRegularization()I = Regularization
  setRegularization(I)V = Regularization
  getTermCriteria()Lorg/opencv/core/TermCriteria; = TermCriteria
  setTermCriteria(Lorg/opencv/core/TermCriteria;)V = TermCriteria
  getTrainMethod()I = TrainMethod
  setTrainMethod(I)V = TrainMethod
  create()Lorg/opencv/ml/LogisticRegression; = Create()
  get_learnt_thetas()Lorg/opencv/core/Mat; = Get_learnt_thetas()
org/opencv/ml/Ml = OpenCV.ML.Ml
  <init>()V = .ctor()
  COL_SAMPLE = ColSample
  ROW_SAMPLE = RowSample
  TEST_ERROR = TestError
  TRAIN_ERROR = TrainError
  VAR_CATEGORICAL = VarCategorical
  VAR_NUMERICAL = VarNumerical
  VAR_ORDERED = VarOrdered
org/opencv/ml/NormalBayesClassifier = OpenCV.ML.NormalBayesClassifier
  <init>(J)V = .ctor(long)
  create()Lorg/opencv/ml/NormalBayesClassifier; = Create()
  predictProb(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)F = PredictProb(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  predictProb(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)F = PredictProb(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
org/opencv/ml/RTrees = OpenCV.ML.RTrees
  <init>(J)V = .ctor(long)
  getActiveVarCount()I = ActiveVarCount
  setActiveVarCount(I)V = ActiveVarCount
  getCalculateVarImportance()Z = CalculateVarImportance
  setCalculateVarImportance(Z)V = CalculateVarImportance
  getTermCriteria()Lorg/opencv/core/TermCriteria; = TermCriteria
  setTermCriteria(Lorg/opencv/core/TermCriteria;)V = TermCriteria
  getVarImportance()Lorg/opencv/core/Mat; = VarImportance
  create()Lorg/opencv/ml/RTrees; = Create()
org/opencv/ml/StatModel = OpenCV.ML.StatModel
  <init>(J)V = .ctor(long)
  COMPRESSED_INPUT = CompressedInput
  PREPROCESSED_INPUT = PreprocessedInput
  RAW_OUTPUT = RawOutput
  UPDATE_MODEL = UpdateModel
  isClassifier()Z = IsClassifier
  isTrained()Z = IsTrained
  getVarCount()I = VarCount
  empty()Z = Empty()
  predict(Lorg/opencv/core/Mat;)F = Predict(OpenCV.Core.Mat)
  predict(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)F = Predict(OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  train(Lorg/opencv/core/Mat;ILorg/opencv/core/Mat;)Z = Train(OpenCV.Core.Mat, int, OpenCV.Core.Mat)
org/opencv/ml/SVM = OpenCV.ML.SVM
  <init>(J)V = .ctor(long)
  C = C
  CHI2 = Chi2
  COEF = Coef
  C_SVC = CSvc
  CUSTOM = Custom
  DEGREE = Degree
  EPS_SVR = EpsSvr
  GAMMA = Gamma
  INTER = Inter
  LINEAR = Linear
  NU = Nu
  NU_SVC = NuSvc
  NU_SVR = NuSvr
  ONE_CLASS = OneClass
  P = P
  POLY = Poly
  RBF = Rbf
  SIGMOID = Sigmoid
  getClassWeights()Lorg/opencv/core/Mat; = ClassWeights
  setClassWeights(Lorg/opencv/core/Mat;)V = ClassWeights
  getCoef0()D = Coef0
  setCoef0(D)V = Coef0
  getDegree()D = Degree
  setDegree(D)V = Degree
  getGamma()D = Gamma
  setGamma(D)V = Gamma
  getKernelType()I = KernelType
  getNu()D = Nu
  setNu(D)V = Nu
  getSupportVectors()Lorg/opencv/core/Mat; = SupportVectors
  getTermCriteria()Lorg/opencv/core/TermCriteria; = TermCriteria
  setTermCriteria(Lorg/opencv/core/TermCriteria;)V = TermCriteria
  getType()I = Type
  setType(I)V = Type
  getUncompressedSupportVectors()Lorg/opencv/core/Mat; = UncompressedSupportVectors
  create()Lorg/opencv/ml/SVM; = Create()
  getC()D = GetC()
  getDecisionFunction(ILorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = GetDecisionFunction(int, OpenCV.Core.Mat, OpenCV.Core.Mat)
  getP()D = GetP()
  setC(D)V = SetC(double)
  setKernel(I)V = SetKernel(int)
  setP(D)V = SetP(double)
org/opencv/ml/TrainData = OpenCV.ML.TrainData
  <init>(J)V = .ctor(long)
  nativeObj = NativeObj
  getCatMap()Lorg/opencv/core/Mat; = CatMap
  getCatOfs()Lorg/opencv/core/Mat; = CatOfs
  getClassLabels()Lorg/opencv/core/Mat; = ClassLabels
  getDefaultSubstValues()Lorg/opencv/core/Mat; = DefaultSubstValues
  getLayout()I = Layout
  getMissing()Lorg/opencv/core/Mat; = Missing
  getNAllVars()I = NAllVars
  getNormCatResponses()Lorg/opencv/core/Mat; = NormCatResponses
  getNSamples()I = NSamples
  getNTestSamples()I = NTestSamples
  getNTrainSamples()I = NTrainSamples
  getNVars()I = NVars
  getResponses()Lorg/opencv/core/Mat; = Responses
  getResponseType()I = ResponseType
  getSamples()Lorg/opencv/core/Mat; = Samples
  getSampleWeights()Lorg/opencv/core/Mat; = SampleWeights
  getTestNormCatResponses()Lorg/opencv/core/Mat; = TestNormCatResponses
  getTestResponses()Lorg/opencv/core/Mat; = TestResponses
  getTestSampleIdx()Lorg/opencv/core/Mat; = TestSampleIdx
  getTestSampleWeights()Lorg/opencv/core/Mat; = TestSampleWeights
  getTrainNormCatResponses()Lorg/opencv/core/Mat; = TrainNormCatResponses
  getTrainResponses()Lorg/opencv/core/Mat; = TrainResponses
  getTrainSampleIdx()Lorg/opencv/core/Mat; = TrainSampleIdx
  getTrainSamples()Lorg/opencv/core/Mat; = TrainSamples
  getTrainSampleWeights()Lorg/opencv/core/Mat; = TrainSampleWeights
  getVarIdx()Lorg/opencv/core/Mat; = VarIdx
  getVarType()Lorg/opencv/core/Mat; = VarType
  getCatCount(I)I = GetCatCount(int)
  getSample(Lorg/opencv/core/Mat;IF)V = GetSample(OpenCV.Core.Mat, int, float)
  getSubVector(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = GetSubVector(OpenCV.Core.Mat, OpenCV.Core.Mat)
  getTrainSamples(IZZ)Lorg/opencv/core/Mat; = GetTrainSamples(int, bool, bool)
  getValues(ILorg/opencv/core/Mat;F)V = GetValues(int, OpenCV.Core.Mat, float)
  setTrainTestSplit(I)V = SetTrainTestSplit(int)
  setTrainTestSplit(IZ)V = SetTrainTestSplit(int, bool)
  setTrainTestSplitRatio(D)V = SetTrainTestSplitRatio(double)
  setTrainTestSplitRatio(DZ)V = SetTrainTestSplitRatio(double, bool)
  shuffleTrainTest()V = ShuffleTrainTest()
org/opencv/objdetect/BaseCascadeClassifier = OpenCV.ObjDetect.BaseCascadeClassifier
  <init>(J)V = .ctor(long)
org/opencv/objdetect/CascadeClassifier = OpenCV.ObjDetect.CascadeClassifier
  <init>()V = .ctor()
  <init>(J)V = .ctor(long)
  <init>(Ljava/lang/String;)V = .ctor(string)
  nativeObj = NativeObj
  getFeatureType()I = FeatureType
  isOldFormatCascade()Z = IsOldFormatCascade
  getOriginalWindowSize()Lorg/opencv/core/Size; = OriginalWindowSize
  convert(Ljava/lang/String;Ljava/lang/String;)Z = Convert(string, string)
  detectMultiScale(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;)V = DetectMultiScale(OpenCV.Core.Mat, OpenCV.Core.MatOfRect)
  detectMultiScale(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;DIILorg/opencv/core/Size;Lorg/opencv/core/Size;)V = DetectMultiScale(OpenCV.Core.Mat, OpenCV.Core.MatOfRect, double, int, int, OpenCV.Core.Size, OpenCV.Core.Size)
  detectMultiScale2(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfInt;)V = DetectMultiScale2(OpenCV.Core.Mat, OpenCV.Core.MatOfRect, OpenCV.Core.MatOfInt)
  detectMultiScale2(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfInt;DIILorg/opencv/core/Size;Lorg/opencv/core/Size;)V = DetectMultiScale2(OpenCV.Core.Mat, OpenCV.Core.MatOfRect, OpenCV.Core.MatOfInt, double, int, int, OpenCV.Core.Size, OpenCV.Core.Size)
  detectMultiScale3(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/MatOfDouble;)V = DetectMultiScale3(OpenCV.Core.Mat, OpenCV.Core.MatOfRect, OpenCV.Core.MatOfInt, OpenCV.Core.MatOfDouble)
  detectMultiScale3(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfInt;Lorg/opencv/core/MatOfDouble;DIILorg/opencv/core/Size;Lorg/opencv/core/Size;Z)V = DetectMultiScale3(OpenCV.Core.Mat, OpenCV.Core.MatOfRect, OpenCV.Core.MatOfInt, OpenCV.Core.MatOfDouble, double, int, int, OpenCV.Core.Size, OpenCV.Core.Size, bool)
  empty()Z = Empty()
  load(Ljava/lang/String;)Z = Load(string)
org/opencv/objdetect/HOGDescriptor = OpenCV.ObjDetect.HOGDescriptor
  <init>()V = .ctor()
  <init>(J)V = .ctor(long)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Lorg/opencv/core/Size;Lorg/opencv/core/Size;Lorg/opencv/core/Size;Lorg/opencv/core/Size;I)V = .ctor(OpenCV.Core.Size, OpenCV.Core.Size, OpenCV.Core.Size, OpenCV.Core.Size, int)
  <init>(Lorg/opencv/core/Size;Lorg/opencv/core/Size;Lorg/opencv/core/Size;Lorg/opencv/core/Size;IIDIDZIZ)V = .ctor(OpenCV.Core.Size, OpenCV.Core.Size, OpenCV.Core.Size, OpenCV.Core.Size, int, int, double, int, double, bool, int, bool)
  DEFAULT_NLEVELS = DefaultNlevels
  L2Hys = L2Hys
  nativeObj = NativeObj
  getDaimlerPeopleDetector()Lorg/opencv/core/MatOfFloat; = DaimlerPeopleDetector
  getDefaultPeopleDetector()Lorg/opencv/core/MatOfFloat; = DefaultPeopleDetector
  getDescriptorSize()J = DescriptorSize
  getWinSigma()D = WinSigma
  checkDetectorSize()Z = CheckDetectorSize()
  compute(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfFloat;)V = Compute(OpenCV.Core.Mat, OpenCV.Core.MatOfFloat)
  compute(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfFloat;Lorg/opencv/core/Size;Lorg/opencv/core/Size;Lorg/opencv/core/MatOfPoint;)V = Compute(OpenCV.Core.Mat, OpenCV.Core.MatOfFloat, OpenCV.Core.Size, OpenCV.Core.Size, OpenCV.Core.MatOfPoint)
  computeGradient(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ComputeGradient(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  computeGradient(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Size;Lorg/opencv/core/Size;)V = ComputeGradient(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Size, OpenCV.Core.Size)
  detect(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint;Lorg/opencv/core/MatOfDouble;)V = Detect(OpenCV.Core.Mat, OpenCV.Core.MatOfPoint, OpenCV.Core.MatOfDouble)
  detect(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint;Lorg/opencv/core/MatOfDouble;DLorg/opencv/core/Size;Lorg/opencv/core/Size;Lorg/opencv/core/MatOfPoint;)V = Detect(OpenCV.Core.Mat, OpenCV.Core.MatOfPoint, OpenCV.Core.MatOfDouble, double, OpenCV.Core.Size, OpenCV.Core.Size, OpenCV.Core.MatOfPoint)
  detectMultiScale(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfDouble;)V = DetectMultiScale(OpenCV.Core.Mat, OpenCV.Core.MatOfRect, OpenCV.Core.MatOfDouble)
  detectMultiScale(Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfDouble;DLorg/opencv/core/Size;Lorg/opencv/core/Size;DDZ)V = DetectMultiScale(OpenCV.Core.Mat, OpenCV.Core.MatOfRect, OpenCV.Core.MatOfDouble, double, OpenCV.Core.Size, OpenCV.Core.Size, double, double, bool)
  get_blockSize()Lorg/opencv/core/Size; = Get_blockSize()
  get_blockStride()Lorg/opencv/core/Size; = Get_blockStride()
  get_cellSize()Lorg/opencv/core/Size; = Get_cellSize()
  get_derivAperture()I = Get_derivAperture()
  get_gammaCorrection()Z = Get_gammaCorrection()
  get_histogramNormType()I = Get_histogramNormType()
  get_L2HysThreshold()D = Get_L2HysThreshold()
  get_nbins()I = Get_nbins()
  get_nlevels()I = Get_nlevels()
  get_signedGradient()Z = Get_signedGradient()
  get_svmDetector()Lorg/opencv/core/MatOfFloat; = Get_svmDetector()
  get_winSigma()D = Get_winSigma()
  get_winSize()Lorg/opencv/core/Size; = Get_winSize()
  load(Ljava/lang/String;)Z = Load(string)
  load(Ljava/lang/String;Ljava/lang/String;)Z = Load(string, string)
  save(Ljava/lang/String;)V = Save(string)
  save(Ljava/lang/String;Ljava/lang/String;)V = Save(string, string)
  setSVMDetector(Lorg/opencv/core/Mat;)V = SetSVMDetector(OpenCV.Core.Mat)
org/opencv/objdetect/Objdetect = OpenCV.ObjDetect.Objdetect
  <init>()V = .ctor()
  CASCADE_DO_CANNY_PRUNING = CascadeDoCannyPruning
  CASCADE_DO_ROUGH_SEARCH = CascadeDoRoughSearch
  CASCADE_FIND_BIGGEST_OBJECT = CascadeFindBiggestObject
  CASCADE_SCALE_IMAGE = CascadeScaleImage
  groupRectangles(Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfInt;I)V = GroupRectangles(OpenCV.Core.MatOfRect, OpenCV.Core.MatOfInt, int)
  groupRectangles(Lorg/opencv/core/MatOfRect;Lorg/opencv/core/MatOfInt;ID)V = GroupRectangles(OpenCV.Core.MatOfRect, OpenCV.Core.MatOfInt, int, double)
org/opencv/photo/AlignExposures = OpenCV.Photo.AlignExposures
  <init>(J)V = .ctor(long)
  process(Ljava/util/List;Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Process(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/photo/AlignMTB = OpenCV.Photo.AlignMTB
  <init>(J)V = .ctor(long)
  getCut()Z = Cut
  setCut(Z)V = Cut
  getExcludeRange()I = ExcludeRange
  setExcludeRange(I)V = ExcludeRange
  getMaxBits()I = MaxBits
  setMaxBits(I)V = MaxBits
  calculateShift(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)Lorg/opencv/core/Point; = CalculateShift(OpenCV.Core.Mat, OpenCV.Core.Mat)
  computeBitmaps(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ComputeBitmaps(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  process(Ljava/util/List;Ljava/util/List;)V = Process(System.Collections.Generic.IList<OpenCV.Core.Mat>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  shiftMat(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;)V = ShiftMat(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point)
org/opencv/photo/CalibrateCRF = OpenCV.Photo.CalibrateCRF
  <init>(J)V = .ctor(long)
  process(Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Process(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/photo/CalibrateDebevec = OpenCV.Photo.CalibrateDebevec
  <init>(J)V = .ctor(long)
  getLambda()F = Lambda
  setLambda(F)V = Lambda
  getRandom()Z = Random
  setRandom(Z)V = Random
  getSamples()I = Samples
  setSamples(I)V = Samples
org/opencv/photo/CalibrateRobertson = OpenCV.Photo.CalibrateRobertson
  <init>(J)V = .ctor(long)
  getMaxIter()I = MaxIter
  setMaxIter(I)V = MaxIter
  getRadiance()Lorg/opencv/core/Mat; = Radiance
  getThreshold()F = Threshold
  setThreshold(F)V = Threshold
org/opencv/photo/MergeDebevec = OpenCV.Photo.MergeDebevec
  <init>(J)V = .ctor(long)
  process(Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Process(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/photo/MergeExposures = OpenCV.Photo.MergeExposures
  <init>(J)V = .ctor(long)
  process(Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Process(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/photo/MergeMertens = OpenCV.Photo.MergeMertens
  <init>(J)V = .ctor(long)
  getContrastWeight()F = ContrastWeight
  setContrastWeight(F)V = ContrastWeight
  getExposureWeight()F = ExposureWeight
  setExposureWeight(F)V = ExposureWeight
  getSaturationWeight()F = SaturationWeight
  setSaturationWeight(F)V = SaturationWeight
  process(Ljava/util/List;Lorg/opencv/core/Mat;)V = Process(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat)
org/opencv/photo/MergeRobertson = OpenCV.Photo.MergeRobertson
  <init>(J)V = .ctor(long)
  process(Ljava/util/List;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Process(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/photo/Photo = OpenCV.Photo.Photo
  <init>()V = .ctor()
  INPAINT_NS = InpaintNs
  INPAINT_TELEA = InpaintTelea
  LDR_SIZE = LdrSize
  MIXED_CLONE = MixedClone
  MONOCHROME_TRANSFER = MonochromeTransfer
  NORMAL_CLONE = NormalClone
  NORMCONV_FILTER = NormconvFilter
  RECURS_FILTER = RecursFilter
  colorChange(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = ColorChange(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  colorChange(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FFF)V = ColorChange(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, float, float, float)
  createAlignMTB()Lorg/opencv/photo/AlignMTB; = CreateAlignMTB()
  createAlignMTB(IIZ)Lorg/opencv/photo/AlignMTB; = CreateAlignMTB(int, int, bool)
  createCalibrateDebevec()Lorg/opencv/photo/CalibrateDebevec; = CreateCalibrateDebevec()
  createCalibrateDebevec(IFZ)Lorg/opencv/photo/CalibrateDebevec; = CreateCalibrateDebevec(int, float, bool)
  createCalibrateRobertson()Lorg/opencv/photo/CalibrateRobertson; = CreateCalibrateRobertson()
  createCalibrateRobertson(IF)Lorg/opencv/photo/CalibrateRobertson; = CreateCalibrateRobertson(int, float)
  createMergeDebevec()Lorg/opencv/photo/MergeDebevec; = CreateMergeDebevec()
  createMergeMertens()Lorg/opencv/photo/MergeMertens; = CreateMergeMertens()
  createMergeMertens(FFF)Lorg/opencv/photo/MergeMertens; = CreateMergeMertens(float, float, float)
  createMergeRobertson()Lorg/opencv/photo/MergeRobertson; = CreateMergeRobertson()
  createTonemap()Lorg/opencv/photo/Tonemap; = CreateTonemap()
  createTonemap(F)Lorg/opencv/photo/Tonemap; = CreateTonemap(float)
  createTonemapDrago()Lorg/opencv/photo/TonemapDrago; = CreateTonemapDrago()
  createTonemapDrago(FFF)Lorg/opencv/photo/TonemapDrago; = CreateTonemapDrago(float, float, float)
  createTonemapDurand()Lorg/opencv/photo/TonemapDurand; = CreateTonemapDurand()
  createTonemapDurand(FFFFF)Lorg/opencv/photo/TonemapDurand; = CreateTonemapDurand(float, float, float, float, float)
  createTonemapMantiuk()Lorg/opencv/photo/TonemapMantiuk; = CreateTonemapMantiuk()
  createTonemapMantiuk(FFF)Lorg/opencv/photo/TonemapMantiuk; = CreateTonemapMantiuk(float, float, float)
  createTonemapReinhard()Lorg/opencv/photo/TonemapReinhard; = CreateTonemapReinhard()
  createTonemapReinhard(FFFF)Lorg/opencv/photo/TonemapReinhard; = CreateTonemapReinhard(float, float, float, float)
  decolor(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Decolor(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  denoise_TVL1(Ljava/util/List;Lorg/opencv/core/Mat;)V = Denoise_TVL1(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat)
  denoise_TVL1(Ljava/util/List;Lorg/opencv/core/Mat;DI)V = Denoise_TVL1(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, double, int)
  detailEnhance(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = DetailEnhance(OpenCV.Core.Mat, OpenCV.Core.Mat)
  detailEnhance(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FF)V = DetailEnhance(OpenCV.Core.Mat, OpenCV.Core.Mat, float, float)
  edgePreservingFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = EdgePreservingFilter(OpenCV.Core.Mat, OpenCV.Core.Mat)
  edgePreservingFilter(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;IFF)V = EdgePreservingFilter(OpenCV.Core.Mat, OpenCV.Core.Mat, int, float, float)
  fastNlMeansDenoising(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = FastNlMeansDenoising(OpenCV.Core.Mat, OpenCV.Core.Mat)
  fastNlMeansDenoising(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FII)V = FastNlMeansDenoising(OpenCV.Core.Mat, OpenCV.Core.Mat, float, int, int)
  fastNlMeansDenoising(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfFloat;)V = FastNlMeansDenoising(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfFloat)
  fastNlMeansDenoising(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfFloat;III)V = FastNlMeansDenoising(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfFloat, int, int, int)
  fastNlMeansDenoisingColored(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = FastNlMeansDenoisingColored(OpenCV.Core.Mat, OpenCV.Core.Mat)
  fastNlMeansDenoisingColored(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FFII)V = FastNlMeansDenoisingColored(OpenCV.Core.Mat, OpenCV.Core.Mat, float, float, int, int)
  fastNlMeansDenoisingColoredMulti(Ljava/util/List;Lorg/opencv/core/Mat;II)V = FastNlMeansDenoisingColoredMulti(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, int, int)
  fastNlMeansDenoisingColoredMulti(Ljava/util/List;Lorg/opencv/core/Mat;IIFFII)V = FastNlMeansDenoisingColoredMulti(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, int, int, float, float, int, int)
  fastNlMeansDenoisingMulti(Ljava/util/List;Lorg/opencv/core/Mat;II)V = FastNlMeansDenoisingMulti(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, int, int)
  fastNlMeansDenoisingMulti(Ljava/util/List;Lorg/opencv/core/Mat;IIFII)V = FastNlMeansDenoisingMulti(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, int, int, float, int, int)
  fastNlMeansDenoisingMulti(Ljava/util/List;Lorg/opencv/core/Mat;IILorg/opencv/core/MatOfFloat;)V = FastNlMeansDenoisingMulti(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, int, int, OpenCV.Core.MatOfFloat)
  fastNlMeansDenoisingMulti(Ljava/util/List;Lorg/opencv/core/Mat;IILorg/opencv/core/MatOfFloat;III)V = FastNlMeansDenoisingMulti(System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Mat, int, int, OpenCV.Core.MatOfFloat, int, int, int)
  illuminationChange(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = IlluminationChange(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  illuminationChange(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FF)V = IlluminationChange(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, float, float)
  inpaint(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DI)V = Inpaint(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, int)
  pencilSketch(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = PencilSketch(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  pencilSketch(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FFF)V = PencilSketch(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, float, float, float)
  seamlessClone(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Point;Lorg/opencv/core/Mat;I)V = SeamlessClone(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Point, OpenCV.Core.Mat, int)
  stylization(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Stylization(OpenCV.Core.Mat, OpenCV.Core.Mat)
  stylization(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FF)V = Stylization(OpenCV.Core.Mat, OpenCV.Core.Mat, float, float)
  textureFlattening(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = TextureFlattening(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  textureFlattening(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;FFI)V = TextureFlattening(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, float, float, int)
org/opencv/photo/Tonemap = OpenCV.Photo.Tonemap
  <init>(J)V = .ctor(long)
  getGamma()F = Gamma
  setGamma(F)V = Gamma
  process(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Process(OpenCV.Core.Mat, OpenCV.Core.Mat)
org/opencv/photo/TonemapDrago = OpenCV.Photo.TonemapDrago
  <init>(J)V = .ctor(long)
  getBias()F = Bias
  setBias(F)V = Bias
  getSaturation()F = Saturation
  setSaturation(F)V = Saturation
org/opencv/photo/TonemapDurand = OpenCV.Photo.TonemapDurand
  <init>(J)V = .ctor(long)
  getContrast()F = Contrast
  setContrast(F)V = Contrast
  getSaturation()F = Saturation
  setSaturation(F)V = Saturation
  getSigmaColor()F = SigmaColor
  setSigmaColor(F)V = SigmaColor
  getSigmaSpace()F = SigmaSpace
  setSigmaSpace(F)V = SigmaSpace
org/opencv/photo/TonemapMantiuk = OpenCV.Photo.TonemapMantiuk
  <init>(J)V = .ctor(long)
  getSaturation()F = Saturation
  setSaturation(F)V = Saturation
  getScale()F = Scale
  setScale(F)V = Scale
org/opencv/photo/TonemapReinhard = OpenCV.Photo.TonemapReinhard
  <init>(J)V = .ctor(long)
  getColorAdaptation()F = ColorAdaptation
  setColorAdaptation(F)V = ColorAdaptation
  getIntensity()F = Intensity
  setIntensity(F)V = Intensity
  getLightAdaptation()F = LightAdaptation
  setLightAdaptation(F)V = LightAdaptation
org/opencv/utils/Converters = OpenCV.Utils.Converters
  <init>()V = .ctor()
  Mat_to_vector_char(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_char(OpenCV.Core.Mat, System.Collections.Generic.IList<Java.Lang.Byte>)
  Mat_to_vector_DMatch(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_DMatch(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.DMatch>)
  Mat_to_vector_double(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_double(OpenCV.Core.Mat, System.Collections.Generic.IList<Java.Lang.Double>)
  Mat_to_vector_float(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_float(OpenCV.Core.Mat, System.Collections.Generic.IList<Java.Lang.Float>)
  Mat_to_vector_int(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_int(OpenCV.Core.Mat, System.Collections.Generic.IList<Java.Lang.Integer>)
  Mat_to_vector_KeyPoint(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_KeyPoint(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.KeyPoint>)
  Mat_to_vector_Mat(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Mat(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  Mat_to_vector_Point(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Point(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Point>)
  Mat_to_vector_Point2d(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Point2d(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Point>)
  Mat_to_vector_Point2f(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Point2f(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Point>)
  Mat_to_vector_Point3(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Point3(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Point3>)
  Mat_to_vector_Point3d(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Point3d(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Point3>)
  Mat_to_vector_Point3f(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Point3f(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Point3>)
  Mat_to_vector_Point3i(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Point3i(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Point3>)
  Mat_to_vector_Rect(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_Rect(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Rect>)
  Mat_to_vector_uchar(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_uchar(OpenCV.Core.Mat, System.Collections.Generic.IList<Java.Lang.Byte>)
  Mat_to_vector_vector_char(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_vector_char(OpenCV.Core.Mat, System.Collections.Generic.IList<System.Collections.Generic.IList<Java.Lang.Byte>>)
  Mat_to_vector_vector_DMatch(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_vector_DMatch(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>)
  Mat_to_vector_vector_KeyPoint(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_vector_KeyPoint(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfKeyPoint>)
  Mat_to_vector_vector_Point(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_vector_Point(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>)
  Mat_to_vector_vector_Point2f(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_vector_Point2f(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint2f>)
  Mat_to_vector_vector_Point3f(Lorg/opencv/core/Mat;Ljava/util/List;)V = Mat_to_vector_vector_Point3f(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.MatOfPoint3f>)
  vector_char_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_char_to_Mat(System.Collections.Generic.IList<Java.Lang.Byte>)
  vector_DMatch_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_DMatch_to_Mat(System.Collections.Generic.IList<OpenCV.Core.DMatch>)
  vector_double_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_double_to_Mat(System.Collections.Generic.IList<Java.Lang.Double>)
  vector_float_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_float_to_Mat(System.Collections.Generic.IList<Java.Lang.Float>)
  vector_int_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_int_to_Mat(System.Collections.Generic.IList<Java.Lang.Integer>)
  vector_KeyPoint_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_KeyPoint_to_Mat(System.Collections.Generic.IList<OpenCV.Core.KeyPoint>)
  vector_Mat_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Mat_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Mat>)
  vector_Point_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Point_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point>)
  vector_Point_to_Mat(Ljava/util/List;I)Lorg/opencv/core/Mat; = Vector_Point_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point>, int)
  vector_Point2d_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Point2d_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point>)
  vector_Point2f_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Point2f_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point>)
  vector_Point3_to_Mat(Ljava/util/List;I)Lorg/opencv/core/Mat; = Vector_Point3_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point3>, int)
  vector_Point3d_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Point3d_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point3>)
  vector_Point3f_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Point3f_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point3>)
  vector_Point3i_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Point3i_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Point3>)
  vector_Rect_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_Rect_to_Mat(System.Collections.Generic.IList<OpenCV.Core.Rect>)
  vector_uchar_to_Mat(Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_uchar_to_Mat(System.Collections.Generic.IList<Java.Lang.Byte>)
  vector_vector_char_to_Mat(Ljava/util/List;Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_vector_char_to_Mat(System.Collections.Generic.IList<OpenCV.Core.MatOfByte>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  vector_vector_DMatch_to_Mat(Ljava/util/List;Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_vector_DMatch_to_Mat(System.Collections.Generic.IList<OpenCV.Core.MatOfDMatch>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  vector_vector_KeyPoint_to_Mat(Ljava/util/List;Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_vector_KeyPoint_to_Mat(System.Collections.Generic.IList<OpenCV.Core.MatOfKeyPoint>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  vector_vector_Point_to_Mat(Ljava/util/List;Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_vector_Point_to_Mat(System.Collections.Generic.IList<OpenCV.Core.MatOfPoint>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  vector_vector_Point2f_to_Mat(Ljava/util/List;Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_vector_Point2f_to_Mat(System.Collections.Generic.IList<OpenCV.Core.MatOfPoint2f>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
  vector_vector_Point3f_to_Mat(Ljava/util/List;Ljava/util/List;)Lorg/opencv/core/Mat; = Vector_vector_Point3f_to_Mat(System.Collections.Generic.IList<OpenCV.Core.MatOfPoint3f>, System.Collections.Generic.IList<OpenCV.Core.Mat>)
org/opencv/video/BackgroundSubtractor = OpenCV.Video.BackgroundSubtractor
  <init>(J)V = .ctor(long)
  apply(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Apply(OpenCV.Core.Mat, OpenCV.Core.Mat)
  apply(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;D)V = Apply(OpenCV.Core.Mat, OpenCV.Core.Mat, double)
  getBackgroundImage(Lorg/opencv/core/Mat;)V = GetBackgroundImage(OpenCV.Core.Mat)
org/opencv/video/BackgroundSubtractorKNN = OpenCV.Video.BackgroundSubtractorKNN
  <init>(J)V = .ctor(long)
  getDetectShadows()Z = DetectShadows
  setDetectShadows(Z)V = DetectShadows
  getDist2Threshold()D = Dist2Threshold
  setDist2Threshold(D)V = Dist2Threshold
  getHistory()I = History
  setHistory(I)V = History
  getNSamples()I = NSamples
  setNSamples(I)V = NSamples
  getShadowThreshold()D = ShadowThreshold
  setShadowThreshold(D)V = ShadowThreshold
  getShadowValue()I = ShadowValue
  setShadowValue(I)V = ShadowValue
  getkNNSamples()I = GetkNNSamples()
  setkNNSamples(I)V = SetkNNSamples(int)
org/opencv/video/BackgroundSubtractorMOG2 = OpenCV.Video.BackgroundSubtractorMOG2
  <init>(J)V = .ctor(long)
  getBackgroundRatio()D = BackgroundRatio
  setBackgroundRatio(D)V = BackgroundRatio
  getComplexityReductionThreshold()D = ComplexityReductionThreshold
  setComplexityReductionThreshold(D)V = ComplexityReductionThreshold
  getDetectShadows()Z = DetectShadows
  setDetectShadows(Z)V = DetectShadows
  getHistory()I = History
  setHistory(I)V = History
  getNMixtures()I = NMixtures
  setNMixtures(I)V = NMixtures
  getShadowThreshold()D = ShadowThreshold
  setShadowThreshold(D)V = ShadowThreshold
  getShadowValue()I = ShadowValue
  setShadowValue(I)V = ShadowValue
  getVarInit()D = VarInit
  setVarInit(D)V = VarInit
  getVarMax()D = VarMax
  setVarMax(D)V = VarMax
  getVarMin()D = VarMin
  setVarMin(D)V = VarMin
  getVarThreshold()D = VarThreshold
  setVarThreshold(D)V = VarThreshold
  getVarThresholdGen()D = VarThresholdGen
  setVarThresholdGen(D)V = VarThresholdGen
org/opencv/video/DenseOpticalFlow = OpenCV.Video.DenseOpticalFlow
  <init>(J)V = .ctor(long)
  calc(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)V = Calc(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  collectGarbage()V = CollectGarbage()
org/opencv/video/DualTVL1OpticalFlow = OpenCV.Video.DualTVL1OpticalFlow
  <init>(J)V = .ctor(long)
org/opencv/video/KalmanFilter = OpenCV.Video.KalmanFilter
  <init>()V = .ctor()
  <init>(II)V = .ctor(int, int)
  <init>(IIII)V = .ctor(int, int, int, int)
  <init>(J)V = .ctor(long)
  nativeObj = NativeObj
  correct(Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = Correct(OpenCV.Core.Mat)
  get_controlMatrix()Lorg/opencv/core/Mat; = Get_controlMatrix()
  get_errorCovPost()Lorg/opencv/core/Mat; = Get_errorCovPost()
  get_errorCovPre()Lorg/opencv/core/Mat; = Get_errorCovPre()
  get_gain()Lorg/opencv/core/Mat; = Get_gain()
  get_measurementMatrix()Lorg/opencv/core/Mat; = Get_measurementMatrix()
  get_measurementNoiseCov()Lorg/opencv/core/Mat; = Get_measurementNoiseCov()
  get_processNoiseCov()Lorg/opencv/core/Mat; = Get_processNoiseCov()
  get_statePost()Lorg/opencv/core/Mat; = Get_statePost()
  get_statePre()Lorg/opencv/core/Mat; = Get_statePre()
  get_transitionMatrix()Lorg/opencv/core/Mat; = Get_transitionMatrix()
  predict()Lorg/opencv/core/Mat; = Predict()
  predict(Lorg/opencv/core/Mat;)Lorg/opencv/core/Mat; = Predict(OpenCV.Core.Mat)
  set_controlMatrix(Lorg/opencv/core/Mat;)V = Set_controlMatrix(OpenCV.Core.Mat)
  set_errorCovPost(Lorg/opencv/core/Mat;)V = Set_errorCovPost(OpenCV.Core.Mat)
  set_errorCovPre(Lorg/opencv/core/Mat;)V = Set_errorCovPre(OpenCV.Core.Mat)
  set_gain(Lorg/opencv/core/Mat;)V = Set_gain(OpenCV.Core.Mat)
  set_measurementMatrix(Lorg/opencv/core/Mat;)V = Set_measurementMatrix(OpenCV.Core.Mat)
  set_measurementNoiseCov(Lorg/opencv/core/Mat;)V = Set_measurementNoiseCov(OpenCV.Core.Mat)
  set_processNoiseCov(Lorg/opencv/core/Mat;)V = Set_processNoiseCov(OpenCV.Core.Mat)
  set_statePost(Lorg/opencv/core/Mat;)V = Set_statePost(OpenCV.Core.Mat)
  set_statePre(Lorg/opencv/core/Mat;)V = Set_statePre(OpenCV.Core.Mat)
  set_transitionMatrix(Lorg/opencv/core/Mat;)V = Set_transitionMatrix(OpenCV.Core.Mat)
org/opencv/video/Video = OpenCV.Video.Video
  <init>()V = .ctor()
  MOTION_AFFINE = MotionAffine
  MOTION_EUCLIDEAN = MotionEuclidean
  MOTION_HOMOGRAPHY = MotionHomography
  MOTION_TRANSLATION = MotionTranslation
  OPTFLOW_FARNEBACK_GAUSSIAN = OptflowFarnebackGaussian
  OPTFLOW_LK_GET_MIN_EIGENVALS = OptflowLkGetMinEigenvals
  OPTFLOW_USE_INITIAL_FLOW = OptflowUseInitialFlow
  buildOpticalFlowPyramid(Lorg/opencv/core/Mat;Ljava/util/List;Lorg/opencv/core/Size;I)I = BuildOpticalFlowPyramid(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, int)
  buildOpticalFlowPyramid(Lorg/opencv/core/Mat;Ljava/util/List;Lorg/opencv/core/Size;IZIIZ)I = BuildOpticalFlowPyramid(OpenCV.Core.Mat, System.Collections.Generic.IList<OpenCV.Core.Mat>, OpenCV.Core.Size, int, bool, int, int, bool)
  calcOpticalFlowFarneback(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;DIIIIDI)V = CalcOpticalFlowFarneback(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, double, int, int, int, int, double, int)
  calcOpticalFlowPyrLK(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfByte;Lorg/opencv/core/MatOfFloat;)V = CalcOpticalFlowPyrLK(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfByte, OpenCV.Core.MatOfFloat)
  calcOpticalFlowPyrLK(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfByte;Lorg/opencv/core/MatOfFloat;Lorg/opencv/core/Size;I)V = CalcOpticalFlowPyrLK(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfByte, OpenCV.Core.MatOfFloat, OpenCV.Core.Size, int)
  calcOpticalFlowPyrLK(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfPoint2f;Lorg/opencv/core/MatOfByte;Lorg/opencv/core/MatOfFloat;Lorg/opencv/core/Size;ILorg/opencv/core/TermCriteria;ID)V = CalcOpticalFlowPyrLK(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfPoint2f, OpenCV.Core.MatOfByte, OpenCV.Core.MatOfFloat, OpenCV.Core.Size, int, OpenCV.Core.TermCriteria, int, double)
  CamShift(Lorg/opencv/core/Mat;Lorg/opencv/core/Rect;Lorg/opencv/core/TermCriteria;)Lorg/opencv/core/RotatedRect; = CamShift(OpenCV.Core.Mat, OpenCV.Core.Rect, OpenCV.Core.TermCriteria)
  createBackgroundSubtractorKNN()Lorg/opencv/video/BackgroundSubtractorKNN; = CreateBackgroundSubtractorKNN()
  createBackgroundSubtractorKNN(IDZ)Lorg/opencv/video/BackgroundSubtractorKNN; = CreateBackgroundSubtractorKNN(int, double, bool)
  createBackgroundSubtractorMOG2()Lorg/opencv/video/BackgroundSubtractorMOG2; = CreateBackgroundSubtractorMOG2()
  createBackgroundSubtractorMOG2(IDZ)Lorg/opencv/video/BackgroundSubtractorMOG2; = CreateBackgroundSubtractorMOG2(int, double, bool)
  createOptFlow_DualTVL1()Lorg/opencv/video/DualTVL1OpticalFlow; = CreateOptFlow_DualTVL1()
  estimateRigidTransform(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Z)Lorg/opencv/core/Mat; = EstimateRigidTransform(OpenCV.Core.Mat, OpenCV.Core.Mat, bool)
  findTransformECC(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;)D = FindTransformECC(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat)
  findTransformECC(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;I)D = FindTransformECC(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int)
  findTransformECC(Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;Lorg/opencv/core/Mat;ILorg/opencv/core/TermCriteria;Lorg/opencv/core/Mat;)D = FindTransformECC(OpenCV.Core.Mat, OpenCV.Core.Mat, OpenCV.Core.Mat, int, OpenCV.Core.TermCriteria, OpenCV.Core.Mat)
  meanShift(Lorg/opencv/core/Mat;Lorg/opencv/core/Rect;Lorg/opencv/core/TermCriteria;)I = MeanShift(OpenCV.Core.Mat, OpenCV.Core.Rect, OpenCV.Core.TermCriteria)
org/opencv/videoio/VideoCapture = OpenCV.VideoIO.VideoCapture
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  <init>(J)V = .ctor(long)
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;I)V = .ctor(string, int)
  nativeObj = NativeObj
  isOpened()Z = IsOpened
  get(I)D = Get(int)
  grab()Z = Grab()
  open(I)Z = Open(int)
  open(Ljava/lang/String;)Z = Open(string)
  open(Ljava/lang/String;I)Z = Open(string, int)
  read(Lorg/opencv/core/Mat;)Z = Read(OpenCV.Core.Mat)
  release()V = Release()
  retrieve(Lorg/opencv/core/Mat;)Z = Retrieve(OpenCV.Core.Mat)
  retrieve(Lorg/opencv/core/Mat;I)Z = Retrieve(OpenCV.Core.Mat, int)
  set(ID)Z = Set(int, double)
org/opencv/videoio/Videoio = OpenCV.VideoIO.Videoio
  <init>()V = .ctor()
  CAP_ANDROID = CapAndroid
  CAP_ANY = CapAny
  CAP_AVFOUNDATION = CapAvfoundation
  CAP_CMU1394 = CapCmu1394
  CAP_DC1394 = CapDc1394
  CAP_DSHOW = CapDshow
  CAP_FFMPEG = CapFfmpeg
  CAP_FIREWARE = CapFireware
  CAP_FIREWIRE = CapFirewire
  CAP_GIGANETIX = CapGiganetix
  CAP_GPHOTO2 = CapGphoto2
  CAP_GSTREAMER = CapGstreamer
  CAP_IEEE1394 = CapIeee1394
  CAP_IMAGES = CapImages
  CAP_INTELPERC = CapIntelperc
  CAP_INTELPERC_DEPTH_GENERATOR = CapIntelpercDepthGenerator
  CAP_INTELPERC_DEPTH_MAP = CapIntelpercDepthMap
  CAP_INTELPERC_GENERATORS_MASK = CapIntelpercGeneratorsMask
  CAP_INTELPERC_IMAGE = CapIntelpercImage
  CAP_INTELPERC_IMAGE_GENERATOR = CapIntelpercImageGenerator
  CAP_INTELPERC_IR_MAP = CapIntelpercIrMap
  CAP_INTELPERC_UVDEPTH_MAP = CapIntelpercUvdepthMap
  CAP_MODE_BGR = CapModeBgr
  CAP_MODE_GRAY = CapModeGray
  CAP_MODE_RGB = CapModeRgb
  CAP_MODE_YUYV = CapModeYuyv
  CAP_MSMF = CapMsmf
  CAP_OPENNI = CapOpenni
  CAP_OPENNI2 = CapOpenni2
  CAP_OPENNI2_ASUS = CapOpenni2Asus
  CAP_OPENNI_ASUS = CapOpenniAsus
  CAP_OPENNI_BGR_IMAGE = CapOpenniBgrImage
  CAP_OPENNI_DEPTH_GENERATOR = CapOpenniDepthGenerator
  CAP_OPENNI_DEPTH_GENERATOR_BASELINE = CapOpenniDepthGeneratorBaseline
  CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH = CapOpenniDepthGeneratorFocalLength
  CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION = CapOpenniDepthGeneratorRegistration
  CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON = CapOpenniDepthGeneratorRegistrationOn
  CAP_OPENNI_DEPTH_MAP = CapOpenniDepthMap
  CAP_OPENNI_DISPARITY_MAP = CapOpenniDisparityMap
  CAP_OPENNI_DISPARITY_MAP_32F = CapOpenniDisparityMap32f
  CAP_OPENNI_GENERATORS_MASK = CapOpenniGeneratorsMask
  CAP_OPENNI_GRAY_IMAGE = CapOpenniGrayImage
  CAP_OPENNI_IMAGE_GENERATOR = CapOpenniImageGenerator
  CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE = CapOpenniImageGeneratorOutputMode
  CAP_OPENNI_IMAGE_GENERATOR_PRESENT = CapOpenniImageGeneratorPresent
  CAP_OPENNI_POINT_CLOUD_MAP = CapOpenniPointCloudMap
  CAP_OPENNI_QVGA_30HZ = CapOpenniQvga30hz
  CAP_OPENNI_QVGA_60HZ = CapOpenniQvga60hz
  CAP_OPENNI_SXGA_15HZ = CapOpenniSxga15hz
  CAP_OPENNI_SXGA_30HZ = CapOpenniSxga30hz
  CAP_OPENNI_VALID_DEPTH_MASK = CapOpenniValidDepthMask
  CAP_OPENNI_VGA_30HZ = CapOpenniVga30hz
  CAP_PROP_APERTURE = CapPropAperture
  CAP_PROP_AUTO_EXPOSURE = CapPropAutoExposure
  CAP_PROP_AUTOFOCUS = CapPropAutofocus
  CAP_PROP_BACKLIGHT = CapPropBacklight
  CAP_PROP_BRIGHTNESS = CapPropBrightness
  CAP_PROP_BUFFERSIZE = CapPropBuffersize
  CAP_PROP_CONTRAST = CapPropContrast
  CAP_PROP_CONVERT_RGB = CapPropConvertRgb
  CAP_PROP_DC1394_MAX = CapPropDc1394Max
  CAP_PROP_DC1394_MODE_AUTO = CapPropDc1394ModeAuto
  CAP_PROP_DC1394_MODE_MANUAL = CapPropDc1394ModeManual
  CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO = CapPropDc1394ModeOnePushAuto
  CAP_PROP_DC1394_OFF = CapPropDc1394Off
  CAP_PROP_EXPOSURE = CapPropExposure
  CAP_PROP_EXPOSUREPROGRAM = CapPropExposureprogram
  CAP_PROP_FOCUS = CapPropFocus
  CAP_PROP_FORMAT = CapPropFormat
  CAP_PROP_FOURCC = CapPropFourcc
  CAP_PROP_FPS = CapPropFps
  CAP_PROP_FRAME_COUNT = CapPropFrameCount
  CAP_PROP_FRAME_HEIGHT = CapPropFrameHeight
  CAP_PROP_FRAME_WIDTH = CapPropFrameWidth
  CAP_PROP_GAIN = CapPropGain
  CAP_PROP_GAMMA = CapPropGamma
  CAP_PROP_GIGA_FRAME_HEIGH_MAX = CapPropGigaFrameHeighMax
  CAP_PROP_GIGA_FRAME_OFFSET_X = CapPropGigaFrameOffsetX
  CAP_PROP_GIGA_FRAME_OFFSET_Y = CapPropGigaFrameOffsetY
  CAP_PROP_GIGA_FRAME_SENS_HEIGH = CapPropGigaFrameSensHeigh
  CAP_PROP_GIGA_FRAME_SENS_WIDTH = CapPropGigaFrameSensWidth
  CAP_PROP_GIGA_FRAME_WIDTH_MAX = CapPropGigaFrameWidthMax
  CAP_PROP_GPHOTO2_COLLECT_MSGS = CapPropGphoto2CollectMsgs
  CAP_PROP_GPHOTO2_FLUSH_MSGS = CapPropGphoto2FlushMsgs
  CAP_PROP_GPHOTO2_PREVIEW = CapPropGphoto2Preview
  CAP_PROP_GPHOTO2_RELOAD_CONFIG = CapPropGphoto2ReloadConfig
  CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE = CapPropGphoto2ReloadOnChange
  CAP_PROP_GPHOTO2_WIDGET_ENUMERATE = CapPropGphoto2WidgetEnumerate
  CAP_PROP_GSTREAMER_QUEUE_LENGTH = CapPropGstreamerQueueLength
  CAP_PROP_GUID = CapPropGuid
  CAP_PROP_HUE = CapPropHue
  CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD = CapPropIntelpercDepthConfidenceThreshold
  CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ = CapPropIntelpercDepthFocalLengthHorz
  CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT = CapPropIntelpercDepthFocalLengthVert
  CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE = CapPropIntelpercDepthLowConfidenceValue
  CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE = CapPropIntelpercDepthSaturationValue
  CAP_PROP_INTELPERC_PROFILE_COUNT = CapPropIntelpercProfileCount
  CAP_PROP_INTELPERC_PROFILE_IDX = CapPropIntelpercProfileIdx
  CAP_PROP_IOS_DEVICE_EXPOSURE = CapPropIosDeviceExposure
  CAP_PROP_IOS_DEVICE_FLASH = CapPropIosDeviceFlash
  CAP_PROP_IOS_DEVICE_FOCUS = CapPropIosDeviceFocus
  CAP_PROP_IOS_DEVICE_TORCH = CapPropIosDeviceTorch
  CAP_PROP_IOS_DEVICE_WHITEBALANCE = CapPropIosDeviceWhitebalance
  CAP_PROP_IRIS = CapPropIris
  CAP_PROP_ISO_SPEED = CapPropIsoSpeed
  CAP_PROP_MODE = CapPropMode
  CAP_PROP_MONOCHROME = CapPropMonochrome
  CAP_PROP_OPENNI2_MIRROR = CapPropOpenni2Mirror
  CAP_PROP_OPENNI2_SYNC = CapPropOpenni2Sync
  CAP_PROP_OPENNI_APPROX_FRAME_SYNC = CapPropOpenniApproxFrameSync
  CAP_PROP_OPENNI_BASELINE = CapPropOpenniBaseline
  CAP_PROP_OPENNI_CIRCLE_BUFFER = CapPropOpenniCircleBuffer
  CAP_PROP_OPENNI_FOCAL_LENGTH = CapPropOpenniFocalLength
  CAP_PROP_OPENNI_FRAME_MAX_DEPTH = CapPropOpenniFrameMaxDepth
  CAP_PROP_OPENNI_GENERATOR_PRESENT = CapPropOpenniGeneratorPresent
  CAP_PROP_OPENNI_MAX_BUFFER_SIZE = CapPropOpenniMaxBufferSize
  CAP_PROP_OPENNI_MAX_TIME_DURATION = CapPropOpenniMaxTimeDuration
  CAP_PROP_OPENNI_OUTPUT_MODE = CapPropOpenniOutputMode
  CAP_PROP_OPENNI_REGISTRATION = CapPropOpenniRegistration
  CAP_PROP_OPENNI_REGISTRATION_ON = CapPropOpenniRegistrationOn
  CAP_PROP_PAN = CapPropPan
  CAP_PROP_POS_AVI_RATIO = CapPropPosAviRatio
  CAP_PROP_POS_FRAMES = CapPropPosFrames
  CAP_PROP_POS_MSEC = CapPropPosMsec
  CAP_PROP_PVAPI_BINNINGX = CapPropPvapiBinningx
  CAP_PROP_PVAPI_BINNINGY = CapPropPvapiBinningy
  CAP_PROP_PVAPI_DECIMATIONHORIZONTAL = CapPropPvapiDecimationhorizontal
  CAP_PROP_PVAPI_DECIMATIONVERTICAL = CapPropPvapiDecimationvertical
  CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE = CapPropPvapiFramestarttriggermode
  CAP_PROP_PVAPI_MULTICASTIP = CapPropPvapiMulticastip
  CAP_PROP_PVAPI_PIXELFORMAT = CapPropPvapiPixelformat
  CAP_PROP_RECTIFICATION = CapPropRectification
  CAP_PROP_ROLL = CapPropRoll
  CAP_PROP_SATURATION = CapPropSaturation
  CAP_PROP_SETTINGS = CapPropSettings
  CAP_PROP_SHARPNESS = CapPropSharpness
  CAP_PROP_SPEED = CapPropSpeed
  CAP_PROP_TEMPERATURE = CapPropTemperature
  CAP_PROP_TILT = CapPropTilt
  CAP_PROP_TRIGGER = CapPropTrigger
  CAP_PROP_TRIGGER_DELAY = CapPropTriggerDelay
  CAP_PROP_VIEWFINDER = CapPropViewfinder
  CAP_PROP_WHITE_BALANCE_BLUE_U = CapPropWhiteBalanceBlueU
  CAP_PROP_WHITE_BALANCE_RED_V = CapPropWhiteBalanceRedV
  CAP_PROP_XI_AEAG = CapPropXiAeag
  CAP_PROP_XI_AEAG_LEVEL = CapPropXiAeagLevel
  CAP_PROP_XI_AE_MAX_LIMIT = CapPropXiAeMaxLimit
  CAP_PROP_XI_AG_MAX_LIMIT = CapPropXiAgMaxLimit
  CAP_PROP_XI_AUTO_WB = CapPropXiAutoWb
  CAP_PROP_XI_DATA_FORMAT = CapPropXiDataFormat
  CAP_PROP_XI_DOWNSAMPLING = CapPropXiDownsampling
  CAP_PROP_XI_EXP_PRIORITY = CapPropXiExpPriority
  CAP_PROP_XI_GPI_LEVEL = CapPropXiGpiLevel
  CAP_PROP_XI_GPI_MODE = CapPropXiGpiMode
  CAP_PROP_XI_GPI_SELECTOR = CapPropXiGpiSelector
  CAP_PROP_XI_GPO_MODE = CapPropXiGpoMode
  CAP_PROP_XI_GPO_SELECTOR = CapPropXiGpoSelector
  CAP_PROP_XI_LED_MODE = CapPropXiLedMode
  CAP_PROP_XI_LED_SELECTOR = CapPropXiLedSelector
  CAP_PROP_XI_MANUAL_WB = CapPropXiManualWb
  CAP_PROP_XI_OFFSET_X = CapPropXiOffsetX
  CAP_PROP_XI_OFFSET_Y = CapPropXiOffsetY
  CAP_PROP_XI_TIMEOUT = CapPropXiTimeout
  CAP_PROP_XI_TRG_SOFTWARE = CapPropXiTrgSoftware
  CAP_PROP_XI_TRG_SOURCE = CapPropXiTrgSource
  CAP_PROP_ZOOM = CapPropZoom
  CAP_PVAPI = CapPvapi
  CAP_PVAPI_DECIMATION_2OUTOF16 = CapPvapiDecimation2outof16
  CAP_PVAPI_DECIMATION_2OUTOF4 = CapPvapiDecimation2outof4
  CAP_PVAPI_DECIMATION_2OUTOF8 = CapPvapiDecimation2outof8
  CAP_PVAPI_DECIMATION_OFF = CapPvapiDecimationOff
  CAP_PVAPI_FSTRIGMODE_FIXEDRATE = CapPvapiFstrigmodeFixedrate
  CAP_PVAPI_FSTRIGMODE_FREERUN = CapPvapiFstrigmodeFreerun
  CAP_PVAPI_FSTRIGMODE_SOFTWARE = CapPvapiFstrigmodeSoftware
  CAP_PVAPI_FSTRIGMODE_SYNCIN1 = CapPvapiFstrigmodeSyncin1
  CAP_PVAPI_FSTRIGMODE_SYNCIN2 = CapPvapiFstrigmodeSyncin2
  CAP_PVAPI_PIXELFORMAT_BAYER16 = CapPvapiPixelformatBayer16
  CAP_PVAPI_PIXELFORMAT_BAYER8 = CapPvapiPixelformatBayer8
  CAP_PVAPI_PIXELFORMAT_BGR24 = CapPvapiPixelformatBgr24
  CAP_PVAPI_PIXELFORMAT_BGRA32 = CapPvapiPixelformatBgra32
  CAP_PVAPI_PIXELFORMAT_MONO16 = CapPvapiPixelformatMono16
  CAP_PVAPI_PIXELFORMAT_MONO8 = CapPvapiPixelformatMono8
  CAP_PVAPI_PIXELFORMAT_RGB24 = CapPvapiPixelformatRgb24
  CAP_PVAPI_PIXELFORMAT_RGBA32 = CapPvapiPixelformatRgba32
  CAP_QT = CapQt
  CAP_UNICAP = CapUnicap
  CAP_V4L = CapV4l
  CAP_V4L2 = CapV4l2
  CAP_VFW = CapVfw
  CAP_WINRT = CapWinrt
  CAP_XIAPI = CapXiapi
  CV_CAP_ANDROID = CvCapAndroid
  CV_CAP_ANDROID_BACK = CvCapAndroidBack
  CV_CAP_ANDROID_FRONT = CvCapAndroidFront
  CV_CAP_AVFOUNDATION = CvCapAvfoundation
  CV_CAP_FFMPEG = CvCapFfmpeg
  CV_CAP_GIGANETIX = CvCapGiganetix
  CV_CAP_GPHOTO2 = CvCapGphoto2
  CV_CAP_GSTREAMER = CvCapGstreamer
  CV_CAP_IMAGES = CvCapImages
  CV_CAP_MODE_BGR = CvCapModeBgr
  CV_CAP_MODE_GRAY = CvCapModeGray
  CV_CAP_MODE_RGB = CvCapModeRgb
  CV_CAP_MODE_YUYV = CvCapModeYuyv
  CV_CAP_MSMF = CvCapMsmf
  CV_CAP_PROP_ANDROID_ANTIBANDING = CvCapPropAndroidAntibanding
  CV_CAP_PROP_ANDROID_EXPOSE_LOCK = CvCapPropAndroidExposeLock
  CV_CAP_PROP_ANDROID_FLASH_MODE = CvCapPropAndroidFlashMode
  CV_CAP_PROP_ANDROID_FOCAL_LENGTH = CvCapPropAndroidFocalLength
  CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_FAR = CvCapPropAndroidFocusDistanceFar
  CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_NEAR = CvCapPropAndroidFocusDistanceNear
  CV_CAP_PROP_ANDROID_FOCUS_DISTANCE_OPTIMAL = CvCapPropAndroidFocusDistanceOptimal
  CV_CAP_PROP_ANDROID_FOCUS_MODE = CvCapPropAndroidFocusMode
  CV_CAP_PROP_ANDROID_WHITE_BALANCE = CvCapPropAndroidWhiteBalance
  CV_CAP_PROP_ANDROID_WHITEBALANCE_LOCK = CvCapPropAndroidWhitebalanceLock
  CV_CAP_PROP_APERTURE = CvCapPropAperture
  CV_CAP_PROP_AUTOFOCUS = CvCapPropAutofocus
  CV_CAP_PROP_AUTOGRAB = CvCapPropAutograb
  CV_CAP_PROP_BACKLIGHT = CvCapPropBacklight
  CV_CAP_PROP_BUFFERSIZE = CvCapPropBuffersize
  CV_CAP_PROP_FOCUS = CvCapPropFocus
  CV_CAP_PROP_FRAME_HEIGHT = CvCapPropFrameHeight
  CV_CAP_PROP_FRAME_WIDTH = CvCapPropFrameWidth
  CV_CAP_PROP_GIGA_FRAME_HEIGH_MAX = CvCapPropGigaFrameHeighMax
  CV_CAP_PROP_GIGA_FRAME_OFFSET_X = CvCapPropGigaFrameOffsetX
  CV_CAP_PROP_GIGA_FRAME_OFFSET_Y = CvCapPropGigaFrameOffsetY
  CV_CAP_PROP_GIGA_FRAME_SENS_HEIGH = CvCapPropGigaFrameSensHeigh
  CV_CAP_PROP_GIGA_FRAME_SENS_WIDTH = CvCapPropGigaFrameSensWidth
  CV_CAP_PROP_GIGA_FRAME_WIDTH_MAX = CvCapPropGigaFrameWidthMax
  CV_CAP_PROP_GPHOTO2_COLLECT_MSGS = CvCapPropGphoto2CollectMsgs
  CV_CAP_PROP_GPHOTO2_FLUSH_MSGS = CvCapPropGphoto2FlushMsgs
  CV_CAP_PROP_GPHOTO2_PREVIEW = CvCapPropGphoto2Preview
  CV_CAP_PROP_GPHOTO2_RELOAD_CONFIG = CvCapPropGphoto2ReloadConfig
  CV_CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE = CvCapPropGphoto2ReloadOnChange
  CV_CAP_PROP_GPHOTO2_WIDGET_ENUMERATE = CvCapPropGphoto2WidgetEnumerate
  CV_CAP_PROP_GUID = CvCapPropGuid
  CV_CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD = CvCapPropIntelpercDepthConfidenceThreshold
  CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ = CvCapPropIntelpercDepthFocalLengthHorz
  CV_CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT = CvCapPropIntelpercDepthFocalLengthVert
  CV_CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE = CvCapPropIntelpercDepthLowConfidenceValue
  CV_CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE = CvCapPropIntelpercDepthSaturationValue
  CV_CAP_PROP_INTELPERC_PROFILE_COUNT = CvCapPropIntelpercProfileCount
  CV_CAP_PROP_INTELPERC_PROFILE_IDX = CvCapPropIntelpercProfileIdx
  CV_CAP_PROP_IOS_DEVICE_EXPOSURE = CvCapPropIosDeviceExposure
  CV_CAP_PROP_IOS_DEVICE_FLASH = CvCapPropIosDeviceFlash
  CV_CAP_PROP_IOS_DEVICE_FOCUS = CvCapPropIosDeviceFocus
  CV_CAP_PROP_IOS_DEVICE_TORCH = CvCapPropIosDeviceTorch
  CV_CAP_PROP_IOS_DEVICE_WHITEBALANCE = CvCapPropIosDeviceWhitebalance
  CV_CAP_PROP_IRIS = CvCapPropIris
  CV_CAP_PROP_ISO_SPEED = CvCapPropIsoSpeed
  CV_CAP_PROP_OPENNI2_MIRROR = CvCapPropOpenni2Mirror
  CV_CAP_PROP_OPENNI2_SYNC = CvCapPropOpenni2Sync
  CV_CAP_PROP_PAN = CvCapPropPan
  CV_CAP_PROP_PREVIEW_FORMAT = CvCapPropPreviewFormat
  CV_CAP_PROP_PVAPI_BINNINGX = CvCapPropPvapiBinningx
  CV_CAP_PROP_PVAPI_BINNINGY = CvCapPropPvapiBinningy
  CV_CAP_PROP_PVAPI_DECIMATIONHORIZONTAL = CvCapPropPvapiDecimationhorizontal
  CV_CAP_PROP_PVAPI_DECIMATIONVERTICAL = CvCapPropPvapiDecimationvertical
  CV_CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE = CvCapPropPvapiFramestarttriggermode
  CV_CAP_PROP_PVAPI_PIXELFORMAT = CvCapPropPvapiPixelformat
  CV_CAP_PROP_ROLL = CvCapPropRoll
  CV_CAP_PROP_SAR_DEN = CvCapPropSarDen
  CV_CAP_PROP_SAR_NUM = CvCapPropSarNum
  CV_CAP_PROP_SETTINGS = CvCapPropSettings
  CV_CAP_PROP_SPEED = CvCapPropSpeed
  CV_CAP_PROP_TILT = CvCapPropTilt
  CV_CAP_PROP_VIEWFINDER = CvCapPropViewfinder
  CV_CAP_PROP_XI_ACQ_BUFFER_SIZE = CvCapPropXiAcqBufferSize
  CV_CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT = CvCapPropXiAcqBufferSizeUnit
  CV_CAP_PROP_XI_ACQ_FRAME_BURST_COUNT = CvCapPropXiAcqFrameBurstCount
  CV_CAP_PROP_XI_ACQ_TIMING_MODE = CvCapPropXiAcqTimingMode
  CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT = CvCapPropXiAcqTransportBufferCommit
  CV_CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE = CvCapPropXiAcqTransportBufferSize
  CV_CAP_PROP_XI_AEAG = CvCapPropXiAeag
  CV_CAP_PROP_XI_AEAG_LEVEL = CvCapPropXiAeagLevel
  CV_CAP_PROP_XI_AEAG_ROI_HEIGHT = CvCapPropXiAeagRoiHeight
  CV_CAP_PROP_XI_AEAG_ROI_OFFSET_X = CvCapPropXiAeagRoiOffsetX
  CV_CAP_PROP_XI_AEAG_ROI_OFFSET_Y = CvCapPropXiAeagRoiOffsetY
  CV_CAP_PROP_XI_AEAG_ROI_WIDTH = CvCapPropXiAeagRoiWidth
  CV_CAP_PROP_XI_AE_MAX_LIMIT = CvCapPropXiAeMaxLimit
  CV_CAP_PROP_XI_AG_MAX_LIMIT = CvCapPropXiAgMaxLimit
  CV_CAP_PROP_XI_APPLY_CMS = CvCapPropXiApplyCms
  CV_CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION = CvCapPropXiAutoBandwidthCalculation
  CV_CAP_PROP_XI_AUTO_WB = CvCapPropXiAutoWb
  CV_CAP_PROP_XI_AVAILABLE_BANDWIDTH = CvCapPropXiAvailableBandwidth
  CV_CAP_PROP_XI_BINNING_HORIZONTAL = CvCapPropXiBinningHorizontal
  CV_CAP_PROP_XI_BINNING_PATTERN = CvCapPropXiBinningPattern
  CV_CAP_PROP_XI_BINNING_SELECTOR = CvCapPropXiBinningSelector
  CV_CAP_PROP_XI_BINNING_VERTICAL = CvCapPropXiBinningVertical
  CV_CAP_PROP_XI_BPC = CvCapPropXiBpc
  CV_CAP_PROP_XI_BUFFER_POLICY = CvCapPropXiBufferPolicy
  CV_CAP_PROP_XI_BUFFERS_QUEUE_SIZE = CvCapPropXiBuffersQueueSize
  CV_CAP_PROP_XI_CC_MATRIX_00 = CvCapPropXiCcMatrix00
  CV_CAP_PROP_XI_CC_MATRIX_01 = CvCapPropXiCcMatrix01
  CV_CAP_PROP_XI_CC_MATRIX_02 = CvCapPropXiCcMatrix02
  CV_CAP_PROP_XI_CC_MATRIX_03 = CvCapPropXiCcMatrix03
  CV_CAP_PROP_XI_CC_MATRIX_10 = CvCapPropXiCcMatrix10
  CV_CAP_PROP_XI_CC_MATRIX_11 = CvCapPropXiCcMatrix11
  CV_CAP_PROP_XI_CC_MATRIX_12 = CvCapPropXiCcMatrix12
  CV_CAP_PROP_XI_CC_MATRIX_13 = CvCapPropXiCcMatrix13
  CV_CAP_PROP_XI_CC_MATRIX_20 = CvCapPropXiCcMatrix20
  CV_CAP_PROP_XI_CC_MATRIX_21 = CvCapPropXiCcMatrix21
  CV_CAP_PROP_XI_CC_MATRIX_22 = CvCapPropXiCcMatrix22
  CV_CAP_PROP_XI_CC_MATRIX_23 = CvCapPropXiCcMatrix23
  CV_CAP_PROP_XI_CC_MATRIX_30 = CvCapPropXiCcMatrix30
  CV_CAP_PROP_XI_CC_MATRIX_31 = CvCapPropXiCcMatrix31
  CV_CAP_PROP_XI_CC_MATRIX_32 = CvCapPropXiCcMatrix32
  CV_CAP_PROP_XI_CC_MATRIX_33 = CvCapPropXiCcMatrix33
  CV_CAP_PROP_XI_CHIP_TEMP = CvCapPropXiChipTemp
  CV_CAP_PROP_XI_CMS = CvCapPropXiCms
  CV_CAP_PROP_XI_COLOR_FILTER_ARRAY = CvCapPropXiColorFilterArray
  CV_CAP_PROP_XI_COLUMN_FPN_CORRECTION = CvCapPropXiColumnFpnCorrection
  CV_CAP_PROP_XI_COOLING = CvCapPropXiCooling
  CV_CAP_PROP_XI_COUNTER_SELECTOR = CvCapPropXiCounterSelector
  CV_CAP_PROP_XI_COUNTER_VALUE = CvCapPropXiCounterValue
  CV_CAP_PROP_XI_DATA_FORMAT = CvCapPropXiDataFormat
  CV_CAP_PROP_XI_DEBOUNCE_EN = CvCapPropXiDebounceEn
  CV_CAP_PROP_XI_DEBOUNCE_POL = CvCapPropXiDebouncePol
  CV_CAP_PROP_XI_DEBOUNCE_T0 = CvCapPropXiDebounceT0
  CV_CAP_PROP_XI_DEBOUNCE_T1 = CvCapPropXiDebounceT1
  CV_CAP_PROP_XI_DEBUG_LEVEL = CvCapPropXiDebugLevel
  CV_CAP_PROP_XI_DECIMATION_HORIZONTAL = CvCapPropXiDecimationHorizontal
  CV_CAP_PROP_XI_DECIMATION_PATTERN = CvCapPropXiDecimationPattern
  CV_CAP_PROP_XI_DECIMATION_SELECTOR = CvCapPropXiDecimationSelector
  CV_CAP_PROP_XI_DECIMATION_VERTICAL = CvCapPropXiDecimationVertical
  CV_CAP_PROP_XI_DEFAULT_CC_MATRIX = CvCapPropXiDefaultCcMatrix
  CV_CAP_PROP_XI_DEVICE_MODEL_ID = CvCapPropXiDeviceModelId
  CV_CAP_PROP_XI_DEVICE_RESET = CvCapPropXiDeviceReset
  CV_CAP_PROP_XI_DEVICE_SN = CvCapPropXiDeviceSn
  CV_CAP_PROP_XI_DOWNSAMPLING = CvCapPropXiDownsampling
  CV_CAP_PROP_XI_DOWNSAMPLING_TYPE = CvCapPropXiDownsamplingType
  CV_CAP_PROP_XI_EXPOSURE = CvCapPropXiExposure
  CV_CAP_PROP_XI_EXPOSURE_BURST_COUNT = CvCapPropXiExposureBurstCount
  CV_CAP_PROP_XI_EXP_PRIORITY = CvCapPropXiExpPriority
  CV_CAP_PROP_XI_FFS_ACCESS_KEY = CvCapPropXiFfsAccessKey
  CV_CAP_PROP_XI_FRAMERATE = CvCapPropXiFramerate
  CV_CAP_PROP_XI_FREE_FFS_SIZE = CvCapPropXiFreeFfsSize
  CV_CAP_PROP_XI_GAIN = CvCapPropXiGain
  CV_CAP_PROP_XI_GAIN_SELECTOR = CvCapPropXiGainSelector
  CV_CAP_PROP_XI_GAMMAC = CvCapPropXiGammac
  CV_CAP_PROP_XI_GAMMAY = CvCapPropXiGammay
  CV_CAP_PROP_XI_GPI_LEVEL = CvCapPropXiGpiLevel
  CV_CAP_PROP_XI_GPI_MODE = CvCapPropXiGpiMode
  CV_CAP_PROP_XI_GPI_SELECTOR = CvCapPropXiGpiSelector
  CV_CAP_PROP_XI_GPO_MODE = CvCapPropXiGpoMode
  CV_CAP_PROP_XI_GPO_SELECTOR = CvCapPropXiGpoSelector
  CV_CAP_PROP_XI_HDR = CvCapPropXiHdr
  CV_CAP_PROP_XI_HDR_KNEEPOINT_COUNT = CvCapPropXiHdrKneepointCount
  CV_CAP_PROP_XI_HDR_T1 = CvCapPropXiHdrT1
  CV_CAP_PROP_XI_HDR_T2 = CvCapPropXiHdrT2
  CV_CAP_PROP_XI_HEIGHT = CvCapPropXiHeight
  CV_CAP_PROP_XI_HOUS_TEMP = CvCapPropXiHousTemp
  CV_CAP_PROP_XI_HW_REVISION = CvCapPropXiHwRevision
  CV_CAP_PROP_XI_IMAGE_BLACK_LEVEL = CvCapPropXiImageBlackLevel
  CV_CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH = CvCapPropXiImageDataBitDepth
  CV_CAP_PROP_XI_IMAGE_DATA_FORMAT = CvCapPropXiImageDataFormat
  CV_CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA = CvCapPropXiImageDataFormatRgb32Alpha
  CV_CAP_PROP_XI_IMAGE_IS_COLOR = CvCapPropXiImageIsColor
  CV_CAP_PROP_XI_IMAGE_PAYLOAD_SIZE = CvCapPropXiImagePayloadSize
  CV_CAP_PROP_XI_IS_COOLED = CvCapPropXiIsCooled
  CV_CAP_PROP_XI_IS_DEVICE_EXIST = CvCapPropXiIsDeviceExist
  CV_CAP_PROP_XI_KNEEPOINT1 = CvCapPropXiKneepoint1
  CV_CAP_PROP_XI_KNEEPOINT2 = CvCapPropXiKneepoint2
  CV_CAP_PROP_XI_LED_MODE = CvCapPropXiLedMode
  CV_CAP_PROP_XI_LED_SELECTOR = CvCapPropXiLedSelector
  CV_CAP_PROP_XI_LENS_APERTURE_VALUE = CvCapPropXiLensApertureValue
  CV_CAP_PROP_XI_LENS_FEATURE = CvCapPropXiLensFeature
  CV_CAP_PROP_XI_LENS_FEATURE_SELECTOR = CvCapPropXiLensFeatureSelector
  CV_CAP_PROP_XI_LENS_FOCAL_LENGTH = CvCapPropXiLensFocalLength
  CV_CAP_PROP_XI_LENS_FOCUS_DISTANCE = CvCapPropXiLensFocusDistance
  CV_CAP_PROP_XI_LENS_FOCUS_MOVE = CvCapPropXiLensFocusMove
  CV_CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE = CvCapPropXiLensFocusMovementValue
  CV_CAP_PROP_XI_LENS_MODE = CvCapPropXiLensMode
  CV_CAP_PROP_XI_LIMIT_BANDWIDTH = CvCapPropXiLimitBandwidth
  CV_CAP_PROP_XI_LUT_EN = CvCapPropXiLutEn
  CV_CAP_PROP_XI_LUT_INDEX = CvCapPropXiLutIndex
  CV_CAP_PROP_XI_LUT_VALUE = CvCapPropXiLutValue
  CV_CAP_PROP_XI_MANUAL_WB = CvCapPropXiManualWb
  CV_CAP_PROP_XI_OFFSET_X = CvCapPropXiOffsetX
  CV_CAP_PROP_XI_OFFSET_Y = CvCapPropXiOffsetY
  CV_CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH = CvCapPropXiOutputDataBitDepth
  CV_CAP_PROP_XI_OUTPUT_DATA_PACKING = CvCapPropXiOutputDataPacking
  CV_CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE = CvCapPropXiOutputDataPackingType
  CV_CAP_PROP_XI_RECENT_FRAME = CvCapPropXiRecentFrame
  CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ = CvCapPropXiSensorClockFreqHz
  CV_CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX = CvCapPropXiSensorClockFreqIndex
  CV_CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH = CvCapPropXiSensorDataBitDepth
  CV_CAP_PROP_XI_SENSOR_FEATURE_SELECTOR = CvCapPropXiSensorFeatureSelector
  CV_CAP_PROP_XI_SENSOR_FEATURE_VALUE = CvCapPropXiSensorFeatureValue
  CV_CAP_PROP_XI_SENSOR_MODE = CvCapPropXiSensorMode
  CV_CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT = CvCapPropXiSensorOutputChannelCount
  CV_CAP_PROP_XI_SENSOR_TAPS = CvCapPropXiSensorTaps
  CV_CAP_PROP_XI_SHARPNESS = CvCapPropXiSharpness
  CV_CAP_PROP_XI_SHUTTER_TYPE = CvCapPropXiShutterType
  CV_CAP_PROP_XI_TARGET_TEMP = CvCapPropXiTargetTemp
  CV_CAP_PROP_XI_TIMEOUT = CvCapPropXiTimeout
  CV_CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT = CvCapPropXiTransportPixelFormat
  CV_CAP_PROP_XI_TRG_DELAY = CvCapPropXiTrgDelay
  CV_CAP_PROP_XI_TRG_SELECTOR = CvCapPropXiTrgSelector
  CV_CAP_PROP_XI_TRG_SOFTWARE = CvCapPropXiTrgSoftware
  CV_CAP_PROP_XI_TRG_SOURCE = CvCapPropXiTrgSource
  CV_CAP_PROP_XI_TS_RST_MODE = CvCapPropXiTsRstMode
  CV_CAP_PROP_XI_TS_RST_SOURCE = CvCapPropXiTsRstSource
  CV_CAP_PROP_XI_USED_FFS_SIZE = CvCapPropXiUsedFfsSize
  CV_CAP_PROP_XI_WB_KB = CvCapPropXiWbKb
  CV_CAP_PROP_XI_WB_KG = CvCapPropXiWbKg
  CV_CAP_PROP_XI_WB_KR = CvCapPropXiWbKr
  CV_CAP_PROP_XI_WIDTH = CvCapPropXiWidth
  CV_CAP_PROP_ZOOM = CvCapPropZoom
  CV_CAP_XIAPI = CvCapXiapi
  VIDEOWRITER_PROP_FRAMEBYTES = VideowriterPropFramebytes
  VIDEOWRITER_PROP_NSTRIPES = VideowriterPropNstripes
  VIDEOWRITER_PROP_QUALITY = VideowriterPropQuality
org/opencv/videoio/VideoWriter = OpenCV.VideoIO.VideoWriter
  <init>()V = .ctor()
  <init>(J)V = .ctor(long)
  <init>(Ljava/lang/String;IDLorg/opencv/core/Size;)V = .ctor(string, int, double, OpenCV.Core.Size)
  <init>(Ljava/lang/String;IDLorg/opencv/core/Size;Z)V = .ctor(string, int, double, OpenCV.Core.Size, bool)
  nativeObj = NativeObj
  isOpened()Z = IsOpened
  fourcc(CCCC)I = Fourcc(char, char, char, char)
  get(I)D = Get(int)
  open(Ljava/lang/String;IDLorg/opencv/core/Size;)Z = Open(string, int, double, OpenCV.Core.Size)
  open(Ljava/lang/String;IDLorg/opencv/core/Size;Z)Z = Open(string, int, double, OpenCV.Core.Size, bool)
  release()V = Release()
  set(ID)Z = Set(int, double)
  write(Lorg/opencv/core/Mat;)V = Write(OpenCV.Core.Mat)
